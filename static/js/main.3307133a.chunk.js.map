{"version":3,"sources":["services/perm-service.ts","components/utils/buttons/circle-button.tsx","components/navigation/navbar.tsx","services/event-service.ts","store/ui.ts","components/utils/category.tsx","components/modals/modal.tsx","store/utils/rest-headers.ts","store/api.ts","store/utils/filter.ts","store/channels.ts","components/utils/buttons/normal-button.tsx","components/utils/react/react-shush-error.ts","components/utils/input/input.tsx","components/utils/save-changes.tsx","components/modals/channel-settings/channel-settings-overview.tsx","store/guilds.ts","components/ctx-menus/dev-mode-menu-section.tsx","components/ctx-menus/role-menu.tsx","components/utils/tab-link.tsx","components/modals/channel-settings/scarce-select.tsx","components/modals/channel-settings/channel-settings-perms.tsx","components/utils/buttons/esc-button.tsx","store/members.ts","store/roles.ts","store/utils/reduce.ts","hooks/use-perms.ts","components/utils/nav-tabs.tsx","components/modals/channel-settings/channel-settings.tsx","components/modals/create-channel.tsx","components/modals/create-guild.tsx","store/invites.ts","components/modals/create-invite.tsx","components/modals/guild-settings/guild-settings-overview.tsx","components/utils/input/toggle.tsx","components/modals/guild-settings/role-permissions.tsx","components/modals/guild-settings/guild-settings-roles.tsx","components/modals/guild-settings/guild-settings-invites.tsx","components/modals/guild-settings/guild-settings.tsx","components/modals/image-preview.tsx","components/utils/image.tsx","components/navigation/sidebar/sidebar-icon.tsx","components/user/username.tsx","components/modals/user-profile.tsx","store/config.ts","store/meta.ts","store/users.ts","components/modals/user-settings/user-settings-overview.tsx","store/auth.ts","components/modals/user-settings/user-settings-security.tsx","components/modals/user-settings/user-settings.tsx","services/ws-service.ts","store/typing.ts","services/voice-service.ts","store/messages.ts","store/pings.ts","components/ws-listener.tsx","components/pages/page-wrapper.tsx","assets/home/chat.svg","assets/home/devices.svg","assets/home/friends.svg","assets/home/secure.svg","components/pages/home-page.tsx","components/navigation/app-navbar.tsx","components/navigation/sidebar/sidebar-footer.tsx","components/utils/dropdown.tsx","components/dropdowns/guild-dropdown.tsx","components/ctx-menus/channel-menu.tsx","components/navigation/sidebar/channel-tabs.tsx","components/navigation/sidebar/sidebar-content.tsx","components/ctx-menus/guild-menu.tsx","components/navigation/sidebar/sidebar-icons.tsx","components/navigation/sidebar/sidebar.tsx","components/channel/message/message-toolbar.tsx","components/ctx-menus/message-menu.tsx","components/channel/message-box.tsx","../../types/patterns.ts","components/channel/message/message-content.tsx","components/channel/message/message-header.tsx","components/channel/message/message.tsx","components/channel/text-channel-header.tsx","components/skeleton/skeleton-message.tsx","components/channel/text-based-channel.tsx","components/ctx-menus/guild-member/role-manager.tsx","components/ctx-menus/guild-member/guild-member-menu.tsx","components/user/member-list.tsx","components/pages/guild-page.tsx","components/pages/auth/verify-code-input.tsx","components/pages/auth/login-page.tsx","components/pages/auth/register-page.tsx","components/pages/overview-page.tsx","components/pages/auth/logout-page.tsx","store/actions/fetch-entities.ts","components/pages/loading-page.tsx","components/routing/private-route.tsx","components/pages/not-found-page.tsx","components/pages/auth/verify-page.tsx","components/app.tsx","reportWebVitals.ts","store/middleware/rest.ts","store/middleware/ws.ts","index.tsx","store/configure-store.ts"],"names":["CircleButton","props","className","classNames","children","Navbar","user","useSelector","s","auth","to","events","EventEmitter","slice","createSlice","name","initialState","reducers","startedEditingMessage","state","payload","editingMessageId","stoppedEditingMessage","focusedResource","activeResource","focusedInvite","activeInvite","focusedUser","activeUser","pageSwitched","activeChannel","channel","activeGuild","guild","openedModal","openModal","closedModal","toggleDropdown","openDropdown","toggleSaveChanges","saveChangesOpen","actions","openSaveChanges","isOpen","dispatch","getState","ui","openUserProfile","openDialog","dialog","emit","closeModal","Category","title","count","undefined","sizeClass","Modal","typeName","size","useDispatch","closeSnackbar","useSnackbar","appElement","document","querySelector","onRequestClose","headers","token","localStorage","getItem","restCallBegan","createAction","restCallSucceded","restCallFailed","wsCallBegan","wsCallSucceded","wsCallFailed","uploadFile","file","callback","formData","FormData","append","method","url","data","unique","arr","old","some","e","id","fetched","channels","push","filter","created","deleted","index","findIndex","c","channelId","splice","updated","Object","assign","partialChannel","deleteChannel","api","event","updateChannel","getChannel","createSelector","entities","find","NormalButton","filterProps","titleName","initialValue","Input","label","register","options","type","autoFocus","disabled","htmlFor","SaveChanges","enqueueSnackbar","useEffect","anchorOrigin","vertical","horizontal","content","key","persist","onClickSave","onSave","onClickReset","obj","setValue","style","width","onClick","ChannelSettingsOverview","useForm","handleSubmit","onChange","value","summary","window","confirm","guilds","g","guildId","partialGuild","u","updateGuild","getGuild","getGuildChannels","getGuildRoles","roles","role","r","DevModeMenuSection","ids","map","icon","faIdCard","RoleMenu","devMode","config","color","TabLink","tab","setTab","saveChanges","backgroundColor","angrySaveChanges","ScarceSelect","colorStyles","singleValue","display","control","borderRadius","option","styles","cursor","input","menu","multiValue","indicatorSeparator","indicatorsContainer","float","multiValueLabel","placeholder","unadded","mapOptions","noOptionsMessage","ChannelSettingsPerms","useParams","byPosition","a","b","position","allRoles","sort","defaultOverride","overrides","useState","activeOverride","setOverride","unaddedRoles","o","roleId","overrideRoles","activeRoleId","setActiveRoleId","RoleDetails","alreadyActive","select","allow","deny","JSON","parse","stringify","EscButton","faTimes","members","added","member","removed","m","memberId","partialMember","getMember","userId","getSelfMember","partialRole","getRoles","includes","getMemberHighestRole","k","roleIds","reduce","acc","val","General","Text","Voice","PermissionTypes","VIEW_CHANNELS","CREATE_INVITE","SEND_MESSAGES","READ_MESSAGES","PermService","description","general","text","permission","ownerId","this","hasPerm","getTotalPerms","All","cumulativeAllowPerms","prev","curr","cumulativeDenyPerms","permNumber","canInherently","can","isAllowedByOverride","isDeniedByOverride","permissions","totalPerms","Boolean","ADMINISTRATOR","prereq","managedUserId","userMember","memberIsHigher","canManage","myRoles","theirRoles","max","myHighestRole","theirHighestRole","selfIsOwner","selfHasHigherRole","TypeError","usePerms","useStore","NavTabs","tabs","predicate","linkStyle","activeLinkStyle","t","ChannelSettings","perms","perm","CreateChannel","types","onSubmit","createChannel","defaultValue","CreateGuild","register2","handleSubmit2","inviteCode","list","invite","CreateInvite","navigator","clipboard","writeText","GuildSettingsOverview","accept","iconURL","currentTarget","files","uploadCallback","uploadGuildIcon","Toggle","checked","RolePermissions","setPerms","setRoleValue","fullySetPerms","has","PermToggle","category","permName","on","keys","defaultPermissions","GuildSettingsRoles","getValues","activeRole","hoisted","setHoisted","permsService","deleteRole","selfIsHigher","createRole","updateRole","GuildSettingsInvites","invites","i","getGuildInvites","Invites","length","GuildSettings","resource","fullURL","process","src","onError","onerror","href","target","Image","SidebarIcon","imageURL","classes","location","useLocation","getAbbr","split","n","join","Icon","alt","isActive","pathname","startsWith","activeClasses","Username","highestRole","userOwnsGuild","discrim","discriminator","toString","padStart","isOnline","status","UserPresence","blob","border","avatarURL","username","faCrown","UserProfile","selfUser","badgeIcons","faBug","faSun","faGavel","faVideo","UserBadges","badges","UserInfo","createdAt","moment","format","UserMutualGuilds","store","mutualGuilds","guildIds","fontWeight","padding","margin","borderBottom","get","set","setItem","memberListToggled","toggleDevMode","toggleMemberList","fetchedEntities","hasListenedToWS","userCount","NaN","meta","listenedToWS","ping","updatedUserCount","users","partialUser","updateSelf","getUser","UserSettingsOverview","email","uploadUserAvatar","stopPropagation","attemptedLogin","shouldVerify","ready","updatedUser","loggedIn","loggedOut","logoutUser","removeItem","sendVerifyCode","code","onSuccess","message","variant","UserSettingsSecurity","passwordForm","verified","faInfoCircle","oldPassword","newPassword","changePassword","faCheckCircle","faExclamationTriangle","UserSettings","ws","io","connect","secure","path","transports","console","log","lastTypedAt","timeout","beforeSendMs","mediaStream","recorder","userTyped","typing","userStoppedTyping","getIndex","messageId","getChannelMessages","messages","createMessage","attachmentURLs","initialized","pings","channelMarkedAsRead","guildPings","indexOf","guildMarkedAsRead","audioChunks","startVoiceFeedback","currentChannelId","wsPing","Date","getTime","startMedia","onstop","onStop","start","setTimeout","stop","mediaDevices","getUserMedia","audio","MediaRecorder","onstart","ondataavailable","Blob","connections","arrayBuffer","remove","createElement","URL","createObjectURL","play","WSListener","history","useHistory","hasListened","handleDialog","autoHideDuration","error","args","selfCreated","creatorId","uiActions","ignored","userIds","authorId","disconnect","voice","clearTimeout","PageWrapper","dropdown","pageTitle","HomePage","ImageCard","addEventListener","endsWith","textContent","displayType","thousandSeparator","Chat","Devices","Friends","Secure","AppNavbar","faHashtag","faUserFriends","SidebarFooter","VoiceFooter","faSignal","faPhoneSlash","faCog","Dropdown","faChevronDown","GuildDropdown","faUserPlus","faPlusCircle","ChannelMenu","ChannelTabs","guildChannels","ChannelTab","link","faVolumeUp","VCMembers","active","preventDefault","SidebarContent","GuildMenu","faDoorOpen","SidebarIcons","guildIcons","PlusIcon","Sidebar","MessageToolbar","isAuthor","canInChannel","faPencilAlt","MessageMenu","MessageBox","setContent","typers","cachedContent","setCachedContent","esc","saveEdit","handleEscape","canSend","MessageBoxLeftSide","uploadInput","React","createRef","ref","uploadFileAsMessage","hidden","faUpload","current","click","onKeyDown","secsAgo","diff","startTyping","shiftKey","emptyMessage","replaceAll","rows","typingUsers","typingMessage","MessageContent","patterns","messageHTML","striptags","replace","defaultPatterns","updatedAt","Attachments","maxWidth","dangerouslySetInnerHTML","__html","MessageHeader","author","isExtra","toDays","date","midnight","setHours","daysAgo","Math","floor","getDate","Message","isActuallyExtra","LeftSide","TextChannelHeader","canRead","faEyeSlash","SkeletonMessage","TextBasedChannel","element","scrollTop","scrollHeight","focus","loaded","lastMessageId","Array","fill","_","RoleManager","removeEveryone","slicedRoleIds","setRoleIds","opacity","rolesHaveChanged","roleOption","isOptionDisabled","onMenuClose","isMulti","GuildMemberMenu","isSelf","userIsBlocked","canKick","faUser","faBan","MemberList","hoistedRoles","getGuildMembers","getGuildUsers","canMember","UserList","by","filtered","localeCompare","getRoleIds","byPositionDesc","hoistedRoleIds","GuildPage","systemChannel","height","VerifyCodeInput","verifyForm","LoginPage","query","URLSearchParams","search","setEmail","loginUser","onInput","forgotPasswordEmail","RegisterPage","registerUser","OverviewPage","LogoutPage","channelActions","guildActions","memberActions","roleActions","userActions","LoadingPage","fetchEntities","tips","randomIndex","random","PrivateRoute","NotFoundPage","VerifyPage","App","lastReadMessageIds","basename","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","next","action","axios","request","baseURL","response","unsub","off","wrapperCallback","errorCallback","ReactDOM","render","maxSnack","configureStore","middleware","getDefaultMiddleware","serializableCheck","reducer","combineReducers","StrictMode","getElementById"],"mappings":"iWAMO,E,gGCMQA,EAVoC,SAACC,GAClD,OACE,kDACMA,GADN,IAEEC,UAAWC,IAAW,sDAEpBF,EAAMC,WAJV,SAIuBD,EAAMG,aCelBC,EAnByB,WACtC,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAuBA,EAAEC,KAAKH,QAEvD,OACE,sBAAKJ,UAAU,kDAAf,UACE,oBAAGA,UAAU,OAAb,UACE,sBAAMA,UAAU,uBAAhB,oBACA,sBAAMA,UAAU,gBAAhB,eACA,sBAAMA,UAAU,mBAAhB,oBAEF,8BACE,cAAC,IAAD,CAAMQ,GAAIJ,EAAO,gBAAkB,SAAnC,SACE,cAAC,EAAD,UAAeA,EAAO,MAAQ,kB,gBCZzBK,EAFA,I,OAAIC,cCEbC,EAAQC,YAAY,CACxBC,KAAM,KACNC,aAAc,GACdC,SAAU,CACRC,sBAAuB,SAACC,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QAC/BD,EAAME,iBAAmBD,GAE3BE,sBAAuB,SAACH,UACfA,EAAME,kBAGfE,gBAAiB,SAACJ,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACzBD,EAAMK,eAAiBJ,GAEzBK,cAAe,SAACN,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACvBD,EAAMO,aAAeN,GAEvBO,YAAa,SAACR,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACrBD,EAAMS,WAAaR,GAErBS,aAAc,SAACV,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACtBD,EAAMW,cAAgBV,EAAQW,QAC9BZ,EAAMa,YAAcZ,EAAQa,OAE9BC,YAAa,SAACf,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACrBD,EAAMgB,UAAYf,GAEpBgB,YAAa,SAACjB,UACLA,EAAMgB,WAEfE,eAAgB,SAAClB,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACxBD,EAAMmB,aAAN,OAAqBlB,QAArB,IAAqBA,OAArB,EAAqBA,EAASL,MAEhCwB,kBAAmB,SAACpB,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QAC3BD,EAAMqB,gBAAkBpB,MAKjBqB,EAAU5B,EAAM4B,QACd5B,IAAf,QAWa6B,EAAkB,SAACC,GAAD,OAAqB,SAACC,EAAUC,GACzDA,IAAWC,GAAGN,kBAAoBG,GAEtCC,EAASH,EAAQF,kBAAkBI,MASxBI,EAAkB,SAACzC,GAAD,OAAuB,SAACsC,GACrDA,EAASH,EAAQd,YAAYrB,IAC7BsC,EAASH,EAAQP,YAAY,kBAOlBc,EAAa,SAACC,GAAD,OAAoB,kBAAMtC,EAAOuC,KAAK,SAAUD,KAO7DE,EAAa,SAACP,GACzBA,EAASH,EAAQL,eACjBQ,EAASF,GAAgB,IACzBE,EAASH,EAAQd,YAAY,Q,QCtEhByB,EAR0C,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,MAAOpD,EAAgB,EAAhBA,UACxE,OACE,qBAAIA,UAAWC,IAAW,6CAA8CD,GAAxE,UACGmD,EADH,SACqBE,IAAVD,GAAA,iBAA4BA,O,0BCErCE,EAAY,CAChB,GAAM,gGACN,GAAM,gGACN,GAAM,2FACN,GAAM,2FACN,KAAQ,iBAwBKC,EArBoC,SAAC,GAA6C,IAA3CvD,EAA0C,EAA1CA,UAAWwD,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,KAAMvD,EAAe,EAAfA,SACzEwC,EAAWgB,cACXzB,EAAY5B,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGX,aAClD0B,EAAkBC,cAAlBD,cAER,OACE,cAAC,IAAD,CACE3D,UAAWC,IAAW,iDAEpBD,EACAsD,EAAS,OAACG,QAAD,IAACA,IAAQ,OAEpBI,WAAYC,SAASC,cAAc,SACnCtB,OAAQR,IAAcuB,EACtBQ,eAAgB,WACdtB,EAASO,GACTU,EAAc,gBAVlB,SAWMzD,K,gBCtCG+D,EAAU,iBAAO,CAC5B,cAAgB,UAAhB,OAA2BC,OAGhBA,EAAQ,kBAAMC,aAAaC,QAAQ,UCAnC7B,EAAU,CACrB8B,cAAeC,YAAsB,qBACrCC,iBAAkBD,YAAiB,yBACnCE,eAAgBF,YAAiB,sBACjCG,YAAaH,YAAqB,mBAClCI,eAAgBJ,YAAiB,uBACjCK,aAAcL,YAAiB,qBAiBpBM,EAAa,SAACC,EAAYC,GAAb,OAAqE,SAACpC,GAC9F,IAAMqC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQJ,GAExBnC,EAASH,EAAQ8B,cAAc,CAC7Ba,OAAQ,OACRC,IAAK,UACLC,KAAML,EACNd,QAAQ,2BACHA,KADE,IAEL,eAAgB,wBAElBa,gBCvCSO,EAAS,SAACC,GAAD,OAAgB,SAACC,GAAD,OAAUD,EAAIE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOH,EAAIG,QCKrE/E,EAAQC,YAAY,CACxBC,KAAM,WACNC,aAAc,GACdC,SAAU,CACR4E,QAAS,SAACC,EAAD,GAA4D,IAA/C1E,EAA8C,EAA9CA,QACpB0E,EAASC,KAAT,MAAAD,EAAQ,YAAS1E,EAAQ4E,OAAOT,EAAOO,OAEzCG,QAAS,SAACH,EAAD,GAAiE,IAApD1E,EAAmD,EAAnDA,QACpB0E,EAASC,KAAK3E,EAAQW,UAExBmE,QAAS,SAACJ,EAAD,GAAiE,IAApD1E,EAAmD,EAAnDA,QACd+E,EAAQL,EAASM,WAAU,SAAAC,GAAC,OAAIA,EAAET,KAAOxE,EAAQkF,aACvDR,EAASS,OAAOJ,EAAO,IAEzBK,QAAS,SAACV,EAAD,GAAiE,IAApD1E,EAAmD,EAAnDA,QACd+E,EAAQL,EAASM,WAAU,SAAAC,GAAC,OAAIA,EAAET,KAAOxE,EAAQkF,aACvDG,OAAOC,OAAOZ,EAASK,GAAQ/E,EAAQuF,oBAKhClE,EAAU5B,EAAM4B,QACd5B,IAAf,QASa+F,EAAgB,SAACN,GAAD,OAAuB,SAAC1D,GACnDA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,iBACPxB,KAAM,CAAEgB,kBAICS,EAAgB,SAACT,EAAmBlF,GAApB,OAAyD,SAACwB,GACrFA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,iBACPxB,KAAK,aAAGgB,aAAclF,QAkBb4F,EAAa,SAACpB,GAAD,OACxBqB,aACE,SAAA9F,GAAK,OAAIA,EAAM+F,SAASpB,YACxB,SAAAA,GAAQ,OAAIA,EAASqB,MAAK,SAAAd,GAAC,OAAIA,EAAET,KAAOA,SCzD7BwB,EAVoC,SAACnH,GAClD,OACE,kDACMA,GADN,IAEEC,UAAS,iCAA4BD,EAAMC,WAF7C,SAGGD,EAAMG,aCJAiH,EAAc,SAACpH,GAC1B,OAAO,2BACFA,GADL,IAEEqH,eAAW/D,EACXgE,kBAAchE,KCoCHiE,G,OAvBgF,SAACvH,GAC9F,IAAQwH,EAAyExH,EAAzEwH,MAAO1G,EAAkEd,EAAlEc,KAAM2G,EAA4DzH,EAA5DyH,SAAUC,EAAkD1H,EAAlD0H,QAASC,EAAyC3H,EAAzC2H,KAAMC,EAAmC5H,EAAnC4H,UAAW3H,EAAwBD,EAAxBC,UAAW4H,EAAa7H,EAAb6H,SACpE,OACE,sBAAK5H,UAAWA,EAAhB,+BACGuH,GACC,uBACEM,QAAShH,EACTb,UAAU,kCAFZ,8BAE+CuH,IACjD,2DACE7B,GAAI7E,EACJ6G,KAAI,OAAEA,QAAF,IAAEA,IAAQ,OACdC,UAAWA,EACXC,SAAUA,GACNT,EAAYpH,IACZyH,EAAS3G,EAAD,eAAY4G,KAN1B,IAOEzH,UAAWC,IACT,wEACA,CAAE,OAAiB,SAATyH,IATd,6BCmCSI,EA/CgD,SAAC/H,GAC9D,MAA2C6D,cAAnCD,EAAR,EAAQA,cAAeoE,EAAvB,EAAuBA,gBACjBrF,EAAWgB,cACXjB,EAASpC,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGN,mBAEvD0F,qBAAU,WACHvF,GAELsF,EAAgB,GAAI,CAClBE,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAChDC,QAASN,EACTO,IAAK,cACLC,SAAS,MAEV,CAAC7F,IAEJ,IAAM8F,EAAc,SAAC9C,GACnB9B,EAAc,eACd5D,EAAMyI,OAAO/C,GACb/C,EAASF,GAAgB,KAErBiG,EAAe,WAEnB,IAAK,IAAMJ,KADX1E,EAAc,eACI5D,EAAM2I,IAAxB,OACE,UAAA3I,EAAM4I,gBAAN,cAAA5I,EAAiBsI,EAAKtI,EAAM2I,IAAIL,IAClC3F,EAASF,GAAgB,KAErBsF,EAAc,kBAClB,sBACEpC,GAAG,cACH1F,UAAU,4DACV4I,MAAO,CAAEC,MAAO,QAHlB,UAIE,sBAAM7I,UAAU,gCAAhB,sDACA,iCACE,cAAC,EAAD,CACEA,UAAU,sBACV8I,QAASL,EAFX,mBAGA,cAAC,EAAD,CACEzI,UAAU,6BACV8I,QAASP,EAFX,yBAON,OAAO,MCQMQ,EAzD0C,WACvD,IAAMrG,EAAWgB,cACX7B,EAAUxB,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGhB,iBAExD,GADcvB,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGd,eACTkH,eAArCxB,EAAR,EAAQA,SAAUyB,EAAlB,EAAkBA,aAAcN,EAAhC,EAAgCA,SAWhC,OACE,uBACEO,SAAU,kBAAMxG,EAASF,GAAgB,KACzCxC,UAAU,8CAFZ,UAGE,iCACE,oBAAIA,UAAU,2BAAd,gCAGF,0BAASA,UAAU,QAAnB,UACE,cAAC,EAAD,CACEuH,MAAM,OACN1G,KAAK,OACL2G,SAAUA,EACVC,QAAS,CAAE0B,MAAOtH,EAAQhB,MAC1Bb,UAAU,SACZ,cAAC,EAAD,CACEuH,MAAM,UACN1G,KAAK,UACL2G,SAAUA,EACVC,QAAS,CAAE0B,MAAOtH,EAAQuH,SAC1BpJ,UAAU,YAGd,cAAC,EAAD,CACEA,UAAU,YACVmD,MAAM,sBAER,kCACE,cAAC,EAAD,CACEuE,KAAK,SACLoB,QAnCS,WACMO,OAAOC,QAAQ,gDACpB5G,EAASgE,EAAc7E,EAAQ6D,MAkCzC1F,UAAU,YAHZ,sBAMF,cAAC,EAAD,CACE2I,SAAUA,EACVH,OA7CS,SAAC/C,GAEdwD,GADiB,SAAC/H,GAAD,OAAawB,EAASmE,EAAchF,EAAQ6D,GAAIxE,MACjE+H,CAAuBxD,IA4CnBiD,IAAK7G,Q,kCCxDPlB,GAAQC,YAAY,CACxBC,KAAM,SACNC,aAAc,GACdC,SAAU,CACR4E,QAAS,SAAC4D,EAAD,GAAwD,IAA7CrI,EAA4C,EAA5CA,QAClBqI,EAAO1D,KAAP,MAAA0D,EAAM,YAASrI,EAAQ4E,OAAOT,EAAOkE,OAEvCxD,QAAS,SAACwD,EAAD,GAA6D,IAAlDrI,EAAiD,EAAjDA,QAClBqI,EAAO1D,KAAK3E,EAAQa,QAEtBuE,QAAS,SAACiD,EAAD,GAA6D,IAAlDrI,EAAiD,EAAjDA,QACZa,EAAQwH,EAAOtC,MAAK,SAAAuC,GAAC,OAAIA,EAAE9D,KAAOxE,EAAQuI,WAChDlD,OAAOC,OAAOzE,EAAOb,EAAQwI,eAE/B1D,QAAS,SAACuD,EAAD,GAA0B,IAAfrI,EAAc,EAAdA,QACZ+E,EAAQsD,EAAOrD,WAAU,SAAAyD,GAAC,OAAIA,EAAEjE,KAAOxE,EAAQuI,WACrDF,EAAOlD,OAAOJ,EAAO,OAKd1D,GAAU5B,GAAM4B,QACd5B,MAAf,QASaiJ,GAAc,SAACH,EAAiBvI,GAAlB,OAAqD,SAACwB,GAC/EA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,eACPxB,KAAK,aAAGqE,WAAYvI,QAiBX2I,GAAW,SAACnE,GAAD,OACxBqB,aACE,SAAA9F,GAAK,OAAIA,EAAM+F,SAASuC,UACxB,SAAAA,GAAM,OAAIA,EAAOtC,MAAK,SAAAuC,GAAC,OAAIA,EAAE9D,KAAOA,SAGzBoE,GAAmB,SAACL,GAAD,OAChC1C,aACE,SAAA9F,GAAK,OAAIA,EAAM+F,SAASpB,YACxB,SAAAA,GAAQ,OAAIA,EAASE,QAAO,SAAAK,GAAC,OAAIA,EAAEsD,UAAYA,SAepCM,GAAgB,SAACN,GAAD,OAC7B1C,aACE,SAAA9F,GAAK,OAAIA,EAAM+F,SAASgD,SACxB,SAAAC,GAAI,OAAIA,EAAKnE,QAAO,SAAAoE,GAAC,OAAIA,EAAET,UAAYA,S,kBCxD1BU,GAnBwD,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACxE,OACE,qCACE,oBAAIpK,UAAU,gCACboK,EAAIC,KAAI,gBAAGlH,EAAH,EAAGA,MAAOuC,EAAV,EAAUA,GAAV,OACP,gCACE,qBAAK1F,UAAU,2BAAf,SAA2CmD,IAC3C,sBACEA,MAAOA,EACPnD,UAAU,yCAFZ,UAGE,sBAAMA,UAAU,QAAhB,SAAyB0F,IACzB,cAAC,KAAD,CAAiB4E,KAAMC,YANjB7E,UCWH8E,GAhB0C,SAAC,GAAc,IAAZP,EAAW,EAAXA,KACpDQ,EAAUpK,aAAY,SAACC,GAAD,OAAuBA,EAAEoK,OAAOD,WAE5D,OACE,eAAC,IAAD,CAEE/E,GAAIuE,EAAKvE,GACT1F,UAAU,yCAHZ,UAIE,qBAAK4I,MAAO,CAAE+B,MAAOV,EAAKU,OAA1B,SAAoCV,EAAKpJ,OACxC4J,GAAW,cAAC,GAAD,CAAoBL,IAAK,CACnC,CAAEjH,MAAO,UAAWuC,GAAIuE,EAAKvE,SAL1BuE,EAAKvE,KCoBDkF,GApBgD,SAAC7K,GAC9D,IAAQ2F,EAAyC3F,EAAzC2F,GAAImF,EAAqC9K,EAArC8K,IAAKC,EAAgC/K,EAAhC+K,OAAQ5K,EAAwBH,EAAxBG,SAAUF,EAAcD,EAAdC,UAC7BsC,EAAkBjC,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGN,mBAEhE,OACE,cAAC,IAAD,2BACMvC,GADN,IAEES,GAAG,IACHsI,QAAS,WACP,GAAIxG,EACF,OfqCsB,WAC9B,IAAMyI,EAAcjH,SAASC,cAAc,gBACtCgH,IAELA,EAAYnC,MAAMoC,gBAAkB,iBezCrBC,GACH,OAANH,QAAM,IAANA,KAASpF,IAEX1F,UAAWC,IAAW,qDAEpBD,EACA,CAAE,OAAU6K,IAAQnF,IAXxB,SAWgCxF,M,SCsBrBgL,GA3CkD,SAACnL,GAChE,IAAMoL,EAAc,CAClBC,YAAa,iBAAO,CAAEC,QAAS,SAC/BC,QAAS,iBAAO,CACdzC,MAAO,OACPmC,gBAAiB,sBACjBO,aAAc,QAEhBC,OAAQ,SAACC,EAAD,OAAWrG,EAAX,EAAWA,KAAX,mBAAC,eACJqG,GADG,IAENd,MAAOvF,EAAKuF,MACZK,gBAAiB,sBACjBU,OAAQ,aAEVC,MAAO,SAACF,GAAD,mBAAC,eAAiBA,GAAlB,IAA0Bd,MAAO,iBACxCiB,KAAM,SAACH,GAAD,mBAAC,eACFA,GADC,IAEJT,gBAAiB,yBAEnBa,WAAY,SAACJ,GAAD,mBAAC,eACRA,GADO,IAEVd,MAAO,cACPK,gBAAiB,wBAEnBc,mBAAoB,iBAAO,CAAET,QAAS,SACtCU,oBAAqB,SAACN,GAAD,mBAAC,eAAiBA,GAAlB,IAA0BO,MAAO,WACtDC,gBAAiB,SAACR,EAAD,OAAWrG,EAAX,EAAWA,KAAX,mBAAC,eACbqG,GADY,IAEfd,MAAOvF,EAAKuF,MACZK,gBAAiB,yBAIrB,OACE,cAAC,KAAD,CACEkB,YAAY,cACZzE,QAAS1H,EAAMoM,QAAQ9B,IAAItK,EAAMqM,YACjCX,OAAQN,EACRjC,SAAUnJ,EAAMmJ,SAChBmD,iBAAkB,iBAAM,gCC0DfC,GA1FuC,WAAO,IAAD,QAClD7C,EAAiB8C,cAAjB9C,QACF/G,EAAWgB,cACX7B,EAAUxB,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGhB,iBAElD4K,EAAa,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,SAAWD,EAAEC,SAAY,GAAK,GACxDC,EAAWvM,YAAY0J,GAAcN,IAAUoD,KAAKL,GAEpDM,EAAe,UAAGjL,EAAQkL,iBAAX,aAAG,EAAoB,GAC5C,EAAsCC,mBACnCF,EAAD,eACSA,QACLzJ,GAHN,mBAAO4J,EAAP,KAAuBC,EAAvB,KAMMC,EAAeP,EAAS9G,QAAO,SAAAoE,GAAC,cAAI,UAACrI,EAAQkL,iBAAT,aAAC,EAAmBvH,MAAK,SAAA4H,GAAC,OAAIA,EAAEC,SAAWnD,EAAExE,UACjF4H,EAAgBV,EAAS9G,QAAO,SAAAoE,GAAC,uBAAIrI,EAAQkL,iBAAZ,aAAI,EAAmBvH,MAAK,SAAA4H,GAAC,OAAIA,EAAEC,SAAWnD,EAAExE,SACvF,EAAwCsH,mBAAQ,oBAACM,EAAc,UAAf,aAAC,EAAkB5H,UAAnB,QAAyB,IAAzE,mBAAO6H,EAAP,KAAqBC,EAArB,KAQMC,EAAc,WAClB,OACE,mCAIE,uDAiBAxD,EAAO2C,EAAS3F,MAAK,SAAAiD,GAAC,OAAIA,EAAExE,KAAO6H,KACnCG,EAAa,UAAG7L,EAAQkL,iBAAX,aAAG,EAAmBvH,MAAK,SAAA4H,GAAC,OAAIA,EAAEC,SAAWE,KAIhE,OAHIN,GAAkBhD,IAASyD,GAC7BJ,EAAczH,KAAKoE,GAGnB,sBAAKjK,UAAU,gEAAf,UACE,qBAAKA,UAAU,4BAAf,SACE,sBAAKA,UAAU,QAAf,UACGsN,EAAcT,KAAKL,GAAYnC,KAAI,SAAAH,GAAC,OACnC,eAAC,IAAD,CAAoBxE,GAAIwE,EAAExE,GAA1B,UACE,cAAC,GAAD,CACEkD,MAAO,CAAE+B,MAAOT,EAAES,OAClBE,IAAK0C,EACLzC,OAAQ0C,EACR9H,GAAIwE,EAAExE,GAJR,SAIawE,EAAErJ,OACf,cAAC,GAAD,CAAUoJ,KAAMC,MANiBA,EAAExE,OAUvC,cAAC,EAAD,CAAU1F,UAAU,WAAWmD,MAAM,aACrC,cAAC,GAAD,CACEiJ,WAAY,SAAAlC,GAAC,MAAK,CAAE3C,MAAO2C,EAAErJ,KAAMsI,MAAOe,EAAExE,GAAIiF,MAAOT,EAAES,QACzDzB,SAAU,SAAAyE,GACR,IAAMN,EAASM,EAAOxE,MACtB+D,EAAY,CAAEU,MAAO,EAAGC,KAAM,EAAGR,WACjCG,EAAgBH,IAElBlB,QAASgB,SAGf,qBAAKnN,UAAU,4BAAf,SACGiN,GAAkB,cAACQ,EAAD,MAGrB,cAAC,EAAD,CACEjF,OA5CS,SAAC/C,GAAO,IAAD,EACdsH,EAAS,UAAGe,KAAKC,MAAMD,KAAKE,UAAUnM,EAAQkL,mBAArC,QAAoD,GAC/DE,GAAkBA,EAAeW,MAAQX,EAAeY,KAAO,GACjEd,EAAUlH,KAAKoH,GAEjBvK,EAASmE,EAAchF,EAAQ6D,GAAI,CAAEqH,gBAwCjCrE,IAAK,CAAEqE,UAAWE,SC3EXgB,GAnBG,WAChB,IAAMvL,EAAWgB,cACTC,EAAkBC,cAAlBD,cAOR,OACE,sBACE3D,UAAU,2FACV8I,QARY,WACdpG,EAASO,GACTU,EAAc,gBAId,UAGE,cAAC,KAAD,CAAiB2G,KAAM4D,KAASvD,MAAM,iBACtC,sBAAM3K,UAAU,eAAhB,qB,kBCfAW,GAAQC,YAAY,CACxBC,KAAM,UACNC,aAAc,GACdC,SAAU,CACR4E,QAAS,SAACwI,EAAD,GAA+D,IAAnDjN,EAAkD,EAAlDA,QACnBiN,EAAQtI,KAAR,MAAAsI,EAAO,YAASjN,EAAQ4E,OAAOT,EAAO8I,OAExCC,MAAO,SAACD,EAAD,GAAiE,IAArDjN,EAAoD,EAApDA,QACjBiN,EAAQtI,KAAK3E,EAAQmN,SAEvBC,QAAS,SAACH,EAAD,GAAoE,IAAxDjN,EAAuD,EAAvDA,QACb+E,EAAQkI,EAAQjI,WAAU,SAAAqI,GAAC,OAAIA,EAAE7I,KAAOxE,EAAQsN,YACtDL,EAAQ9H,OAAOJ,EAAO,IAExBK,QAAS,SAAC6H,EAAD,GAAoE,IAAxDjN,EAAuD,EAAvDA,QACbmN,EAASF,EAAQlH,MAAK,SAAAsH,GAAC,OAAIA,EAAE7I,KAAOxE,EAAQsN,YAClDjI,OAAOC,OAAO6H,EAAQnN,EAAQuN,mBAKvBlM,GAAU5B,GAAM4B,QACd5B,MAAf,QAgCa+N,GAAY,SAACjF,EAAiBkF,GAAlB,OACzB5H,aACE,SAAA9F,GAAK,OAAIA,EAAM+F,SAASmH,WACxB,SAAAA,GAAO,OAAIA,EAAQlH,MAAK,SAAAsH,GAAC,OAAIA,EAAE9E,UAAYA,GAAW8E,EAAEI,SAAWA,SAGxDC,GAAgB,SAACnF,GAAD,OAC7B1C,aACE,SAAA9F,GAAK,MAAK,CAAEb,KAAMa,EAAMV,KAAKH,KAAM+N,QAASlN,EAAM+F,SAASmH,YAC3D,gBAAG/N,EAAH,EAAGA,KAAH,SAAS+N,QAAsBlH,MAAK,SAAAsH,GAAC,OAAIA,EAAE9E,UAAYA,GAAW8E,EAAEI,SAAWvO,EAAKsF,UC9DhF/E,GAAQC,YAAY,CACxBC,KAAM,QACNC,aAAc,GACdC,SAAU,CACR4E,QAAS,SAACqE,EAAD,GAAsD,IAA5C9I,EAA2C,EAA3CA,QACjB8I,EAAMnE,KAAN,MAAAmE,EAAK,YAAS9I,EAAQ4E,OAAOT,EAAO2E,OAEtCjE,QAAS,SAACiE,EAAD,GAAgE,IAAtD9I,EAAqD,EAArDA,QACjB8I,EAAMnE,KAAK3E,EAAQ+I,OAErB3D,QAAS,SAAC0D,EAAD,GAAgE,IAAtD9I,EAAqD,EAArDA,QACX+I,EAAOD,EAAM/C,MAAK,SAAAiD,GAAC,OAAIA,EAAExE,KAAOxE,EAAQmM,UAC9C9G,OAAOC,OAAOyD,EAAM/I,EAAQ2N,cAE9B7I,QAAS,SAACgE,EAAD,GAAgE,IAAtD9I,EAAqD,EAArDA,QACX+E,EAAQ+D,EAAM9D,WAAU,SAAAgE,GAAC,OAAIA,EAAExE,KAAOxE,EAAQmM,UACpDrD,EAAM3D,OAAOJ,EAAO,OAKb1D,GAAU5B,GAAM4B,QACd5B,MAAf,QAOamO,GAAW,SAAC1E,GAAD,OAAmBrD,aACzC,SAAA9F,GAAK,OAAIA,EAAM+F,SAASgD,SACxB,SAAAA,GAAK,OAAIA,EAAMlE,QAAO,SAAAoE,GAAC,OAAIE,EAAI2E,SAAS7E,EAAExE,WAQ/BsJ,GAAuB,SAACvF,EAA6BkF,GAA9B,OAAiD5H,aACnF,SAAA9F,GAAK,MAAK,CAAEkN,QAASlN,EAAM+F,SAASmH,QAASnE,MAAO/I,EAAM+F,SAASgD,UACnE,YAAyB,IC/CLiF,ED+CjBd,EAAqB,EAArBA,QAASnE,EAAY,EAAZA,MACJqE,EAASF,EAAQlH,MAAK,SAAAsH,GAAC,OAAIA,EAAE9E,UAAYA,GAAW8E,EAAEI,SAAWA,KACvE,OAAQN,EACNrE,EACGlE,QAAO,SAAAoE,GAAC,OAAImE,EAAOa,QAAQH,SAAS7E,EAAExE,OACtCyJ,QCpDaF,EDoDA,WCpDc,SAACG,EAAKC,GAAN,OAAeD,EAAMC,EAAIJ,GAAMG,EAAMC,KDqDjE,U,gBxB9CMC,EAcAC,EAOAC,G,SArBAF,O,oCAAAA,I,qCAAAA,I,mCAAAA,I,gCAAAA,I,sCAAAA,I,+BAAAA,I,+BAAAA,I,kCAAAA,M,0BAcAC,O,oCAAAA,I,wCAAAA,I,qCAAAA,M,uBAOAC,O,qBAAAA,I,0BAAAA,M,eAMI,6CACXF,GACAC,GACAC,GAK0B,qBAC7BC,EAAgBH,QAAQI,cACtBD,EAAgBH,QAAQK,cACxBF,EAAgBF,KAAKK,cACrBH,EAAgBF,KAAKM,c,CAxCVJ,M,KA2CV,I,MAAMK,GAAb,WAmBE,WAAoB7O,GAAwB,0BAAxBA,QAAuB,KAlB3B8O,YAAc,CAC5BC,QAAS,CACP,cAAgB,yDAChB,cAAiB,0DACjB,aAAgB,2CAChB,gBAAmB,+CACnB,aAAe,0CACf,aAAgB,qDAChB,cAAiB,4BACjB,eAAkB,8BAEpBC,KAAM,CACJ,gBAAkB,qDAClB,cAAgB,4BAChB,cAAiB,+CAfvB,8CAqBE,SAAiBC,EAA8CnO,EAAqBsM,GAClF,OAAOtM,EAAMoO,UAAY9B,EAAOM,QAC3ByB,KAAKC,QACJD,KAAKE,cAAcjC,EAAQtM,EAAM2D,IACjC+J,EAAgBc,IAAIL,MAzB9B,0BA4BE,SAAoBA,EAA8CzG,EAAiBrD,GAAoB,IAAD,IAC9FvE,EAAUuO,KAAKtJ,WAAWV,GAC1BiI,EAAS+B,KAAKxB,cAAcnF,GAE5BsD,EAAS,oBAAGlL,EAAQkL,iBAAX,aAAG,EACdjH,QAAO,SAAAsH,GAAC,OAAIiB,EAAOa,QAAQH,SAAS3B,EAAEC,kBAD3B,QACuC,GAEhDmD,EAAuBzD,EAAUoC,QAAO,SAACsB,EAAMC,GAAP,OAAgBD,EAAOC,EAAK9C,QAAO,GAC3E+C,EAAsB5D,EAAUoC,QAAO,SAACsB,EAAMC,GAAP,OAAgBD,EAAOC,EAAK7C,OAAM,GAEzE+C,EAAanB,EAAgBF,KAAKW,GAClCW,EAAgBT,KAAKU,IAAIZ,EAAYzG,GACrCsH,EAAsBX,KAAKC,QAAQG,EAAsBI,GACzDI,EAAqBZ,KAAKC,QAAQM,EAAqBC,GAE7D,OAAQC,IAAkBG,GAAuBD,IA3CrD,iBA8CE,SAAWb,EAA8CzG,GACvD,IAAM1H,EAAQqO,KAAKvG,SAASJ,GACtB4E,EAAS+B,KAAKxB,cAAcnF,GAElC,OAAO1H,EAAMoO,UAAY9B,EAAOM,QAC3ByB,KAAKC,QACJD,KAAKE,cAAcjC,EAAQ5E,GAC3BgG,EAAgBc,IAAIL,MArD9B,2BAwDE,SAAsB7B,EAA4B5E,GAChD,OAAOM,GAAcN,EAAdM,CAAuBqG,KAAKnP,OAChC6E,QAAO,SAAAoE,GAAC,cAAImE,QAAJ,IAAIA,OAAJ,EAAIA,EAAQa,QAAQH,SAAS7E,EAAExE,OACvCyJ,QAAO,SAACC,EAAKjG,GAAN,OAAgBA,EAAM8H,YAAc7B,IAAK,KA3DvD,qBA6DE,SAAgB8B,EAAoBhB,GAClC,OAAOiB,QAAQD,EAAahB,IACrBiB,QAAQD,EAAazB,EAAgBH,QAAQ8B,iBA/DxD,uBAkEE,SAAiBC,EAA0C5H,EAAiB6H,GAC1E,IAAMC,EAAa7C,GAAUjF,EAAS6H,EAAnB5C,CAAkC0B,KAAKnP,OAC1D,QAAKsQ,IAEEnB,KAAKU,IAAIO,EAAQ5H,KAClB2G,KAAKnP,MAAMV,KAAKH,KAAMsF,KAAO6L,EAAW5C,QACxCyB,KAAKoB,eAAe/H,EAAS8H,EAAWrC,aAxElD,uBA2EE,SAAiBmC,EAA0C5H,EAAiB6H,GAC1E,OAAOlB,KAAKnP,MAAMV,KAAKH,KAAMsF,KAAO4L,GAC/BlB,KAAKU,IAAIO,EAAQ5H,IACjB2G,KAAKqB,UAAUJ,EAAQ5H,EAAS6H,KA9EzC,4BAkFE,SAAsB7H,EAAiByF,GACrC,IAAMnN,EAAQqO,KAAKvG,SAASJ,GACtB4E,EAAS+B,KAAKxB,cAAcnF,GAC5BiI,EAAU5C,GAAST,EAAOa,QAAhBJ,CAAyBsB,KAAKnP,OACxC0Q,EAAa7C,GAASI,EAATJ,CAAkBsB,KAAKnP,OAEpC2Q,EAAM,SAACvJ,GAAD,OAAiB,SAACuJ,EAAKvC,GAAN,OAAeuC,EAAIvJ,GAAOgH,EAAIhH,GAAQuJ,EAAMvC,IACnEwC,EAA6BH,EAAQvC,OAAOyC,EAAI,aAChDE,EAAgCH,EAAWxC,OAAOyC,EAAI,aAEtDG,EAAc1D,EAAOM,SAAW5M,EAAMoO,QACtC6B,EAAoBH,EAAclF,SAAWmF,EAAiBnF,SAEpE,OAAOoF,GAAeC,IA/F1B,4BAkGE,SAAsBhI,GACpB,IAAa3B,EACb,OAAO2B,EAAMmF,QADA9G,EACW,WADK,SAACuJ,EAAKvC,GAAN,OAAeuC,EAAIvJ,GAAOgH,EAAIhH,GAAQuJ,EAAMvC,OAnG7E,wBAuGE,SAAmBjJ,GACjB,IAAMvE,EAAUiF,EAAWV,EAAXU,CAAsBsJ,KAAKnP,OAC3C,IAAKY,EACH,MAAM,IAAIoQ,UAAU,qBACtB,OAAOpQ,IA3GX,sBA6GE,SAAiB4H,GACf,IAAM1H,EAAQ8H,GAASJ,EAATI,CAAkBuG,KAAKnP,OACrC,IAAKc,EACH,MAAM,IAAIkQ,UAAU,mBACtB,OAAOlQ,IAjHX,2BAmHE,SAAsB0H,GACpB,IAAM4E,EAASO,GAAcnF,EAAdmF,CAAuBwB,KAAKnP,OAC3C,IAAKoN,EACH,MAAM,IAAI4D,UAAU,oBACtB,OAAO5D,MAvHX,K0BzCe6D,GALE,WACf,IAAMjR,EAAQkR,cAAWxP,WACzB,OAAO,IAAImN,GAAY7O,IC4BVmR,GAlBkC,SAAC,GAA6E,IAA3EpS,EAA0E,EAA1EA,UAAWqS,EAA+D,EAA/DA,KAAMvH,EAAyD,EAAzDA,OAAQD,EAAiD,EAAjDA,IAAKyH,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,gBACtG,OACE,qBAAKxS,UAAWA,EAAhB,SACGqS,EAAKhI,KAAI,SAAAoI,GAAC,QAAMH,IAAD,OAAcA,QAAd,IAAcA,OAAd,EAAcA,EAAYG,MACxC,cAAC,GAAD,CACE7J,MAAK,2BACA2J,GACCE,EAAE/M,KAAOmF,EAAM2H,EAAkB,IAEvC3H,IAAKA,EACLC,OAAQA,EACRpF,GAAI+M,EAAE/M,GAPR,SAQc+M,EAAE5R,MAAT4R,EAAE/M,UCqBFgN,GAtCkC,WAC/C,IAAM7Q,EAAUxB,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGhB,iBAClDG,EAAQ1B,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGd,eACtD,EAAsBkL,mBAAS,YAA/B,mBAAOnC,EAAP,KAAYC,EAAZ,KACM6H,EAAQT,KAEd,OAAQrQ,EACN,cAAC,EAAD,CAAO2B,SAAU,kBAAmBC,KAAK,OAAzC,SACE,sBAAKzD,UAAU,2BAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,6CAAf,UACE,cAAC,EAAD,CACEA,UAAU,sBACVmD,MAAK,WAAMtB,EAAQhB,QACvB,cAAC,GAAD,CACEwR,KAAM,CACJ,CAAEO,KAAM,kBAAmB/R,KAAM,WAAY6E,GAAI,YACjD,CAAEkN,KAAM,kBAAmB/R,KAAM,QAAS6E,GAAI,UAEhDmF,IAAKA,EACLC,OAAQA,EACRwH,UAAW,SAAAG,GAAC,OAAIE,EAAM7B,IAAI2B,EAAEG,KAAa7Q,EAAM2D,YAInD,sBAAK1F,UAAU,oBAAf,UACW,aAAR6K,GAAsB,cAAC,EAAD,IACd,UAARA,GAAmB,cAAC,GAAD,OAGtB,qBAAK7K,UAAU,oBAAf,SACE,cAAC,GAAD,WAIJ,MCYS6S,GAlDgC,WAC7C,IAAMnQ,EAAWgB,cACjB,EAA6CsF,cAArCxB,EAAR,EAAQA,SAAUyB,EAAlB,EAAkBA,aAAcN,EAAhC,EAAgCA,SAC1B5G,EAAQ1B,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGd,eAOhDgR,EAA6B,CAAC,OAAQ,SAE5C,OACE,cAAC,EAAD,CAAOtP,SAAU,gBAAiBC,KAAK,KAAvC,SACE,uBACEzD,UAAU,uBACV+S,SAAU9J,GAXD,SAAC7D,GACd1C,EnBgByB,SAAC+G,EAAD,OAAoB5I,EAApB,EAAoBA,KAAM6G,EAA1B,EAA0BA,KAA1B,OAA8D,SAAChF,GAC1FA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,iBACPxB,KAAM,CAAEqE,UAAS5I,OAAM6G,YmBnBdsL,CAAcjR,EAAO2D,GAAIN,IAClCuD,EAAS,OAAQ,OAOf,UAGE,wBAAQ3I,UAAU,uBAAlB,SACE,oBAAIA,UAAU,4BAAd,8BAGF,qBAAKA,UAAU,gBAAf,SACE,cAAC,EAAD,CACEuH,MAAM,eACN1G,KAAK,OACL2G,SAAUA,MAGhB,sBAAKxH,UAAU,qBAAf,UACE,uBACE6H,QAAQ,cACR7H,UAAU,kCAFZ,0BAGA,gDACE0F,GAAG,cACH1F,UAAU,wEACViT,aAAcH,EAAM,IAChBtL,EAAS,SAJf,aAKGsL,EAAMzI,KAAI,SAAA3C,GAAI,OAAI,wBAAmByB,MAAOzB,EAA1B,SAAiCA,GAApBA,YAIlC,wBAAQ1H,UAAU,kBAAlB,SACE,cAAC,EAAD,CACEA,UAAU,kCADZ,4BCGKkT,GA5C8B,WAC3C,IAAMxQ,EAAWgB,cACjB,EAAmCsF,cAA3BxB,EAAR,EAAQA,SAAUyB,EAAlB,EAAkBA,aAClB,EAA6DD,cAA3CmK,EAAlB,EAAQ3L,SAAmC4L,EAA3C,EAA6BnK,aAK7B,OACE,eAAC,EAAD,CACEjJ,UAAU,MACVwD,SAAU,cACVC,KAAK,KAHP,UAIE,yBAAQzD,UAAU,mBAAlB,UACE,oBAAIA,UAAU,4BAAd,0BACA,oBAAGA,UAAU,OAAb,yCAC8B,uBAD9B,oDAMF,oBAAIA,UAAU,4BAAd,sBAEA,uBAAM+S,SAAU9J,GAjBD,SAAC7D,GAAD,OAAU1C,GPeL2Q,EOfwBjO,EAAKiO,WPeN,SAAC3Q,GAChDA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,mBACPxB,KAAM,CAAEiO,oBAHa,IAACA,KOEpB,UACE,cAAC,EAAD,CACE9L,MAAM,cACN1G,KAAK,aACL2G,SAAUA,IACZ,cAAC,EAAD,CAAcxH,UAAU,+BAAxB,qBAGF,oBAAIA,UAAU,4BAAd,2BAEA,uBAAM+S,SAAUK,GA5BC,SAAChO,GAAD,OAAU1C,GdgBL7B,EchB0BuE,EAAKvE,KdgBd,SAAC6B,GAC5CA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,eACPxB,KAAM,CAAEvE,cAHe,IAACA,KcYtB,UACE,cAAC,EAAD,CACE0G,MAAM,aACN1G,KAAK,OACL2G,SAAU2L,IACZ,cAAC,EAAD,CAAcnT,UAAU,mCAAxB,2BCzCFW,GAAQC,YAAY,CACxBC,KAAM,UACNC,aAAc,CACZ6E,QAAS,GACT2N,KAAM,IAERvS,SAAU,CACR4E,QAAS,cAAoE,IAAjE2N,EAAgE,EAAhEA,KAAM3N,EAA0D,EAA1DA,QAAazE,EAA6C,EAA7CA,QACvBuI,EAAUvI,EAAQ,GAAGuI,QAC3B6J,EAAKzN,KAAL,MAAAyN,EAAI,YAASpS,EAAQ4E,OAAOT,EAAOiO,MACnC3N,EAAQE,KAAK4D,IAEf1D,QAAS,cAAgE,IAA7DuN,EAA4D,EAA5DA,KAAUpS,EAAkD,EAAlDA,QACpBoS,EAAKzN,KAAK3E,EAAQqS,YAKXhR,GAAU5B,GAAM4B,QACd5B,MAAf,QCsBe6S,GAtC+B,WAC5C,IAAM9Q,EAAWgB,cACjB,EAA+BsF,cAAvBxB,EAAR,EAAQA,SAAUmB,EAAlB,EAAkBA,SAClB,EAAiDtI,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,MAA9Ed,EAAR,EAAQA,YAAaN,EAArB,EAAqBA,aAAcS,EAAnC,EAAmCA,UAEnC0G,EAAS,aAAD,OAAenH,QAAf,IAAeA,OAAf,EAAeA,EAAckE,IAErC,IAAMjD,EAAuB,iBAAdR,EACf+F,qBAAU,WDUgB,IAACyB,GCTrBjI,GAAiBM,GAAgBW,GAErCC,GDOyB+G,ECPH3H,EAAY4D,GDOW,SAAChD,GAChDA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,gBACPxB,KAAM,CAAEqE,mBCTP,CAAChH,IAIJ,OAAQjB,EACN,eAAC,EAAD,CAAOgC,SAAU,eAAgBxD,UAAU,MAA3C,UACE,wBAAQA,UAAU,OAAlB,SACE,qBAAIA,UAAU,6BAAd,sCAA8D8B,QAA9D,IAA8DA,OAA9D,EAA8DA,EAAajB,UAG7E,oBAAIb,UAAU,yCAAd,gDAEA,sBAAKA,UAAU,WAAf,UACE,cAAC,EAAD,CACE8I,QAZS,kBAAMO,OAAOoK,UAAUC,UAAUC,UAAUnS,EAAckE,KAalE1F,UAAU,8BAFZ,kBAGA,cAAC,EAAD,CACEuH,MAAM,cACN1G,KAAK,aACL2G,SAAUA,EACVG,WAAS,UAGb,MC6BSiM,GA9DwC,WACrD,IAAMlR,EAAWgB,cACX3B,EAAQ1B,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGd,eACtD,EAA6CkH,cAArCxB,EAAR,EAAQA,SAAUyB,EAAlB,EAAkBA,aAAcN,EAAhC,EAAgCA,SAWhC,OACE,uBACEO,SAAU,kBAAMxG,EAASF,GAAgB,KACzCxC,UAAU,8CAFZ,UAGE,iCACE,oBAAIA,UAAU,2BAAd,8BAGF,0BAASA,UAAU,QAAnB,UACE,cAAC,EAAD,CACEuH,MAAM,OACN1G,KAAK,OACL2G,SAAUA,EACVC,QAAS,CAAE0B,MAAOpH,EAAMlB,MACxBb,UAAU,SACZ,cAAC,EAAD,CACE0H,KAAK,OACLmM,OAAO,UACPtM,MAAM,aACN1G,KAAK,UACLb,UAAU,OACVwH,SAAU,aACVC,QAAS,CAAE0B,MAAOpH,EAAM+R,SACxB5K,SAAU,SAACzD,GAAO,IAAD,IACTZ,EAAI,UAAGY,EAAEsO,qBAAL,iBAAG,EAAiBC,aAApB,aAAG,EAAyB,GAClCnP,GAAMnC,EjBNS,SAAC+G,EAAiB5E,GAAlB,OAAiC,SAACnC,GAC/D,IAAMuR,EAAc,yCAAG,8BAAAxH,EAAA,6DAAStH,EAAT,EAASA,IAAT,kBACrBzC,EAASkH,GAAYH,EAAS,CAAEqK,QAAS3O,MADpB,2CAAH,sDAEpBzC,EAASkC,EAAWC,EAAMoP,KiBGGC,CAAgBnS,EAAM2D,GAAIb,UAInD,cAAC,EAAD,CACE7E,UAAU,YACVmD,MAAM,sBAER,kCACE,cAAC,EAAD,CACEuE,KAAK,SACLoB,QAzCS,WACf,IjB6BwBW,EiB7BHJ,OAAOC,QAAQ,gDACpB5G,GjB4BQ+G,EiB5Ba1H,EAAM2D,GjB4BC,SAAChD,GAC/CA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,eACPxB,KAAM,CAAEqE,kBiBSFzJ,UAAU,YAHZ,sBAMF,cAAC,EAAD,CACE2I,SAAUA,EACVH,OAnDS,SAAC/C,GAEdwD,GADiB,SAAC/H,GAAD,OAAawB,EAASkH,GAAY7H,EAAM2D,GAAIxE,MAC7D+H,CAAuBxD,IAkDnBiD,IAAK3G,QCnCEoS,I,OArBsC,SAACpU,GACpD,OACE,qBAAKC,UAAWC,IAAW,OAAQF,EAAMC,WAAzC,8BACE,uBACE6H,QAAS9H,EAAM2F,GACf1F,UAAU,mCAFZ,8BAGE,sBAAKA,UAAU,WAAf,+BACE,iDACMD,GADN,IAEE2F,GAAI3F,EAAM2F,GACVgC,KAAK,WACL1H,UAAU,UACVoU,QAASrU,EAAMqU,QALjB,wBAMA,qBAAKpU,UAAU,0CAAf,uBACA,qBAAKA,UAAU,qEAAf,gCC6CKqU,GAvDwD,SAAC,GAAiD,IAA/C1B,EAA8C,EAA9CA,MAAO2B,EAAuC,EAAvCA,SAAwB3L,EAAe,EAA7B4L,aACnF7R,EAAWgB,cACTqM,EAAgBmC,KAAhBnC,YAEFyE,EAAgB,SAAC7B,GACrB2B,EAAS3B,GACThK,EAAS,cAAegK,GACxBjQ,EAASF,GAAgB,KAMrBiS,EAAM,SAAC5T,GAAD,OAAkBsQ,QAAQwB,EAAQlD,EAAgBc,IAAI1P,KAC5D6T,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OACjB,sBAAK5U,UAAU,yCAAf,UACE,+BAAO+P,EAAY4E,GAAUC,KAC7B,cAAC,GAAD,CACElP,GAAIkP,EACJR,QAASK,EAAIG,GACb1L,SAAU,kBAXIrI,EAWa+T,EAXCC,GAWUJ,EAAIG,GAV9CJ,EAAeK,EACXlC,EAAQlD,EAAgBc,IAAI1P,GAC5B8R,GAASlD,EAAgBc,IAAI1P,IAHhB,IAACA,EAAcgU,GAY5B7U,UAAU,oBAIhB,OACE,qCACGuG,OAAOuO,KAAK/E,GAAa1F,KAAI,SAAAsK,GAAQ,OACpC,sBAAoB3U,UAAU,OAA9B,UACE,cAAC,EAAD,CAAUA,UAAU,oBAAoBmD,MAAOwR,IAC5CpO,OAAOuO,KAAK/E,EAAY4E,IAAWtK,KAAI,SAAAuK,GAAQ,OAC9C,qCACE,wBACEzR,MAAOsM,EAAgBc,IAAIqE,GAC3B5U,UAAU,YAFZ,SAEyB4U,IACzB,cAACF,EAAD,CAEEC,SAAUA,EACVC,SAAUA,GAFLA,WARLD,MAeZ,cAAC,EAAD,CACE7L,QAAS,kBAAM0L,EAAc,IAC7BxU,UAAU,sBACV0H,KAAK,SAHP,mBAIA,cAAC,EAAD,CACEoB,QAAS,kBAAM0L,EAAc/E,EAAgBsF,qBAC7C/U,UAAU,+BACV0H,KAAK,SAHP,yBCuESsN,GAhHqC,WAClD,IZQsBtP,EYRhBhD,EAAWgB,cACjB,EAAwDsF,cAAhDC,EAAR,EAAQA,aAAczB,EAAtB,EAAsBA,SAAUmB,EAAhC,EAAgCA,SAAUsM,EAA1C,EAA0CA,UAClCxL,EAAiB8C,cAAjB9C,QACFO,EAAQ3J,YAAY0J,GAAcN,IACxC,EAAwCuD,mBAAShD,EAAM,GAAGtE,IAA1D,mBAAO6H,EAAP,KAAqBC,EAArB,KACM0H,EAAa7U,aZGGqF,EYHiB6H,EZGFxG,aACrC,SAAA9F,GAAK,OAAIA,EAAM+F,SAASgD,SACxB,SAAAA,GAAK,OAAIA,EAAM/C,MAAK,SAAAiD,GAAC,OAAIA,EAAExE,KAAOA,UYJlC,EAA0BsH,mBAAS,GAAnC,mBAAO2F,EAAP,KAAc2B,EAAd,KACA,EAA8BtH,oBAAS,GAAvC,mBAAOmI,EAAP,KAAgBC,EAAhB,KACMC,EAAenD,KAErBlK,qBAAU,WACR,IAAKkN,EAAY,OAAO1H,EAAgBxD,EAAM,GAAGtE,IAEjD,cAAmB,CAAC,OAAQ,QAAS,cAAe,WAApD,gBAAK,IAAM7E,EAAI,KACb8H,EAAS9H,EAAMqU,EAAWrU,IAC5ByT,EAASY,EAAWjE,aACpBmE,EAAWF,EAAWC,WACrB,CAACD,IAEJ,IAAMzH,EAAc,WAClB,OACE,uBACEzN,UAAU,QACVkJ,SAAU,kBAAMxG,EAASF,GAAgB,KAF3C,UAGE,sBAAKxC,UAAU,aAAf,UACE,cAAC,EAAD,CACEuH,MAAM,OACN1G,KAAK,OACL2G,SAAUA,IACZ,cAAC,EAAD,CACED,MAAM,QACN1G,KAAK,QACL6G,KAAK,QACLF,SAAUA,OAGd,sBAAKxH,UAAU,OAAf,UACE,cAAC,EAAD,CAAUmD,MAAM,UAAUnD,UAAU,iBACpC,iCACE,gEACA,cAAC,GAAD,yBACE0F,GAAG,UACH0O,QAASe,GACL3N,EAAS,YAHf,IAIE0B,SAAU,WACRkM,GAAYD,GACZxM,EAAS,WAAYwM,IAEvBnV,UAAU,uBAIhB,cAAC,GAAD,CACE2S,MAAOA,EACP2B,SAAUA,EACVC,aAAc5L,IAChB,cAAC,EAAD,CACEG,QAAS,kBAAMpG,EZRC,SAAC+G,EAAiB4D,GAAlB,OAAqC,SAAC3K,GAC9DA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,oBACPxB,KAAM,CAAEiI,SAAQ5D,eYKc6L,CAAW7L,EAASyL,EAAYxP,MACxD1F,UAAU,wBACV0H,KAAK,SAHP,wBAaA6N,EAAe,SAACrL,GAAD,OAAOmL,EAAa7D,eAAe/H,EAAS,CAACS,EAAExE,MAEpE,OACE,sBAAK1F,UAAU,gEAAf,UACE,qBAAKA,UAAU,4BAAf,SACE,sBAAKA,UAAU,QAAf,UACGgK,EAAM6C,MAPI,SAACJ,EAAGC,GAAJ,OAAWD,EAAEE,SAAWD,EAAEC,UAAa,EAAI,KAO9BtC,KAAI,SAAAH,GAAC,OAC3B,eAAC,IAAD,CAAoBxE,GAAIwE,EAAExE,GAA1B,UACE,cAAC,GAAD,CACE1F,UAAWC,IAAW,CACpB,iCAAkCsV,EAAarL,KAGjDtB,MAAO,CAAE+B,MAAOT,EAAES,OAClBE,IAAK0C,EACLzC,OAAQ,kBAAayK,EAAarL,IAAMsD,EAAe,WAAf,cACxC9H,GAAIwE,EAAExE,GARR,SAQawE,EAAErJ,MAJRqJ,EAAExE,IAKT,cAAC,GAAD,CAAUuE,KAAMC,MAViBA,EAAExE,OAavC,cAAC,EAAD,CACEoD,QAAS,kBAAMpG,EZvDD,SAAC+G,GAAD,OAAqB,SAAC/G,GAC9CA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,oBACPxB,KAAM,CAAEqE,eYoDwB+L,CAAW/L,KACnCb,MAAO,CAAE+B,MAAO,kBAChB3K,UAAU,qBAHZ,yBAMJ,qBAAKA,UAAU,4BAAf,SACGkV,GAAc,cAACzH,EAAD,MAGjB,cAAC,EAAD,CACE9E,SAAU,WACRA,EAAQ,WAAR,aACA2L,EAASY,EAAYjE,aACrBmE,EAAWF,EAAYC,UAEzB3M,OAzCS,SAAC/C,GAEdwD,GADiB,SAAC/H,GAAD,OAAawB,EZvBR,SAAC+G,EAAiB4D,EAAgBnM,GAAlC,OAAoE,SAACwB,GAC7FA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,oBACPxB,KAAK,aAAGiI,SAAQ5D,WAAYvI,OYoBWuU,CAAWhM,EAASyL,EAAYxP,GAAIxE,MAC3E+H,CAAuBxD,IAwCnBiD,IAAKuM,UCtFES,GAnCuC,WACpD,IAAMhT,EAAWgB,cACT+F,EAAiB8C,cAAjB9C,QACFkM,EAAUtV,YrB0Da,SAACoJ,GAAD,OAC/B1C,aACE,SAAA9F,GAAK,OAAIA,EAAM+F,SAAS2O,QAAQrC,QAChC,SAAAqC,GAAO,OAAIA,EAAQ7P,QAAO,SAAA8P,GAAC,OAAIA,EAAEnM,UAAYA,QqB7DjBoM,CAAgBpM,IAEtCqM,EAAU,kBACd,sBAAK9V,UAAU,OAAf,UACG2V,EAAQtL,KAAI,SAAAuL,GAAC,OACZ,sBAAK5V,UAAU,cAAf,UACE,iCAAS4V,EAAElQ,KACX,sBAAM1F,UAAU,cAAhB,SACE,wBACE0H,KAAK,SACL1H,UAAU,6CACV8I,QAAS,kBAAMpG,GNYA2Q,EMZsBuC,EAAElQ,GNYD,SAAChD,GACnDA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,gBACPxB,KAAM,CAAEiO,oBAHgB,IAACA,GMfjB,wBAOJsC,EAAQI,QAAU,2DAIxB,OACE,uBACE7M,SAAU,kBAAMxG,EAASF,GAAgB,KACzCxC,UAAU,8CAFZ,UAGE,iCACE,oBAAIA,UAAU,2BAAd,uBAGF,cAAC8V,EAAD,QCaSE,GAvCgC,WAC7C,IAAMjU,EAAQ1B,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGd,eACtD,EAAsBkL,mBAAS,YAA/B,mBAAOnC,EAAP,KAAYC,EAAZ,KACM6H,EAAQT,KAEd,OAAQnQ,EACN,cAAC,EAAD,CAAOyB,SAAU,gBAAiBC,KAAK,OAAvC,SACE,sBAAKzD,UAAU,2BAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,6CAAf,UACE,cAAC,EAAD,CACEA,UAAU,sBACVmD,MAAOpB,EAAMlB,OACjB,cAAC,GAAD,CACEwR,KAAM,CACJ,CAAEO,KAAM,eAAgB/R,KAAM,WAAY6E,GAAI,YAC9C,CAAEkN,KAAM,eAAgB/R,KAAM,QAAS6E,GAAI,SAC3C,CAAEkN,KAAM,iBAAkB/R,KAAM,UAAW6E,GAAI,YAEjDmF,IAAKA,EACLC,OAAQA,EACRwH,UAAW,SAAAG,GAAC,OAAIE,EAAM7B,IAAI2B,EAAEG,KAAa7Q,EAAM2D,YAInD,sBAAK1F,UAAU,oBAAf,UACW,aAAR6K,GAAsB,cAAC,GAAD,IACd,UAARA,GAAmB,cAAC,GAAD,IACX,YAARA,GAAqB,cAAC,GAAD,OAGxB,qBAAK7K,UAAU,oBAAf,SACE,cAAC,GAAD,WAIJ,MCpBSwT,GAxB+B,WAC5C,IAAMyC,EAAW5V,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGtB,kBACnD4U,EAAUC,gCAAiCF,EAEjD,OAAQA,EACN,eAAC,EAAD,CACExS,KAAK,KACLD,SAAU,eACVxD,UAAU,sBAHZ,UAIE,qBACEoW,IAAKF,EACLG,QAAS,SAAC5Q,GACRA,EAAEsO,cAAcuC,QAAU,KAC1B7Q,EAAEsO,cAAcqC,IAAhB,UAAyBD,gCAAzB,kCAEJ,mBACEvN,MAAO,CAAE+B,MAAO,iBAChB3K,UAAU,OACVuW,KAAML,EACNM,OAAO,SAJT,8BAMA,M,oBCdSC,GARuB,SAAC1W,GACrC,OACE,iCACEsW,QAAS,SAAA5Q,GAAC,OAAIA,EAAEsO,cAAcqC,IAAhB,UAAyBD,gCAAzB,0BACVpW,KC8CK2W,I,OAvCgD,SAAC3W,GAC9D,IAAMS,EAAyCT,EAAzCS,GAAImW,EAAqC5W,EAArC4W,SAAU9V,EAA2Bd,EAA3Bc,KAApB,EAA+Cd,EAArB6W,eAA1B,MAAoC,OAApC,EACMC,EAAWC,cACbH,IACFA,EAAQ,UAAMR,iCAAN,OAAsCQ,IAEhD,IAAMI,EAAU,SAAClW,GAAD,OAAkBA,EAC/BmW,MAAM,KACN3M,KAAI,SAAA4M,GAAC,OAAIA,EAAE,MACXC,KAAK,IACLvW,MAAM,EAAG,IAENwW,EAAO,kBAAOR,EAChB,cAAC,GAAD,CACE3W,UAAU,YACVoW,IAAKO,EACLS,IAAKvW,EAHP,uBAIA,sBAAMb,UAAU,yDAAhB,8BAA0E+W,EAAQlW,MAEhFwW,EAAW7W,GAAMqW,EAASS,SAASC,WAAW/W,GAC9CgX,EAAiBH,EACnB,wBACA,6BAEJ,OACE,sBACErX,UAAWC,IAAW,UAAW,CAAE,OAAUoX,IAC7ClU,MAAOtC,EAFT,+BAGE,qBAAKb,UAAU,qDAAf,uBACA,qBAAKA,UAAWC,IAAW,qDAEvBuX,EAAeZ,GAFnB,8BAIE,cAACO,EAAD,+BCkCOM,GAnE0C,SAAC,GAAkC,IAAD,EAA/B1V,EAA+B,EAA/BA,MAAO3B,EAAwB,EAAxBA,KAAwB,IAAlBqD,YAAkB,MAAX,KAAW,EACnFiU,EAAcrX,YAAY2O,GAAoB,OAACjN,QAAD,IAACA,OAAD,EAACA,EAAO2D,GAAItF,EAAKsF,KAE/DiS,GAAqB,OAAL5V,QAAK,IAALA,OAAA,EAAAA,EAAOoO,WAAY/P,EAAKsF,GACxCkS,EAAUxX,EAAKyX,cAClBC,WACAC,SAAS,EAAG,KACTC,EAA2B,WAAhB5X,EAAK6X,OAEhBC,EAAe,WACnB,IAAMC,EAAO,CACXxN,MAAQqN,EAAY,aAAe,cACnCvU,KAAM,CACJ,GAAM,UACN,GAAM,cACN,GAAM,WACNA,IAGJ,OACE,sBAAMzD,UAAU,oDAAhB,SACE,sBACE4I,MAAO,CAAEwP,OAAQ,iCACjBpY,UAAWC,IAAW,yCAEpBkY,EAAK1U,KAAM0U,EAAKxN,MAAO,CAAE,OAAmB,OAATlH,SAKvCH,EAAY,CAChB,GAAM,UACN,GAAM,UACN,GAAM,WACNG,GAEF,OACE,sBAAKzD,UAAWC,IAAW,yBAEzB,iBACA,CAAE,cAAe+X,IAHnB,UAIE,sBAAKhY,UAAU,uBAAf,UACE,cAACkY,EAAD,IACA,cAAC,GAAD,CACElY,UAAW,CACT,GAAM,mCACN,GAAK,mCACL,GAAK,sCACLyD,GACF2S,IAAG,UAAKD,iCAAL,OAAqC/V,EAAKiY,gBAEjD,sBAAKrY,UAAU,gBAAf,UACE,qBAAIA,UAAWC,IAAW,CAAE,YAAsB,OAATwD,GAAiBH,GAA1D,UACE,sBACEsF,MAAO,CAAE+B,MAAK,iBAAE+M,QAAF,IAAEA,OAAF,EAAEA,EAAa/M,aAAf,QAAwB,eACtC3K,UAAWC,IAAW,CAAE,uBAAwB8B,IAFlD,SAE6D3B,EAAKkY,WAClE,sBAAMtY,UAAU,uBAAhB,SACI2X,GAA0B,OAATlU,GAAkB,cAAC,KAAD,CAAiB6G,KAAMiO,aAG7DxW,GAAkB,OAAT0B,GACV,sBAAKzD,UAAWC,IAAW,gBAAiBqD,GAA5C,cAA0DsU,YCoErDY,GAlIwB,WACrC,IAAMC,EAAWpY,aAAY,SAACC,GAAD,OAAuBA,EAAEC,KAAKH,QACrDA,EAAOC,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGlB,cACrD,EAAsBsL,mBAAS,QAA/B,mBAAOnC,EAAP,KAAYC,EAAZ,KAKM4N,EAAwB,CAC5B,MAAS,CACP/N,MAAO,SACPL,KAAMqO,KACNxV,MAAO,6BAET,MAAS,CACPwH,MAAO,SACPL,KAAMqO,KACNxV,MAAO,4BAET,MAAS,CACPwH,MAAO,OACPL,KAAMqO,KACNxV,MAAO,4BAET,GAAM,CACJwH,MAAO,SACPL,KAAMsO,KACNzV,MAAO,sCAET,MAAS,CACPwH,MAAO,iBACPL,KAAMuO,KACN1V,MAAO,UAET,OAAU,CACRwH,MAAO,kBACPL,KAAMwO,KACN3V,MAAO,wCAIL4V,EAAa,kBAAO3Y,EACxB,qBAAKJ,UAAU,YAAf,SACGI,EAAK4Y,OAAO3O,KAAI,SAAAqC,GACf,MAA+BgM,EAAWhM,GAAlC/B,EAAR,EAAQA,MAAOL,EAAf,EAAeA,KAAMnH,EAArB,EAAqBA,MACrB,OACE,cAAC,KAAD,CACEA,MAAOA,EACPnD,UAAU,OACV4I,MAAO,CAAE+B,SACTlH,KAAK,KACL6G,KAAMA,SAIZ,MAEE2O,EAAW,kBAAO7Y,EACtB,qBAAKJ,UAAU,mBAAf,SACE,sBAAKA,UAAU,aAAf,UACE,+CACA,sBAAMmD,MAAO/C,EAAK8Y,UAAUpB,WAA5B,SAAyCqB,KAAO/Y,EAAK8Y,WAAWE,OAAO,qBAGzE,MAEEC,EAAmB,WACvB,IAAMC,EAAQnH,cAEd,IAAK/R,EAAM,OAAO,KAElB,IAAMmZ,EAAed,EAASe,SAC3B1T,QAAO,SAAAJ,GAAE,OAAItF,EAAKoZ,SAASzK,SAASrJ,MACpC2E,KAAI,SAAA3E,GAAE,OAAImE,GAASnE,EAATmE,CAAayP,EAAM3W,eAEhC,OACE,gCACE,cAAC,EAAD,CACEQ,MAAK,UAAKoW,EAAaxD,OAAlB,kBACL/V,UAAU,SACZ,qBAAKA,UAAU,OAAf,SACGuZ,EAAalP,KAAI,SAAAtI,GAAK,OAAKA,EACxB,qBAAK/B,UAAU,kCAAf,SACE,cAAC,GAAD,CACE2W,SAAU5U,EAAM+R,QAChBjT,KAAMkB,EAAMlB,SAEhB,cAOZ,OAAQT,EACN,eAAC,EAAD,CACEoD,SAAU,cACVC,KAAK,KAFP,UAGE,yBAAQzD,UAAU,iBAAlB,UACE,sBAAKA,UAAU,MAAf,UACE,cAAC,GAAD,CAAUyD,KAAK,KAAKrD,KAAMA,IAC1B,cAAC2Y,EAAD,OAEF,oBAAI/Y,UAAU,sBACd,cAAC,GAAD,CACEA,UAAU,aACV6K,IAAKA,EACLC,OAAQA,EACRuH,KAAM,CACJ,CAAExR,KAAM,OAAQ6E,GAAI,QACpB,CAAE7E,KAAM,gBAAiB6E,GAAI,iBAE/B6M,UAAW,CACT5H,MAAO,gBACP8O,WAAY,OACZC,QAAS,aACTC,OAAQ,WACRpO,aAAc,EACdF,QAAS,gBAEXmH,gBAAiB,CAAEoH,aAAc,gCAErC,uBAAM5Z,UAAU,MAAhB,UACY,SAAR6K,GAAmB,cAACoO,EAAD,IACX,iBAARpO,GAA2B,cAACwO,EAAD,UAG/B,MCzIAQ,GAAM,SAACxR,GAAD,OACVyF,KAAKC,MAAM5J,aAAaC,QAAb,iBAA+BiE,MACtCyR,GAAM,SAACzR,EAAqCc,GAAtC,OACV2E,KAAKC,MAAM5J,aAAa4V,QAAb,iBAA+B1R,GAAiBc,KAEvDxI,GAAQC,YAAY,CACxBC,KAAM,SACNC,aAAc,CACZ2J,QAAO,WAAEoP,GAAI,kBAAN,WACPG,kBAAiB,WAAEH,GAAI,4BAAN,YAEnB9Y,SAAU,CACRkZ,cAAe,SAACvP,GACd,IAAMvB,GAASuB,EAAOD,QACtBC,EAAOD,QAAUtB,GAEnB+Q,iBAAkB,SAACxP,GACjB,IAAMvB,GAASuB,EAAOsP,kBACtBtP,EAAOsP,kBAAoB7Q,MAI3B5G,GAAU5B,GAAM4B,QACP5B,MAAf,QCvBMA,GAAQC,YAAY,CACxBC,KAAM,OACNC,aAAc,CACZqZ,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAWC,KAEbvZ,SAAU,CACRoZ,gBAAiB,SAACI,GAAWA,EAAKJ,iBAAkB,GACpDK,aAAc,SAACD,GAAWA,EAAKH,iBAAkB,GACjDK,KAAM,SAACF,EAAD,GAAwB,IAAfrZ,EAAc,EAAdA,QAAgBqZ,EAAKE,KAAOvZ,GAC3CwZ,iBAAkB,SAACH,EAAD,GAAwB,IAAfrZ,EAAc,EAAdA,QAAgBqZ,EAAKF,UAAYnZ,MAGnDqB,GAAU5B,GAAM4B,QACd5B,MAAf,QCVMA,GAAQC,YAAY,CACxBC,KAAM,QACNC,aAAc,GACdC,SAAU,CACR4E,QAAS,SAACgV,EAAD,GAAsD,IAA5CzZ,EAA2C,EAA3CA,QACjByZ,EAAM9U,KAAN,MAAA8U,EAAK,YAASzZ,EAAQ4E,OAAOT,EAAOsV,OAEtCrU,QAAS,SAACqU,EAAD,GAA2D,IAAjDzZ,EAAgD,EAAhDA,QACXd,EAAOua,EAAM1T,MAAK,SAAA0C,GAAC,OAAIA,EAAEjE,KAAOxE,EAAQyN,UAC1CvO,GAAMmG,OAAOC,OAAOpG,EAAMc,EAAQ0Z,cAExC5U,QAAS,SAAC2U,EAAD,GAA2D,IAAjDzZ,EAAgD,EAAhDA,QACX+E,EAAQ0U,EAAMzU,WAAU,SAAAyD,GAAC,OAAIA,EAAEjE,KAAOxE,EAAQyN,UACpDgM,EAAMtU,OAAOJ,EAAO,OAKb1D,GAAU5B,GAAM4B,QACd5B,MAAf,QAEaka,GAAa,SAAC3Z,GAAD,OAAmC,SAACwB,GAC5DA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,cACPxB,KAAK,2BAAMlE,GAAP,IAAgBgD,MAAOA,WA2ClB4W,GAAU,SAACpV,GAAD,OACrBqB,aACE,SAAA9F,GAAK,OAAIA,EAAM+F,SAAS2T,SACxB,SAAAA,GAAK,uBAAIA,EAAM1T,MAAK,SAAA0C,GAAC,OAAIA,EAAEjE,KAAOA,YAA7B,QAAoC,CACvC2S,UAAW,uBACXR,cAAe,EACfS,SAAU,eCWDyC,GA/EuC,WACpD,IAAMrY,EAAWgB,cACXtD,EAAOC,aAAY,SAACC,GAAD,OAAuBA,EAAEC,KAAKH,QACvD,EAA6C4I,cAArCxB,EAAR,EAAQA,SAAUyB,EAAlB,EAAkBA,aAAcN,EAAhC,EAAgCA,SAC1B8B,EAAUpK,aAAY,SAACC,GAAD,OAAuBA,EAAEoK,OAAOD,WAW5D,OACE,sBAAKzK,UAAU,8CAAf,UACE,uBAAMkJ,SAAU,kBAAMxG,EAASF,GAAgB,KAA/C,UACE,iCACE,oBAAIxC,UAAU,2BAAd,0BAGF,0BAASA,UAAU,QAAnB,UACE,cAAC,EAAD,CACEuH,MAAM,WACN1G,KAAK,WACL2G,SAAUA,EACVC,QAAS,CAAE0B,MAAO/I,EAAKkY,UACvBtY,UAAU,SACZ,cAAC,EAAD,CACEuH,MAAM,QACN1G,KAAK,QACL2G,SAAUA,EACVC,QAAS,CAAE0B,MAAO/I,EAAK4a,OACvBhb,UAAU,SACZ,cAAC,EAAD,CACE0H,KAAK,OACLmM,OAAO,UACPtM,MAAM,eACNvH,UAAU,OACVa,KAAK,YACL2G,SAAU,aACVC,QAAS,CAAE0B,MAAO/I,EAAKiY,WACvBnP,SAAU,SAACzD,GAAO,IAAD,IACTZ,EAAI,UAAGY,EAAEsO,qBAAL,iBAAG,EAAiBC,aAApB,aAAG,EAAyB,GAClCnP,GAAMnC,EDWQ,SAACmC,GAAD,OAAgB,SAACnC,GAC/C,IAAMuR,EAAc,yCAAG,8BAAAxH,EAAA,6DAAStH,EAAT,EAASA,IAAT,kBACrBzC,EAASmY,GAAW,CAAExC,UAAWlT,MADZ,2CAAH,sDAEpBzC,EAASkC,EAAWC,EAAMoP,KCdKgH,CAAiBpW,UAI1C,cAAC,EAAD,CACE8D,SAAUA,EACVH,OA7CO,SAAC/C,GAEdwD,GADiB,SAAC/H,GAAD,OAAawB,EAASmY,GAAW3Z,MAClD+H,CAAuBxD,IA4CjBiD,IAAKtI,OAGT,cAAC,EAAD,CACAJ,UAAU,YACVmD,MAAM,sBAEN,oCACA,sBAAKnD,UAAU,aAAf,UACE,uBAAO6H,QAAQ,UAAf,sBACA,cAAC,GAAD,CACEqB,SAAU,SAACzD,GAAD,OAAOA,EAAEyV,mBACnBpS,QAAS,kBAAMpG,GHjDU,SAACA,EAAUC,GAC5C,IAAM+H,EAAS/H,IAAW+H,OAE1BhI,EAASH,GAAQ0X,iBACjBH,GAAI,WAAYpP,EAAOD,aG8Cf2J,QAAS3J,EACTzK,UAAU,cACV0F,GAAG,eAGP,cAAC,EAAD,CACEuE,KAAK,SACLnB,QAASG,GA9DE,WACMI,OAAOC,QAAQ,+CAClB5G,GD8BU,SAACA,GAC/BA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,cACPxB,KAAM,CAAElB,MAAOA,cC4BXlE,UAAU,YAHZ,2BC5EAW,GAAQC,YAAY,CACxBC,KAAM,OACNC,aAAc,CACZqa,gBAAgB,EAChBC,cAAc,GAEhBra,SAAU,CACRsa,MAAO,SAAC9a,EAAD,GAAqD,IAA5CW,EAA2C,EAA3CA,QACdX,EAAKH,KAAOc,EAAQd,MAEtBkb,YAAa,SAAC/a,EAAD,GAA0D,IAAjDW,EAAgD,EAAhDA,QACpBqF,OAAOC,OAAOjG,EAAKH,KAAMc,EAAQ0Z,cAEnCW,SAAU,SAAChb,GAAWA,EAAK4a,gBAAiB,GAC5CK,UAAW,SAACjb,UACHA,EAAKH,KACZG,EAAK4a,gBAAiB,EACtB5a,EAAK6a,cAAe,GAEtBA,aAAc,SAAC7a,GAAWA,EAAK6a,cAAe,MAIrC7Y,GAAU5B,GAAM4B,QACd5B,MAAf,QAEa0a,GAAQ,kBAAM,SAAC3Y,EAAUC,IAChCA,IAAWpC,KAAKH,MAAS8D,KAE7BxB,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,QACPxB,KAAM,CAAElB,MAAOA,UAqCNuX,GAAa,kBAAM,SAAC/Y,GAC/BA,EAASH,GAAQiZ,aACjBrX,aAAauX,WAAW,WAebC,GAAiB,SAACC,GAAD,OAAkB,SAAClZ,GAC/CA,EAASiE,EAAItC,cAAc,CACzBwX,UAAW,GACX1W,IAAI,qBAAD,OAAuByW,GAC1B9W,SAAU,YAAwD,IAArDgX,EAAoD,EAApDA,QAAS5X,EAA2C,EAA3CA,MAChB4X,GAASpZ,EAASI,EAAW,CAAEsF,QAAS0T,EAASC,QAAS,UAC1D7X,IACFC,aAAa4V,QAAQ,QAAS7V,GAC9BxB,EAAS2Y,aC1BFW,GAhEuC,WACpD,IAAMtZ,EAAWgB,cACXuY,EAAejT,cACf5I,EAAOC,aAAY,SAACC,GAAD,OAAuBA,EAAEC,KAAKH,QAQvD,OACE,sBAAKJ,UAAU,8CAAf,UACE,iCACE,oBAAIA,UAAU,2BAAd,gCAGF,cAAC,EAAD,CACEA,UAAU,YACVmD,MAAM,oBAER,0BAASnD,UAAU,QAAnB,WACII,EAAK8b,UAAY,sBAAKlc,UAAU,YAAf,UACjB,cAAC,KAAD,CAAiBsK,KAAM6R,OACvB,sBAAMnc,UAAU,OAAhB,sEAGF,cAAC,EAAD,CACEuH,MAAM,eACN1G,KAAK,cACL6G,KAAK,WACLF,SAAUyU,EAAazU,WAEzB,cAAC,EAAD,CACED,MAAM,eACN1G,KAAK,cACL6G,KAAK,WACL1H,UAAU,OACVwH,SAAUyU,EAAazU,WAEzB,qBAAKxH,UAAU,kCAAf,SACE,cAAC,EAAD,CACE8I,QAASmT,EAAahT,cArCP,SAACxD,GACxB,MAAqCwW,EAAahH,YAA1CmH,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YAErBJ,EAAahT,cADI,kBAAMvG,EDyFG,SAAC0Z,EAAqBC,GAAtB,OAA8C,SAAC3Z,EAAUC,GACrF,IAAMvC,EAAOuC,IAAWpC,KAAKH,KAE7BsC,EAASiE,EAAItC,cAAc,CACzBwX,UAAW,GACX3W,OAAQ,OACRC,IAAI,wBACJC,KAAM,CAAE4V,MAAO5a,EAAK4a,MAAOoB,cAAaC,eACxCvX,SAAU,YAAkE,IAA/DgX,EAA8D,EAA9DA,QAAS5X,EAAqD,EAArDA,MAChB4X,GAASpZ,EAASI,EAAW,CAAEsF,QAAS0T,EAASC,QAAS,UAC1D7X,GAAOC,aAAa4V,QAAQ,QAAS7V,QCnGXoY,CAAeF,EAAaC,MAC5DJ,CAAoCxW,MAmC5BzF,UAAU,aAFZ,yBAMJ,0BAASA,UAAU,QAAnB,UACE,cAAC,EAAD,CAAUmD,MAAM,eAAenD,UAAU,SAEvCI,EAAK8b,SACH,sBAAKlc,UAAU,UAAf,UACE,cAAC,KAAD,CAAiBsK,KAAMiS,KAAevc,UAAU,SAChD,uFAEF,sBAAKA,UAAU,UAAf,UACE,cAAC,KAAD,CAAiBsK,KAAMkS,KAAuBxc,UAAU,SACxD,4GCdCyc,GA1C+B,WAC5C,IAAMrc,EAAOC,aAAY,SAACC,GAAD,OAAuBA,EAAEC,KAAKH,QACvD,EAAsB4M,mBAAS,YAA/B,mBAAOnC,EAAP,KAAYC,EAAZ,KAEA,OAAQ1K,EACN,cAAC,EAAD,CACEoD,SAAU,eACVC,KAAK,OAFP,SAGE,sBAAKzD,UAAU,2BAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,6CAAf,UACE,cAAC,EAAD,CACEA,UAAU,uBACVmD,MAAM,kBACR,cAAC,GAAD,CACE0H,IAAKA,EACLC,OAAQA,EACRuH,KAAM,CACJ,CAAExR,KAAM,WAAY6E,GAAI,YACxB,CAAE7E,KAAM,WAAY6E,GAAI,eAE5B,qBAAK1F,UAAU,4DAEf,cAAC,IAAD,CACEQ,GAAG,UACHR,UAAU,4DAFZ,yBAMJ,sBAAKA,UAAU,oBAAf,UACW,aAAR6K,GAAsB,cAAC,GAAD,IACd,aAARA,GAAsB,cAAC,GAAD,OAGzB,qBAAK7K,UAAU,oBAAf,SACE,cAAC,GAAD,WAIJ,M,UC9CA0c,G,QAAMC,EAAWC,QAAQzG,yBAAoC,CACjE0G,QAAQ,EACRC,KAAK,MACLC,WAAY,CAAC,YAAa,UAAW,iBAGvCL,GAAGC,GAAG9H,GAAG,QAAQ,kBAAMmI,QAAQC,IAAI,6BAEpBP,ICqBXQ,GC9BAC,GACAC,GACAC,GACAC,GAEAlX,GFIWsW,MCPT/b,GAAQC,YAAY,CACxBC,KAAM,SACNC,aAAc,GACdC,SAAU,CACRwc,UAAW,SAACC,EAAD,GAA+E,IAApEtc,EAAmE,EAAnEA,QACpBsc,EAAO3X,KAAK3E,IAEduc,kBAAmB,SAACD,EAAD,GAA+E,IAApEtc,EAAmE,EAAnEA,QACtB+E,EAAQyX,GAASF,EAAQtc,EAAQyN,OAAQzN,EAAQkF,WACvDoX,EAAOnX,OAAOJ,EAAO,OAKrByX,GAAW,SAACF,EAAe7O,EAAgBvI,GAC/C,OAAOoX,EAAOtX,WAAU,SAAAuM,GAAC,OACvBA,EAAErM,YAAcA,GACbqM,EAAE9D,SAAWA,MAGPpM,GAAU5B,GAAM4B,QACd5B,MAAf,QEnBMA,GAAQC,YAAY,CACxBC,KAAM,WACNC,aAAc,CACZ6E,QAAS,GACT2N,KAAM,IAERvS,SAAU,CACR4E,QAAS,cAAqE,IAAlE2N,EAAiE,EAAjEA,KAAM3N,EAA2D,EAA3DA,QAAazE,EAA8C,EAA9CA,QAC7BoS,EAAKzN,KAAL,MAAAyN,EAAI,YAASpS,EAAQ4E,OAAOT,EAAOiO,MAC/BpS,EAAQ6U,SACVpQ,EAAQzE,EAAQ,GAAGkF,WAAa,YAEpCL,QAAS,cAAiE,IAA9DuN,EAA6D,EAA7DA,KAAUpS,EAAmD,EAAnDA,QACpBoS,EAAKzN,KAAK3E,EAAQ4a,UAEpB9V,QAAS,cAAiE,IAA9DsN,EAA6D,EAA7DA,KAAUpS,EAAmD,EAAnDA,QACd+E,EAAQqN,EAAKpN,WAAU,SAAAqI,GAAC,OAAIA,EAAE7I,KAAOxE,EAAQyc,aACnDrK,EAAKjN,OAAOJ,EAAO,IAErBK,QAAS,cAAiE,IAA9DgN,EAA6D,EAA7DA,KAAUpS,EAAmD,EAAnDA,QACd4a,EAAUxI,EAAKrM,MAAK,SAAAsH,GAAC,OAAIA,EAAE7I,KAAOxE,EAAQ4a,QAAQpW,MACxDa,OAAOC,OAAOsV,EAAS5a,EAAQ4a,aAKxB8B,GAAqB,SAACxX,GAAD,OAChCW,aACE,SAAA9F,GAAK,OAAIA,EAAM+F,SAAS6W,SAASvK,QACjC,SAAAuK,GAAQ,OAAIA,EAAS/X,QAAO,SAAAyI,GAAC,OAAIA,EAAEnI,YAAcA,SAexC0X,GAAgB,SAAC1X,EAAmBlF,EAAkC6c,GAAtD,OAAoF,SAACrb,GAChHA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,iBACPxB,KAAK,2BAAMlE,GAAP,IAAgBkF,YAAW2X,wBAyBtBxb,GAAU5B,GAAM4B,QACd5B,MAAf,Q,SC1EMA,GAAQC,YAAY,CACxBC,KAAM,QACNC,aAAc,GACdC,SAAU,CACRid,YAAa,SAACC,EAAD,GAA8C,IAApC/c,EAAmC,EAAnCA,QACrBqF,OAAOC,OAAOyX,EAAO/c,IAEvBkN,MAAO,SAAC6P,EAAD,GAAoD,IAA1C/c,EAAyC,EAAzCA,QACf+c,EAAM/c,EAAQuI,SAAS5D,KAAK3E,EAAQkF,YAEtC8X,oBAAqB,SAACD,EAAD,GAAoD,IAA1C/c,EAAyC,EAAzCA,QACvBid,EAAaF,EAAM/c,EAAQuI,SAC3BxD,EAAQkY,EAAWC,QAAQld,EAAQkF,WACzC+X,EAAW9X,OAAOJ,EAAO,IAE3BoY,kBAAmB,SAACJ,EAAD,GACjBA,EADoE,EAAzC/c,QACbuI,SAAW,OAKlBlH,GAAU5B,GAAM4B,QACd5B,MAAf,QFrBI2d,GAAsB,GAOnB,SAAeC,GAAtB,mC,gDAAO,WAAkCC,GAAlC,gBAAA/R,EAAA,yDACLrG,GAAYoY,EACNC,GAAS,IAAIC,MAAOC,UAAYvB,GACtCJ,QAAQC,IAAI,iBAAkBwB,GAEzBpB,IAAgBC,GALhB,gCAMGsB,KANH,OAOAtB,GAASuB,SACZvB,GAASuB,OAASC,IAMG,cAAnBxB,GAASrc,OACXqc,GAASyB,QAEX5B,GAAU6B,YAAW,iBAA0B,cAAnB1B,GAASrc,OAA0Bqc,GAAS2B,SAAQ,KAjB3E,4C,+BA+CQL,K,gFAAf,uBAAAnS,EAAA,sEACsBgH,UAAUyL,aAAaC,aAAa,CAAEC,OAAO,IADnE,OACE/B,GADF,QAEEC,GAAW,IAAI+B,cAAchC,KACpBiC,QAAU,kBAAMhB,GAAc,IACvChB,GAASiC,gBAAkB,SAAC9Z,GAAD,OAAO6Y,GAAYzY,KAAKJ,EAAEL,OACrDkY,GAASuB,OAASC,GALpB,4C,+BAQeA,K,gFAAf,6BAAArS,EAAA,sDACEuQ,QAAQC,IAAI,kBAEZG,IAAe,IAAIsB,MAAOC,UACpBxG,EAAO,IAAIqH,KAAKlB,GAAa,CAAE,KAAQ,2BAC7C5B,GAAG1Z,KAAK,aAAc,CAAEoD,aAAW+R,SACnCmF,GAASuB,OAASC,GANpB,4C,sBAzBApC,GAAG7H,GAAG,aAAN,yCAAoB,gDAAApI,EAAA,yDAASrG,EAAT,EAASA,UAAWqZ,EAApB,EAAoBA,YACtCzC,QAAQC,IAAI,sBACP7W,EAFa,gEAK0BqZ,GAL1B,IAKlB,2BAA0D,EAAD,QAAtCC,EAAsC,EAA5CvH,KAAmBxJ,EAAyB,EAAzBA,OAC9B,UAAA7K,SAASC,cAAT,gBAAgC4K,WAAhC,SAA2CgR,SAErCxH,EAAO,IAAIqH,KAAK,CAACE,GAAc,CAAE,KAAS,4BAC1CN,EAAQtb,SAAS8b,cAAc,UAC/Bla,GAAN,eAAmBiJ,GACnByQ,EAAMhJ,IAAM/M,OAAOwW,IAAIC,gBAAgB3H,GACvCiH,EAAMW,OAZU,8BAclBxB,GAAmBnY,GAdD,2CAApB,uDGvBA,IAkJe4Z,GAlJ6B,WAC1C,IAAMtd,EAAWgB,cACXuc,EAAUC,cACV5G,EAAQnH,cACRgO,EAAc9f,aAAY,SAACC,GAAD,OAAuBA,EAAEia,KAAKH,mBACtDrS,EAAoBnE,cAApBmE,gBAEF9G,EAAQ,kBAAMqY,EAAM3W,YAwI1B,OArIAqF,qBAAU,WACR,IAAImY,EAAJ,CAEA,IAAMC,EAAe,SAACrd,GAAD,OACnBgF,EAAgB,GAAD,OAAIhF,EAAOqF,QAAX,KAAuB,CACpCH,aAAc,CAAEC,SAAU,SAAUC,WAAY,QAChD4T,QAAShZ,EAAOgZ,QAChBsE,iBAAkB,OAGtB3D,GAAG7H,GAAG,SAAS,SAACyL,GAAD,eAAgBF,EAAa,CAC1CrE,QAAS,QACT3T,QAAO,oBAAEkY,EAAMlb,YAAR,aAAE,EAAY0W,eAAd,QAAyBwE,EAAMxE,aAExCrb,EAAOoU,GAAG,SAAUuL,GAGpB1D,GAAG7H,GAAG,kBAAkB,SAAC0L,GAGvB,MAAqBtf,IAAbV,EAAR,EAAQA,KAAMqC,EAAd,EAAcA,GACR4d,EAAcD,EAAKE,YAAclgB,EAAKH,KAAMsF,GAKlD,GAFAhD,EAASkD,EAASG,QAAQwa,IAEtBC,GAAe5d,EAAGd,YAAa,CAEjC,GADAY,EAASge,EAAUxe,eACO,UAAtBqe,EAAK1e,QAAQ6F,KAAkB,OAEnCuY,EAAQpa,KAAR,oBAA0BjD,EAAGd,YAAY4D,GAAzC,YAA+C6a,EAAK1e,QAAQ6D,SAGhEgX,GAAG7H,GAAG,kBAAkB,SAAC0L,GAAU,IAAD,EAExB3d,EAAO3B,IAAP2B,GACU2d,EAAKna,aAAL,UAAmBxD,EAAGhB,qBAAtB,aAAmB,EAAkB8D,KAEtC9C,EAAGd,aAClBme,EAAQpa,KAAR,oBAA0BjD,EAAGd,YAAY4D,KAE3ChD,EAASkD,EAASI,QAAQua,OAE5B7D,GAAG7H,GAAG,kBAAkB,SAAC0L,GAAD,OAAU7d,EAASkD,EAASU,QAAQia,OAC5D7D,GAAG7H,GAAG,gBAAgB,SAAC0L,GACrB7d,EAASiY,GAAMhV,QAAQ4a,EAAK5F,QAC5BjY,EAASkD,EAASD,QAAQ4a,EAAK3a,WAC/BlD,EAASyL,GAAQxI,QAAQ4a,EAAKpS,UAC9BzL,EAASsH,GAAMrE,QAAQ4a,EAAKvW,QAC5BtH,EAAS6G,GAAOxD,QAAQwa,IACxB7d,EAASge,EAAUxe,eACnB+d,EAAQpa,KAAR,oBAA0B0a,EAAKxe,MAAM2D,QAEvCgX,GAAG7H,GAAG,gBAAgB,SAAC0L,GAAU,IAAD,EACtB3d,EAAO3B,IAAP2B,GACc2d,EAAK9W,WAAL,UAAiB7G,EAAGd,mBAApB,aAAiB,EAAgB4D,MAErDhD,EAASge,EAAUxe,eACnB+d,EAAQpa,KAAK,kBAEfnD,EAAS6G,GAAOvD,QAAQua,IAExB,IAAM/R,EAAWI,GAAc2R,EAAK9W,QAAnBmF,CAA4B3N,KAAUyE,GACvDhD,EAASyL,GAAQG,QAAQ,CAAEE,iBAG7BkO,GAAG7H,GAAG,oBAAoB,SAAC0L,GAEzB7d,EAASiY,GAAMhV,QAAQ,CAAC4a,EAAKngB,QAC7BsC,EAASyL,GAAQC,MAAMmS,OAEzB7D,GAAG7H,GAAG,uBAAuB,SAAC0L,GAAD,OAAU7d,EAASyL,GAAQ7H,QAAQia,OAEhE7D,GAAG7H,GAAG,uBAAuB,SAAC0L,GAAD,OAAU7d,EAASyL,GAAQG,QAAQiS,OAChE7D,GAAG7H,GAAG,qBAAqB,SAAC0L,GAAD,OAAU7d,EAASsH,GAAMjE,QAAQwa,OAC5D7D,GAAG7H,GAAG,qBAAqB,SAAC0L,GAAD,OAAU7d,EAASsH,GAAMhE,QAAQua,OAC5D7D,GAAG7H,GAAG,qBAAqB,SAAC0L,GAAD,OAAU7d,EAASsH,GAAM1D,QAAQia,OAC5D7D,GAAG7H,GAAG,gBAAgB,SAAC0L,GAAD,OAAU7d,EAAS6G,GAAOjD,QAAQia,OACxD7D,GAAG7H,GAAG,iBAAiB,SAAC0L,GACtB7d,EAASiT,GAAQ5P,QAAQwa,IACzB7d,EAASge,EAAUnf,cAAcgf,EAAKhN,YAExCmJ,GAAG7H,GAAG,kBAAkB,SAAC0L,GAAU,IAAD,EAGhC,KADe,UADEtf,IAAQV,KAAKH,KACHugB,eAAZ,aAAG,EAAkBC,QAAQ7R,SAASwR,EAAKzE,QAAQ+E,WAClE,CAEAne,EAASmb,GAAS9X,QAAQwa,IAEJA,EAAKzE,QAAnB1V,UAAR,IACQxE,EAAkBX,IAAQ2B,GAA1BhB,cACJA,GAAiBA,EAAc8D,OAGrCgX,GAAG7H,GAAG,kBAAkB,SAAC0L,GAAD,OAAU7d,EAASmb,GAAS7X,QAAQua,OAC5D7D,GAAG7H,GAAG,kBAAkB,SAAC0L,GAAD,OAAU7d,EAASmb,GAASvX,QAAQia,OAC5D7D,GAAG7H,GAAG,mBAAmB,gBAAGlG,EAAH,EAAGA,OAAQsJ,EAAX,EAAWA,OAAX,OACvBvV,EAASiY,GAAMrU,QAAQ,CAAEqI,SAAQiM,YAAa,CAAE3C,gBAClDyE,GAAG7H,GAAG,SAAS,SAAC0L,GACd7d,EAASnC,GAAK8a,MAAMkF,IACpB7d,EAASiY,GAAMhV,QAAQ,CAAC4a,EAAKngB,WAE/Bsc,GAAG7H,GAAG,gBAAgB,SAAC0L,GACrB7d,EAAS8a,GAAOD,UAAUgD,IAG1BvB,YAAW,kBAAMtc,EAAS8a,GAAOC,kBAAkB8C,MADjC,QAGpB7D,GAAG7H,GAAG,eAAe,WACnB6H,GAAGoE,aACHb,EAAQpa,KAAK,KACbnD,EAAS+Y,SAEXiB,GAAG7H,GAAG,eAAe,SAAC0L,GACpB7d,EAASnC,GAAK+a,YAAYiF,IAC1B7d,EAASiY,GAAMrU,QAAQia,OAEzB7D,GAAG7H,GAAG,qBAAN,yCAA4B,kCAAApI,EAAA,yDAASkC,EAAT,EAASA,OAAQoS,EAAjB,EAAiBA,MACrC3b,EAAO,CAAEuJ,SAAQiM,YAAa,CAAEmG,UACrB9f,IAAQV,KAAKH,KACjBsF,KAAOiJ,GAClBjM,EAASnC,GAAK+a,YAAYlW,IAC5B1C,EAASiY,GAAMrU,QAAQlB,KAEtB2b,EAAM3a,UAPmB,iCAShBmY,GAAmBwC,EAAM3a,WATT,+BHjH9B4W,QAAQC,IAAI,qBAEZ+D,aAAa7D,IACTG,IAA+B,cAAnBA,GAASrc,QACvBqc,GAASuB,OAAS,KAClBvB,GAAS2B,QG4GmB,4CAA5B,uDAaAvc,EAAS6X,GAAKC,mBACb,CAAC2F,IAEG,MC3GMc,GArCgD,SAAClhB,GAC9D,IAAM2C,EAAWgB,cACXwd,EAAW7gB,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGR,gBACnDqI,EAAUpK,aAAY,SAACC,GAAD,OAAuBA,EAAEoK,OAAOD,WAE5DzC,qBAAU,WAAO,IAAD,EACdlE,SAASX,MAAT,UAAiBpD,EAAMohB,iBAAvB,QAAoC,eACnC,IAYH,OARK1W,IACHuS,QAAQC,IAAR,iEACAD,QAAQC,IAAR,+KAOA,8CAAKnU,QAXS,kBAAMoY,GAAYxe,EAASE,EAAGT,eAAe,OAYrDgF,EAAYpH,IADlB,cAEGA,EAAMG,SACP,cAAC,GAAD,IAEA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,SCnDS,OAA0B,iCCA1B,OAA0B,oCCA1B,OAA0B,oCCA1B,OAA0B,mC,UCoF1BkhB,GArE2B,WACxC,IAAM1e,EAAWgB,cACX2W,EAAYha,aAAY,SAACC,GAAD,OAAuBA,EAAEia,KAAKF,aAE5DrS,qBAAU,WAAQtF,GhB0CY,SAACA,GAC/BA,EAASiE,EAAItC,cAAc,CACzBwX,UAAW,CAACtB,GAAKG,iBAAiBhT,MAClCvC,IAAK,uBgB7CqC,IAE5C,IAAMkc,EAAY,SAACthB,GAAD,OAChB,qDACE,oBAAIC,UAAU,4CAAd,8BAA2DD,EAAMoD,QACjE,qBAAKnD,UAAU,cAAcoW,IAAKrW,EAAMqW,IAAKgB,IAAI,OAAjD,2BAIAtC,EAAiB,GAWrB,OAVAhR,SAASwd,iBAAiB,SAAS,SAAC7b,GAElC,GADAqP,EAAKjP,KAAKJ,EAAE4C,KACPyM,EAAKoC,KAAK,IAAIqK,SAAS,cAE5B,IACEzd,SAASC,cAAc,MAAOyd,YAAc,cAC5C1d,SAASC,cAAc,SAAUyd,YAAc,qBAC/C,cAIF,eAAC,GAAD,CACExhB,UAAU,sCACVmhB,UAAU,uCAFZ,+BAGE,cAAC,EAAD,wBACA,0BAASnhB,UAAU,wBAAnB,+BACE,2FACA,qBAAKA,UAAU,sBAAf,8BACE,sBAAKA,UAAU,gCAAf,2IAGGmR,QAAQkJ,IACP,uBAAMra,UAAU,OAAhB,uCACO,cAAC,KAAD,CACLmJ,MAAOkR,EACPoH,YAAa,OACbC,mBAAmB,EAHd,uBADP,oDASN,wBAAQ1hB,UAAU,4CAAlB,8BACE,cAAC,IAAD,CAAMQ,GAAG,SAAT,8BACE,cAAC,EAAD,CAAcR,UAAU,kDAAxB,4CAGJ,wBAAQA,UAAU,qCAAlB,8BACE,cAAC,IAAD,CAAMQ,GAAG,gBAAT,8BACE,cAAC,EAAD,CAAcR,UAAU,oDAAxB,qEAKN,0BACEmD,MAAM,mDACNnD,UAAU,yDAFZ,+BAGE,cAACqhB,EAAD,CAAWjL,IAAKuL,GAAMxe,MAAM,kBAA5B,uBACA,cAACke,EAAD,CAAWjL,IAAKwL,GAASze,MAAM,uBAA/B,uBACA,cAACke,EAAD,CAAWjL,IAAKyL,GAAS1e,MAAM,yBAA/B,uBACA,cAACke,EAAD,CAAWjL,IAAK0L,GAAQ3e,MAAM,eAA9B,8BC7CO4e,GA3B4B,WACzC,IAAMrf,EAAWgB,cACX7B,EAAUxB,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGhB,iBAClDG,EAAQ1B,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGd,eAChDkY,EAAoB3Z,aAAY,SAACC,GAAD,OAAuBA,EAAEoK,OAAOsP,qBAEtE,OACE,sBAAKha,UAAU,+CAAf,UACG6B,GAAW,cAAC,KAAD,CACVyI,KAAM0X,KACNhiB,UAAU,mBACZ,qBAAIA,UAAU,iBAAd,UACE,sBAAMA,UAAU,YAAhB,gBAA6B6B,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAShB,OACtC,sBAAMb,UAAU,aAAhB,gBAA8B6B,QAA9B,IAA8BA,OAA9B,EAA8BA,EAASuH,aAExCrH,GACC,cAAC,KAAD,CACE+G,QAAS,kBAAMpG,GnBUa,SAACA,EAAUC,GAC/C,IAAM+H,EAAS/H,IAAW+H,OAE1BhI,EAASH,GAAQ2X,oBACjBJ,GAAI,qBAAsBpP,EAAOsP,uBmBbzB1P,KAAM2X,KACNjiB,UAAWC,IAAW,iBAAkB,CACtC,QAAW+Z,EACX,OAAUA,UCqCPkI,GAtDgC,WAC7C,IAAMxf,EAAWgB,cACXtD,EAAOC,aAAY,SAACC,GAAD,OAAuBA,EAAEC,KAAKH,QAEjD+hB,EAAc,WAAO,IAAD,IAClB/b,EAAS,UAAGhG,EAAK2gB,aAAR,aAAG,EAAY3a,UACxBvE,EAAUxB,YAAYyG,EAAU,OAACV,QAAD,IAACA,IAAa,KAC9CrE,EAAQ1B,YAAYwJ,GAAQ,iBAAChI,QAAD,IAACA,OAAD,EAACA,EAAS4H,eAAV,QAAqB,KACjDgR,EAAOpa,aAAY,SAACC,GAAD,OAAuBA,EAAEia,KAAKE,QAEvD,OAAK5Y,GAAYE,EAGf,qCACE,sBAAK/B,UAAU,6CAAf,UACE,sBAAKmD,MAAOsX,EAAI,eAAWA,EAAX,MAAsB,oBAAtC,UACE,cAAC,KAAD,CACEnQ,KAAM8X,KACNpiB,UAAWC,IAAW,CACpB,QAAWwa,GAAQA,EAAO,IAC1B,UAAaA,GAAQA,GAAQ,KAAOA,EAAO,IAC3C,QAAWA,GAAQA,GAAQ,KAAOA,EAAO,IACzC,OAAUA,GAAQA,GAAQ,IAC1B,OAAUA,MAEd,wBAAQza,UAAU,eAAlB,6BACA,sBAAKA,UAAU,SAAf,UAAyB6B,EAAQhB,KAAjC,MAA0CkB,EAAMlB,WAElD,cAAC,KAAD,CACEiI,QAAS,kBAAMpG,GtDqBY,SAACA,GACtCA,EAASiE,EAAIlC,YAAY,CAAEmC,MAAO,uBsDrBxB5G,UAAU,6BACVsK,KAAM+X,UAEV,oBAAIriB,UAAU,yBAvBa,MA4BjC,OACE,sBAAKA,UAAU,sBAAf,UACE,cAACmiB,EAAD,IACA,sBAAKniB,UAAU,kCAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,GAAD,CAAUI,KAAMA,MAElB,cAAC,KAAD,CACE0I,QAAS,kBAAMpG,EAASE,EAAGZ,YAAY,kBACvChC,UAAU,8CACVsK,KAAMgY,cC9BDC,GAnB0C,SAACxiB,GACxD,IAAMmhB,EAAW7gB,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGR,gBAEzD,OACE,sBAAKpC,UAAU,cAAf,UACE,sBAAKA,UAAU,oCAAf,UACE,oBAAIA,UAAU,2BAAd,SAA0CD,EAAMoD,QAChD,cAAC,KAAD,CAAiBmH,KAAMkY,UAGtBtB,IAAanhB,EAAM2H,KAAK7G,MACzB,qBAAKb,UAAU,gDAAf,SACGD,EAAMG,eCiCFuiB,GA5CgC,SAAzCA,IACJ,IAAM/f,EAAWgB,cACX3B,EAAQ1B,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGd,eAChD6Q,EAAQT,KAEd,OAAKnQ,EAGH,eAAC,GAAD,CACEoB,MAAOpB,EAAMlB,KACb6G,KAAM+a,EAFR,UAGG9P,EAAM7B,IAAI,gBAAiB/O,EAAM2D,KAChC,oBAAG1F,UAAU,oEACX8I,QAAS,kBAAMpG,EAASE,EAAGZ,YAAY,kBADzC,UAEE,sBAAMhC,UAAU,UAAhB,2BACA,cAAC,KAAD,CACEA,UAAU,kBACVsK,KAAMoY,UAGX/P,EAAM7B,IAAI,kBAAmB/O,EAAM2D,KAClC,oBAAG1F,UAAU,oEACX8I,QAAS,kBAAMpG,EAASE,EAAGZ,YAAY,mBADzC,UAEE,sBAAMhC,UAAU,OAAhB,4BACA,cAAC,KAAD,CACEA,UAAU,kBACVsK,KAAMqY,WAGVhQ,EAAM7B,IAAI,eAAgB/O,EAAM2D,KAC7BiN,EAAM7B,IAAI,eAAgB/O,EAAM2D,KAChCiN,EAAM7B,IAAI,iBAAkB/O,EAAM2D,MACrC,oBAAGoD,QAAS,kBAAMpG,EAASE,EAAGZ,YAAY,mBACxChC,UAAU,+DADZ,UAEE,sBAAMA,UAAU,OAAhB,4BACA,cAAC,KAAD,CACEA,UAAU,kBACVsK,KAAMgY,aAhCG,MCwBNM,GA1BiD,SAAC,GAAiB,IAAf/gB,EAAc,EAAdA,QAC3Da,EAAWgB,cACT+F,EAAiB8C,cAAjB9C,QACFkJ,EAAQT,KACRzH,EAAUpK,aAAY,SAACC,GAAD,OAAuBA,EAAEoK,OAAOD,WAE5D,OAAQhB,EACN,eAAC,IAAD,CAEE/D,GAAI7D,EAAQ6D,GACZ1F,UAAU,yCAHZ,UAIG2S,EAAM7B,IAAI,kBAAmBrH,IAC5B,eAAC,IAAD,CACEzJ,UAAU,wBACV8I,QAAS,kBAAMpG,EAASgE,EAAc7E,EAAQ6D,MAFhD,UAGE,kDACA,cAAC,KAAD,CAAiB4E,KAAM4D,KAASlO,UAAU,mBAG7CyK,GAAW,cAAC,GAAD,CAAoBL,IAAK,CACnC,CAAEjH,MAAO,aAAcuC,GAAI7D,EAAQ6D,SAZhC7D,EAAQ6D,IAeb,MCsDSmd,I,OA3E8B,WAC3C,IAAMngB,EAAWgB,cACjB,EAAuCrD,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,MAApEd,EAAR,EAAQA,YAAaF,EAArB,EAAqBA,cACfkhB,EAAgBziB,YAAYyJ,GAAgB,OAAChI,QAAD,IAACA,OAAD,EAACA,EAAa4D,KAC1DiN,EAAQT,KAEd,IAAKpQ,IAAgB6Q,EAAM7B,IAAI,gBAAiBhP,EAAY4D,IAAK,OAAO,KAExE,IAAMqd,EAAa,SAAC,GAA8C,IAA5ClhB,EAA2C,EAA3CA,QACdmhB,EAAyB,UAAjBnhB,EAAQ6F,KAClB,IADS,oBAEI5F,EAAa4D,GAFjB,YAEuB7D,EAAQ6D,IACtC4E,EAAO,CAAE,KAAQ0X,KAAW,MAASiB,MAAaphB,EAAQ6F,MAQ1Dwb,EAAY,WAChB,I1DkC0B9c,E0DlCpBuU,EAAQta,a1DkCY+F,E0DlCgBvE,EAAQ6D,G1DmCtDqB,aACE,SAAA9F,GAAK,MAAK,CAAE2E,SAAU3E,EAAM+F,SAASpB,SAAU+U,MAAO1Z,EAAM+F,SAAS2T,UACrE,YAA0B,IAAvB/U,EAAsB,EAAtBA,SAAU+U,EAAY,EAAZA,MAEX,OADW/U,EAASqB,MAAK,SAAAd,GAAC,OAAIA,EAAET,KAAOU,KAC7Bwa,QAAQvW,KAAI,SAAA3E,GAAE,OAAIiV,EAAM1T,MAAK,SAAA0C,GAAC,OAAIA,EAAEjE,KAAOA,a0DrCrD,MAAqB,UAAjB7D,EAAQ6F,MAAqBiT,EAAM5E,OAEhC,qBAAK/V,UAAU,WAAf,8BAA2B2a,EAAMtQ,KAAI,SAAAV,GAAC,OAC3C,cAAC,IAAD,CAA+BjE,GAAIiE,EAAEjE,GAArC,8BACE,qBAAK1F,UAAU,OAAf,8BACE,cAAC,GAAD,CAAUI,KAAMuJ,EAAGlG,KAAK,KAAK1B,MAAOD,EAApC,0BAFqB6H,EAAEjE,SAHyB,MAWxD,OACE,qCACE,cAAC,IAAD,CAAqCA,GAAI7D,EAAQ6D,GAAjD,8BACE,eAAC,IAAD,CACEoD,QAxBQ,W1DqBY,IAAC1C,E0DpBN,UAAjBvE,EAAQ6F,MAEZhF,G1DkB2B0D,E0DlBDvE,EAAQ6D,G1DkBe,SAAChD,EAAUC,GAChE,IAAMd,EAAUiF,EAAWV,EAAXU,CAAsBnE,KAChC8V,EAAW9V,IAAWpC,KAAKH,KAC7ByB,EAAQ+e,QAAQ7R,SAAS0J,EAAS/S,KAEtChD,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,eACPxB,KAAM,CAAEgB,oB0DHA5F,GAAIwiB,EACJhjB,UAAWC,IAAW,wDAEpB,CAAEkjB,OAAQthB,EAAQ6D,MAAR,OAAe9D,QAAf,IAAeA,OAAf,EAAeA,EAAe8D,MAL5C,+BAOE,cAAC,KAAD,CACE1F,UAAWC,IAAW,0CAEF,UAAjB4B,EAAQ6F,KAAoB,OAAS,QAExC4C,KAAMA,EALR,uBAMA,uBAAMtK,UAAU,qCAAhB,+BACE,oDAAO6B,EAAQhB,OACf,sBACEiI,QAAS,SAACrD,GACRA,EAAE2d,iBACF3d,EAAEyV,kBAEFxY,EAASE,EAAGjB,aAAa,CAAEE,UAASE,MAAOD,KAC3CY,EAASE,EAAGZ,YAAY,qBAE1BhC,UAAU,6BARZ,8BASG2S,EAAM7B,IAAI,kBAAmBhP,EAAY4D,KACrC,cAAC,KAAD,CAAiB1F,UAAU,WAAWsK,KAAMgY,KAA5C,4BAGT,cAAC,GAAD,CAAazgB,QAASA,EAAtB,2BA7BqBA,EAAQ6D,IAgCjC,cAACwd,EAAD,4BAKN,OAAO,mCAAGJ,EAAczY,KAAI,SAAAlE,GAAC,OAAI,cAAC4c,EAAD,CAAuBlhB,QAASsE,EAAhC,sBAAiBA,EAAET,WCjEvC2d,GAjBiC,WAC9C,IAAM3gB,EAAWgB,cACjB,OACE,sBAAK1D,UAAU,qCAAf,UACE,qBACEA,UAAU,gEACV8I,QAAS,kBAAMpG,EAASE,EAAGT,eAAesgB,MAF5C,SAGE,cAAC,GAAD,MAEF,qBAAKziB,UAAU,sBAAf,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,QCeSsjB,GAtB4C,SAAC,GAAe,IAAbvhB,EAAY,EAAZA,MACtDW,EAAWgB,cACX+G,EAAUpK,aAAY,SAACC,GAAD,OAAuBA,EAAEoK,OAAOD,WAE5D,OACE,eAAC,IAAD,CAEE/E,GAAI3D,EAAM2D,GACV1F,UAAU,yCAHZ,UAIE,eAAC,IAAD,CACEA,UAAU,0DACV8I,QAAS,kBAAMpG,G/CcI+G,E+CdgB1H,EAAM2D,G/CcF,SAAChD,EAAUC,GACxD,IAAMvC,EAAOuC,IAAWpC,KAAKH,KAE7BsC,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,sBACPxB,KAAM,CAAEqE,UAASkF,OAAQvO,EAAKsF,UALR,IAAC+D,G+ChBrB,UAGE,+CACA,cAAC,KAAD,CAAiBa,KAAMiZ,UAExB9Y,GAAW,cAAC,GAAD,CAAoBL,IAAK,CACnC,CAAEjH,MAAO,WAAYuC,GAAI3D,EAAM2D,SAV5B3D,EAAM2D,KCoCF8d,GA7C+B,WAC5C,IAAM9gB,EAAWgB,cACXtD,EAAOC,aAAY,SAACC,GAAD,OAAuBA,EAAEC,KAAKH,QAGjDqjB,EAFSpjB,aAAY,SAACC,GAAD,OAAuBA,EAAE0G,SAASuC,UAEnCc,KAAI,SAAAb,GAAC,OAC7B,eAAC,IAAD,CAA+B9D,GAAI8D,EAAE9D,GAArC,UACE,cAAC,IAAD,CAAMlF,GAAE,oBAAegJ,EAAE9D,IAAzB,SACE,cAAC,GAAD,CACElF,GAAE,oBAAegJ,EAAE9D,IACnBiR,SAAUnN,EAAEsK,QACZjT,KAAM2I,EAAE3I,SAGZ,cAAC,GAAD,CAAWkB,MAAOyH,MARKA,EAAE9D,OAYvBge,EAAW,kBACf,qBACE5a,QAAS,kBAAMpG,EAASE,EAAGZ,YAAY,iBACvChC,UAAU,mBAFZ,SAGE,cAAC,GAAD,CACEa,KAAK,IACL+V,QAAQ,eAId,OACE,sBAAK5W,UAAU,yEAAf,UACE,cAAC,IAAD,CAAMQ,GAAG,gBAAT,SACE,cAAC,GAAD,CACEA,GAAG,gBACHmW,SAAUvW,EAAKiY,UACfxX,KAAMT,EAAKkY,aAEf,qBAAKtY,UAAU,2BAAf,SACE,qBAAKA,UAAU,sDAEhByjB,EACD,cAACC,EAAD,QCnCSC,GAV0B,SAAC5jB,GAExC,OACE,sBAAKC,UAAU,0BAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,QCqCS4jB,I,cAlCsD,SAAC,GAAiB,IAAf9H,EAAc,EAAdA,QAChEpZ,EAAWgB,cACX+U,EAAWpY,aAAY,SAACC,GAAD,OAAuBA,EAAEC,KAAKH,QACrD2B,EAAQ1B,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGd,eAChDG,EAAY5B,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGX,aACpD0Q,EAAQT,KAER2R,EAAW/H,EAAQ+E,WAAapI,EAAS/S,GACzC+L,EAAYkB,EAAMmR,aAAa,kBAAmB/hB,EAAM2D,GAAIoW,EAAQ1V,aAChE,OAALrE,QAAK,IAALA,OAAA,EAAAA,EAAOoO,WAAYsI,EAAS/S,IAC5Bme,EAEL,OAAS5hB,EAmBL,KAlBF,sBAAKjC,UAAU,iEAAf,UACG6jB,GACC,qBAAK7jB,UAAU,SAAf,SACE,cAAC,KAAD,CACE8I,QAAS,kBAAMpG,EAASE,EAAG5B,sBAAsB8a,EAAQpW,MACzD1F,UAAU,OACVsK,KAAMyZ,SAGXtS,GACC,qBAAKzR,UAAU,SAAf,SACE,cAAC,KAAD,CACA8I,QAAS,kBAAMpG,GnBmCKgD,EmBnCkBoW,EAAQpW,GnBmCX,SAAChD,GAC5CA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,iBACPxB,KAAM,CAAEuY,UAAWjY,SAHM,IAACA,GmBlCpB1F,UAAU,SACVsK,KAAM4D,cCVD8V,GAnBgD,SAAC,GAAiB,IAAflI,EAAc,EAAdA,QACxDrS,EAAiB8C,cAAjB9C,QACFgB,EAAUpK,aAAY,SAACC,GAAD,OAAuBA,EAAEoK,OAAOD,WAE5D,OAAQhB,EACN,eAAC,IAAD,CAEE/D,GAAIoW,EAAQpW,GACZ1F,UAAU,yCAHZ,UAIE,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,uCAAhB,SAAwD8b,EAAQ1T,YAEjEqC,GAAW,cAAC,GAAD,CAAoBL,IAAK,CACnC,CAAEjH,MAAO,aAAcuC,GAAIoW,EAAQpW,SAPhCoW,EAAQpW,IAUb,M,UCyHSue,GA7H8C,SAAClkB,GAAW,IAAD,EvBMrCqG,EuBL3BkT,EAAQnH,cACRzP,EAAWgB,cACjB,EAA8BsJ,mBAAQ,UAACjN,EAAMqI,eAAP,QAAkB,IAAxD,mBAAOA,EAAP,KAAgB8b,EAAhB,KACMriB,EAAUxB,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGhB,iBAClDG,EAAQ1B,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGd,eAChDqiB,EAAS9jB,avBAkB+F,EuBAavE,EAAQ6D,GvBACqB,aACvD,SAAA9F,GAAK,OAAIA,EAAM+F,SAASwW,UACxB,SAAAA,GAAM,OAAIA,EAAO1X,QAAO,SAAA2M,GAAC,OAAIA,EAAErM,YAAcA,UuBDvCuM,EAAQT,KAEdlK,qBAAU,WAAO,IAAD,IACKlE,SAASC,cAAc,eAC/BoF,MAAX,oBAAmBpJ,EAAMqkB,qBAAzB,aAAmB,EAAsBviB,EAAQ6D,WAAjD,QAAwD0C,IACvD,CAACvG,EAAQ6D,KAEZsC,qBAAU,WACJjI,EAAMqkB,eAAiBrkB,EAAMskB,mBAC/BtkB,EAAMqkB,cAAcviB,EAAQ6D,IAAM0C,EAClCrI,EAAMskB,iBAAiBtkB,EAAMqkB,kBAE9B,CAAChc,IAEJ,IAeMkc,EAAM,kBAAM5hB,EAASE,EAAGxB,0BACxBmjB,EAAW,WrBMU,IAAC7e,EAAYxE,EqBLrCnB,EAAMoB,iBACHuB,GrBIsBgD,EqBJC3F,EAAMoB,iBrBIKD,EqBJa,CAAEkH,WrBIsB,SAAC1F,GAC9EA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,iBACPxB,KAAK,aAAGuY,UAAWjY,GAAOxE,SqBNtBwB,EAASob,GAAcjc,EAAQ6D,GAAI,CAAE0C,aAEzC8b,EAAW,IACXI,KAEIE,EAAe,SAAC5d,GACF,WAAdA,EAAMyB,KACNtI,EAAMoB,kBAAkBmjB,KAexBG,EAAU9R,EAAMmR,aAAa,gBAAiB/hB,EAAM2D,GAAI7D,EAAQ6D,IAOhEgf,EAAqB,WACzB,IAAMC,EAAcC,IAAMC,YAM1B,OAAS9kB,EAAMoB,iBAiBX,KAhBF,qBAAKnB,UAAU,OAAf,SACE,sBAAKA,UAAU,WAAf,UAEE,uBACE8kB,IAAKH,EACLjd,KAAK,OACL7G,KAAK,OACLgT,OAAO,UACP3K,SAdc,SAACzD,GACrB,IAAMkG,EAAQlG,EAAE+Q,OAChB9T,ErBpC6B,SAAC0D,EAAmBlF,EAAkC2D,GAAtD,OAAqE,SAACnC,GACvG,IAAMuR,EAAc,yCAAG,8BAAAxH,EAAA,6DAAStH,EAAT,EAASA,IAAT,kBACrBzC,EAASob,GAAc1X,EAAWlF,EAAS,CAACiE,MADvB,2CAAH,sDAEpBzC,EAASkC,EAAWC,EAAMoP,KqBiCb8Q,CAAoBljB,EAAQ6D,GAAI,CAAE0C,WAAWuD,EAAMqI,MAAO,MAa7DgR,QAAM,IACR,cAAC,KAAD,CACE1a,KAAM2a,KACNnc,QAAS,kCAAM6b,EAAYO,eAAlB,aAAM,EAAqBC,SACpCnlB,UAAU,6BAMpB,OACE,sBAAKA,UAAS,UAAKD,EAAMoB,iBAAmB,OAAS,QAArD,UACE,sBAAKnB,UAAU,+CAAf,UACE,cAAC0kB,EAAD,IACA,cAAC,KAAD,CACEhf,GAAG,aACHwD,SAAU,SAAAzD,GAAC,OAAIye,EAAWze,EAAE+Q,OAAOrN,QACnCic,UAlFU,SAACxe,GACjB4d,EAAa5d,GACblE,EvBVuB,SAAC0D,GAAD,OAAuB,SAAC1D,EAAUC,GAC3D,IAAM0iB,EAAUlM,KAAO,IAAIuF,MAAQ4G,KAAKpI,GAAa,WACjDA,IAAemI,EAAU,IAE7BnI,GAAc,IAAIwB,KAElBhc,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,eACPxB,KAAM,CAAEgB,kBuBECmf,CAAY1jB,EAAQ6D,KAEX,UAAdkB,EAAMyB,KAAoBzB,EAAM4e,UAClC5e,EAAMwc,iBAER,IAAMqC,EAAerd,EAAQsd,WAAW,KAAM,IAC5B,UAAd9e,EAAMyB,MACLzB,EAAM4e,UACLC,GAENlB,KAuEMpb,MAAOf,EACPud,KAAM,EACN3lB,UAAWC,IACT,8DACA,8DACA,CAAE,sBAAuBwkB,IAE3BvY,YA/CDuY,EACA1kB,EAAMoB,sBAAX,EAAmC,YAAN,OAAmBU,EAAQhB,MADpC,sBAgDd+G,UAAW6c,EACX9c,WAAS,OAEX5H,EAAMoB,iBACJ,uBAAMnB,UAAU,eAAhB,uBACY,cAAC,IAAD,CAAMQ,GAAG,IAAIsI,QAASwb,EAAtB,oBADZ,oBAEW,cAAC,IAAD,CAAM9jB,GAAG,IAAIsI,QAASyb,EAAtB,sBAEX,qBAAKvkB,UAAU,qBAAf,SAtEc,WACpB,GAAKmkB,EAAOpO,OAAZ,CAEA,IAGM6P,EAAczB,EAAO9Z,KAAI,SAAAoI,GAAC,OAHlB9D,EAG2B8D,EAAE9D,OAHVmM,GAAQnM,EAARmM,CAAgBxB,EAAM3W,aAGH2V,SAHvC,IAAC3J,KAGgDuI,KAAK,MACnE,OAAQiN,EAAOpO,OAFG,EAGd,2BADG,UAEA6P,EAFA,kBA+DoCC,SC7IhC,GASR,4G,qBC8EQC,GA5EgD,SAAC,GAAiB,IAAfhK,EAAc,EAAdA,QAC1DpZ,EAAWgB,cACXvC,EAAmBd,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGzB,oBAE3D4kB,EACQ,0BADRA,EAEE,sBAFFA,EAGI,+BAHJA,EAIO,kBAJPA,EAKc,sBALdA,EAMW,0BANXA,EAOkB,8BAPlBA,EAQW,kBARXA,EASW,oBATXA,EAUM,gBAVNA,EAWiB,iBAXjBA,EAYY,aAoBZC,GACFlK,EAAQ1T,QAAkB6d,KAAUnK,EAAQ1T,SAhB7C8d,QAAQH,EAAqB,gCAC7BG,QAAQH,EAAe,uBACvBG,QAAQH,EAAiB,iBACzBG,QAAQH,EAAoB,aAC5BG,QAAQH,EAA2B,sBACnCG,QAAQH,EAAwB,8BAChCG,QAAQH,EAA+B,uCACvCG,QAAQH,EAAwB,iBAEhCG,QAAQH,EAAwB,6CAChCG,QAAQH,EAAmB,kCAC3BG,QAAQH,EAAyB,2CACjCG,QAAQH,EAA8B,yCACtCG,QAAQC,GAAqB,yCAG4B,KACxDrK,EAAQsK,WAAatK,EAAQ1T,QAA9B,uFAGY0T,EAAQsK,UAHpB,qBAGmD,IAEhDC,EAAc,wBAClB,6CACGvK,EAAQiC,sBADX,aACG,EAAwB1T,KAAI,SAAAsM,GAAQ,OACnC,qBAEE/N,MAAO,CAAE0d,SAAU,SACnBtmB,UAAU,sBACV8I,QAAS,kBAAMpG,GzEUIyC,EyEVkBwR,EzEUF,SAACjU,GAC5CA,EAASH,EAAQlB,gBAAgB8D,IACjCzC,EAASH,EAAQP,YAAY,oBAFH,IAACmD,GyETnBiR,IAAKD,gCAAgCQ,EACrCN,QAAS,SAAC5Q,GACRA,EAAEsO,cAAcuC,QAAU,KAC1B7Q,EAAEsO,cAAcqC,IAAhB,UAAyBD,gCAAzB,iCAPGQ,SAYb,OAAQxV,IAAqB2a,EAAQpW,GACjC,cAAC,GAAD,CACE0C,QAAS0T,EAAQ1T,QACjBjH,iBAAkB2a,EAAQpW,KAC5B,qBAAK1F,UAAU,WAAf,SACE,sBACE4I,MAAO,CAAC0d,SAAU,SAClBtmB,UAAU,6BAFZ,UAGE,qBACEumB,wBAAyB,CAAEC,OAAQR,GACnChmB,UAAU,gBACV4I,MAAO,CAAE0d,SAAU,UACrB,cAACD,EAAD,UCtCKI,GA/B8C,SAAC,GAAkC,IAAD,EAA/BC,EAA+B,EAA/BA,OAAQ5K,EAAuB,EAAvBA,QAAS6K,EAAc,EAAdA,QACzE5kB,EAAQ1B,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGd,eAChDuM,EAAShO,YAAYqO,GAAU3M,EAAM2D,GAAIoW,EAAQ+E,WACjDnJ,EAAcrX,YAAY2O,GAAqBjN,EAAM2D,GAAP,iBAAW2I,QAAX,IAAWA,OAAX,EAAWA,EAAQM,cAAnB,QAA6B,KACjF,GAAIgY,IAAYtY,EAAQ,OAAO,KAE/B,IAAMuY,EAAS,SAACC,GAAD,OAAgBA,EAAKlI,UAAY,IAAO,GAAK,GAAK,IAE3DzF,EAAY,IAAIwF,KAAK5C,EAAQ5C,WAC7B4N,EAAW,IAAIpI,MAAK,IAAIA,MAAOqI,SAAS,EAAG,EAAG,EAAG,IACjDC,EAAUC,KAAKC,MAAMN,EAAOE,GAAYF,EAAO1N,IASrD,OACE,gCACE,cAAC,IAAD,CAAoBxT,GAAIghB,EAAOhhB,GAA/B,SACE,sBACEkD,MAAO,CAAE+B,MAAO+M,EAAY/M,OAC5B3K,UAAU,wDAFZ,SAEqE0mB,EAAOpO,aAE9E,sBAAMtY,UAAU,UAAhB,SAA2BmZ,KAAOD,GAAWE,OAb9B0N,EAASK,YAAcjO,EAAUiO,UAC7B,mBACA,IAAZH,EAAsB,uBACxB,oBCoDII,GA5DwC,SAAC,GAA+B,IAA7BtL,EAA4B,EAA5BA,QAClD4K,EAASrmB,YAAYya,GAAQgB,EAAQ+E,WACrChD,EAAWxd,YAAYud,GAAmB9B,EAAQ1V,YAClD8S,EAAY,IAAIwF,KAAK5C,EAAQ5C,WAa7BmO,EAXU,WACd,IAAMzR,EAAIiI,EAAS3X,WAAU,SAAAqI,GAAC,OAAIA,EAAE7I,KAAOoW,EAAQpW,MAC7C+K,EAAOoN,EAASjI,EAAI,GAC1B,IAAKnF,EAAM,OAAO,EAKlB,OAHkB0I,KAAOD,GAAWoM,KAAK7U,EAAKyI,UAAW,YAClC,GAGhBzI,EAAKoQ,WAAa/E,EAAQ+E,SAEX8F,GAElBW,EAAoC,WACxC,IAAM5kB,EAAWgB,cAEjB,OAAQ2jB,EACJ,sBAAMrnB,UAAU,gCAAhB,8BACGmZ,KAAOD,GAAWE,OAAO,WAE5B,cAAC,GAAD,CACEpZ,UAAU,wCACVoW,IAAG,UAAKD,iCAAL,OAAqCuQ,EAAOrO,WAC/ChC,QAAS,SAAA5Q,GAAC,OAAIA,EAAEsO,cAAcqC,IAAhB,UAAyBD,gCAAzB,yBACdrN,QAAS,kBAAMpG,EAASG,EAAgB6jB,KACxCtP,IAAKsP,EAAOpO,SALd,wBAQN,OACE,eAAC,IAAD,CAAqC5S,GAAIoW,EAAQpW,GAAjD,+BACE,sBAAK1F,UAAWC,IAAW,eAAgB,CAAE,QAASonB,IAAtD,+BACE,qBAAKrnB,UAAU,sDAAf,8BAAqE,cAACsnB,EAAD,0BACrE,sBAAKtnB,UAAU,0BAAf,+BACE,qBAAKA,UAAU,sCAAf,8BACE,cAAC,GAAD,CAAgB8b,QAASA,EAAzB,yBAEF,cAAC,GAAD,CACE4K,OAAQA,EACR5K,QAASA,EACT6K,QAASU,EAHX,uBAIA,cAAC,GAAD,CAAgBvL,QAASA,EAAzB,0BAQF,qBAAK9b,UAAU,kBAAf,0BAEF,cAAC,GAAD,CAAa8b,QAASA,EAAtB,yBArBuBA,EAAQpW,KCtBtB6hB,GAzB4D,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtE3lB,EAAUxB,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGhB,iBAExD,OACE,sBAAK5B,UAAU,yBAAf,UACE,sBAAMA,UAAU,eAAhB,SACE,cAAC,KAAD,CACEA,UAAU,QACVsK,KAAMkd,EAAUxF,KAAYyF,KAC5BhkB,KAAK,SAET,oBAAIzD,UAAU,0BAAd,SACIwnB,EAAD,sBACkB3lB,EAAQhB,KAD1B,iCAIH,mBAAGb,UAAU,OAAb,SACIwnB,EAAD,oCACgC3lB,EAAQhB,KADxC,gFCRM6mB,GAjBkC,WAC/C,OACE,qBAAK1nB,UAAU,uCAAf,SACE,sBAAKA,UAAU,+BAAf,UACE,qBAAKA,UAAU,0CACf,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,qCACf,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,+BACf,qBAAKA,UAAU,iDCuCZ2nB,GAvCmC,WAAO,IAAD,EAChDjlB,EAAWgB,cACX7B,EAAUxB,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGhB,iBAClDG,EAAQ1B,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGd,eAChD+b,EAAWxd,YAAYud,GAAmB/b,EAAQ6D,KAClDiN,EAAQT,KACd,EAA0ClF,mBAA0B,IAApE,mBAAOoX,EAAP,KAAsBC,EAAtB,KAEArc,qBAAU,W5BsBiB,IAAC5B,E4BrB1B1D,G5BqB0B0D,E4BrBHvE,EAAQ6D,G5BqBiB,SAAChD,EAAUC,GAC5CA,IAAWqE,SAAS6W,SAASvK,KAAK9N,MAAK,SAAAW,GAAC,OAAIA,EAAEC,YAAcA,MAG7E1D,EAASiE,EAAItC,cAAc,CACzBwX,UAAW,CAACtZ,GAAQoD,QAAQ+B,MAC5BvC,IAAI,aAAD,OAAeiB,EAAf,sBACHnC,QAASA,U4B1BT,IAAM2jB,EAAU9jB,SAASC,cAAc,aACvC6jB,EAAQC,UAAYD,EAAQE,eAC3B,CAACjK,EAAS9H,SAEb/N,qBAAU,WACWlE,SAASC,cAAc,eAC/BgkB,UACV,CAAClmB,EAAQ6D,KAEZ,IAAMsiB,EAASnmB,EAAQomB,iBAAR,UAA0BpK,EAASA,EAAS9H,eAA5C,aAA0B,EAA2BrQ,IAC9D8hB,EAAU7U,EAAMmR,aAAa,gBAAiB/hB,EAAM2D,GAAI7D,EAAQ6D,IAEtE,OACE,sBAAK1F,UAAU,iCAAf,UACE,sBACE0F,GAAG,WACH1F,UAAU,yCAFZ,UAGE,cAAC,GAAD,CAAmBwnB,QAASA,MACzBA,GAAWQ,IAAW,IAAIE,MAAM,GAAGC,KAAK,GAAG9d,KAAI,SAAC+d,EAAGxS,GAAJ,OAAU,cAAC,GAAD,GAAsBA,MACjF4R,GAAW3J,EAASxT,KAAI,SAAAkE,GAAC,OAAI,cAAC,GAAD,CAAoBuN,QAASvN,GAAfA,EAAE7I,UAEhD,cAAC,GAAD,CACE0e,cAAeA,EACfC,iBAAkBA,QCuCXgE,GAvEgD,SAAC,GAAgB,IAAdha,EAAa,EAAbA,OAC1Dia,EAAiB,SAAChjB,GAAD,OAAgBA,EAAI3E,MAAM,IAC3C4nB,EAAgBD,EAAeja,EAAOa,SAEtCyD,EAAQT,KACRxP,EAAWgB,cACX3B,EAAQ1B,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGd,eAChDkI,EAAQse,EAAejoB,YAAY0J,GAAchI,EAAM2D,MAC7D,EAA8BsH,mBAASub,GAAvC,mBAAOrZ,EAAP,KAAgBsZ,EAAhB,KAEMrd,EAAc,CAClBG,QAAS,iBAAO,CACdzC,MAAO,QACPmC,gBAAiB,wBAEnBQ,OAAQ,SAACC,EAAD,OAAWrG,EAAX,EAAWA,KAAX,mBAAC,eACJqG,GADG,IAENd,MAAOvF,EAAKuF,MACZK,gBAAiB,sBACjBU,OAAStG,EAAKwC,SAAY,cAAgB,UAC1C6gB,QAAUrjB,EAAKwC,SAAY,GAAM,KAEnC+D,MAAO,SAACF,GAAD,mBAAC,eAAiBA,GAAlB,IAA0Bd,MAAO,iBACxCiB,KAAM,SAACH,GAAD,mBAAC,eACFA,GADC,IAEJT,gBAAiB,yBAEnBa,WAAY,SAACJ,GAAD,mBAAC,eACRA,GADO,IAEVd,MAAO,cACPK,gBAAiB,wBAEnBc,mBAAoB,iBAAO,CAAET,QAAS,SACtCU,oBAAqB,SAACN,GAAD,mBAAC,eAAiBA,GAAlB,IAA0BO,MAAO,WACtDC,gBAAiB,SAACR,EAAD,OAAWrG,EAAX,EAAWA,KAAX,mBAAC,eACbqG,GADY,IAEfd,MAAOvF,EAAKuF,MACZK,gBAAiB,yBAIf0d,EAAmB5a,KAAKE,UAAUkB,KAAapB,KAAKE,UAAUua,GAC9DI,EAAa,SAAC1e,GAAD,MAAwB,CACzC1C,MAAO0C,EAAKpJ,KACZsI,MAAOc,EAAKvE,GACZiF,MAAOV,EAAKU,MACZ/C,UAAW+K,EAAMnB,eAAezP,EAAM2D,GAAI,CAACuE,EAAKvE,OAGlD,OACE,qBAAKoD,QAAS,SAAArD,GAAC,OAAIA,EAAE2d,kBAArB,SACE,cAAC,KAAD,CACEnQ,aAAc/D,EAAQ7E,KAAI,SAAA3E,GACxB,IAAMuE,EAAOD,EAAM/C,MAAK,SAAAiD,GAAC,OAAIA,EAAExE,KAAOA,KACtC,OAAQuE,EAAQ0e,EAAW1e,QAAQ5G,KAErCxC,KAAK,SACL4G,QAASuC,EAAMK,IAAIse,GACnBC,iBAAkB,SAACpd,GAAD,OAAYA,EAAO5D,UACrCsB,SAAU,SAAAzB,GAAO,OAAI+gB,EAAW/gB,EAAQ4C,KAAI,SAAA+C,GAAC,OAAIA,EAAEjE,WACnD0f,YAAa,kBAAMH,GAAoBhmB,G5DnBlB8L,E4DmBwCH,EAAO3I,G5DnB7B+B,E4DmBiC,CAAEyH,W5DnBM,SAACxM,GACvFA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,sBACPxB,KAAK,aAAGoJ,YAAa/G,SAHG,IAAC+G,EAAkB/G,G4DoBvCgE,OAAQN,EACRe,YAAY,eACZG,iBAAkB,iBAAM,mBAGxByc,SAAO,OCQAC,GApEwD,SAAC,GAAc,IAAD,EAAX3oB,EAAW,EAAXA,KAClEsC,EAAWgB,cACXiP,EAAQT,KACRuG,EAAWpY,aAAY,SAACC,GAAD,OAAuBA,EAAEC,KAAKH,QACrD2B,EAAQ1B,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGd,eAChDuM,EAAShO,YAAYqO,GAAU3M,EAAM2D,GAAItF,EAAKsF,KAC9C+E,EAAUpK,aAAY,SAACC,GAAD,OAAuBA,EAAEoK,OAAOD,WAEtDue,EAAS5oB,EAAKsF,KAAO+S,EAAS/S,GAC9BujB,EAAa,UAAGxQ,EAASkI,eAAZ,aAAG,EAAkBC,QAAQ7R,SAASV,EAAOM,QAE1Dua,EAAUvW,EAAM7B,IAAI,eAAgB/O,EAAM2D,IAC1C+L,EAAYkB,EAAM7B,IAAI,eAAgB/O,EAAM2D,IASlD,OACE,eAAC,IAAD,CACEA,GAAItF,EAAKsF,GACT1F,UAAU,oCAFZ,UAGE,eAAC,IAAD,CACE8I,QAAS,kBAAMpG,EAASG,EAAgBzC,KACxCJ,UAAU,mDAFZ,UAGE,gDACA,cAAC,KAAD,CAAiBsK,KAAM6e,UAGxB/oB,EAAKsF,KAAO+S,EAAS/S,IAAO,qCAC3B,oBAAI1F,UAAU,2BACd,eAAC,IAAD,CAAUA,UAAU,2DAApB,UACE,sBACE8I,QAAS,kBAAMpG,GtClBKiM,EsCkBoBN,EAAOM,OtClBR,SAACjM,EAAUC,GAAoC,IAAD,EAC/Fqa,QAAQC,IAAI,MACZ,IAAM7c,EAAOuC,IAAWpC,KAAKH,KACvBugB,EAAU7S,KAAKC,MAAMD,KAAKE,UAAU5N,EAAKugB,UAG/C,GAFAA,EAAQC,QAAR,UAAkBD,EAAQC,eAA1B,QAAqC,GAEhCD,EAAQC,QAAQ7R,SAASJ,GAEzB,CACH,IAAM1I,EAAQ0a,EAAQC,QAAQxC,QAAQzP,GACtCgS,EAAQC,QAAQva,OAAOJ,EAAO,QAH9B0a,EAAQC,QAAQ/a,KAAK8I,GAMvBjM,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,cACPxB,KAAM,CAAElB,MAAOA,IAASyc,iBAfG,IAAChS,GsCiBtB,SAEGsa,EAAgB,UAAY,UAE/B,cAAC,KAAD,CAAiB3e,KAAM8e,cAIzBF,GAAWzX,IACX,gCACE,oBAAIzR,UAAU,2BACd,cAAC,EAAD,CAAUmD,MAAM,eAAenD,UAAU,UAEtCgpB,GAAUrW,EAAM7B,IAAI,eAAgB/O,EAAM2D,KAC3C,cAAC,IAAD,CACE1F,UAAU,6BACV8I,QArCS,WACnB,I7DauBW,EAAiBkF,E6DblCiJ,EAAUxX,EAAKyX,cAAcC,WAAWC,SAAS,EAAG,KACtC1O,OAAOC,QAAP,eAAuBlJ,EAAKkY,SAA5B,YAAwCV,KAE1DlV,G7DUqB+G,E6DVD1H,EAAM2D,G7DUYiJ,E6DVRvO,EAAKsF,G7DUsB,SAAChD,GAC9DA,EAASiE,EAAIlC,YAAY,CACvBmC,MAAO,sBACPxB,KAAM,CAAEqE,UAASkF,iB6DkBT,SAGE,yCAAYvO,EAAKkY,cAGpB3F,EAAM7B,IAAI,eAAgB/O,EAAM2D,KAAO,cAAC,GAAD,CAAa2I,OAAQA,OAIjE,qBAAKrO,UAAU,SACdyK,GAAW,cAAC,GAAD,CAAoBL,IAAK,CACnC,CAAEjH,MAAO,UAAWuC,GAAItF,EAAKsF,IAC7B,CAAEvC,MAAO,YAAauC,GAAI2I,EAAO3I,WCD1B2jB,GArE6B,WAC1C,I7D8BiC5f,E6D9B3BkJ,EAAQT,KACRnQ,EAAQ1B,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,GAAGd,eAChDuV,EAAWhX,aAAY,SAACC,GAAD,OAAuBA,EAAEoK,OAAOsP,qBACvDsP,EAAejpB,a7D2BYoJ,E6D3BmB1H,EAAM2D,G7D2BLqB,aACrD,SAAA9F,GAAK,OAAIA,EAAM+F,SAASgD,SACxB,SAAAA,GAAK,OAAIA,EAAMlE,QAAO,SAAAoE,GAAC,OAAIA,EAAET,UAAYA,GAAWS,EAAEiL,gB6D5BhDhH,EAAU9N,YrE4Da,SAACoJ,GAAD,OAC/B1C,aACE,SAAA9F,GAAK,OAAIA,EAAM+F,SAASmH,WACxB,SAAAA,GAAO,OAAIA,EAAQrI,QAAO,SAAAyI,GAAC,OAAIA,EAAE9E,UAAYA,QqE/DjB8f,CAAgBxnB,EAAM2D,KAG5CiV,EAAQta,YrEqEa,SAACoJ,GAAD,OAC7B1C,aACE,SAAA9F,GAAK,MAAK,CACRkN,QAASlN,EAAM+F,SAASmH,QACxBwM,MAAO1Z,EAAM+F,SAAS2T,UAExB,gBAAGxM,EAAH,EAAGA,QAASwM,EAAZ,EAAYA,MAAZ,OAAwBxM,EACrBrI,QAAO,SAAAyI,GAAC,OAAIA,EAAE9E,UAAYA,KAC1BY,KAAI,SAAAkE,GAAC,OAAIoM,EAAM1T,MAAK,SAAA0C,GAAC,OAAIA,EAAEjE,KAAO6I,EAAEI,gBqE7Eb6a,CAAcznB,EAAM2D,KAC3CI,QAAO,SAAA6D,GACN,IAAM0E,EAASF,EAAQlH,MAAK,SAAAsH,GAAC,OAAIA,EAAEI,SAAWhF,EAAEjE,MAChD,OAAOiN,EAAM8W,UAAU,gBAAiB1nB,EAAOsM,MAI7Cqb,EAAW,SAAC,GAA4E,IAA1E/U,EAAyE,EAAzEA,SAAkBgV,EAAuD,EAA/D7jB,OACtB8jB,EAAWjP,EACd7U,OAAO6jB,GACP9c,MAAK,SAACJ,EAAGC,GAAJ,OAAUD,EAAE6L,SAASuR,cAAcnd,EAAE4L,aAE7C,OAAQsR,EAAS7T,OACf,gCACE,cAAC,EAAD,CACE/V,UAAU,gCACVmD,MAAOwR,EACPvR,MAAOwmB,EAAS7T,SACjB6T,EAASvf,KAAI,SAAAV,GAAC,OACb,eAAC,IAAD,CACEjE,GAAIiE,EAAEjE,GADR,UAGE,qBAAK1F,UAAU,MAAf,SACE,cAAC,GAAD,CAAU+B,MAAOA,EAAO3B,KAAMuJ,MAEhC,cAAC,GAAD,CAAiBvJ,KAAMuJ,MAJlBA,EAAEjE,UAQX,MAGAokB,EAAa,SAACnb,GAAD,OAAoBR,EAAQlH,MAAK,SAAAsH,GAAC,OAAIA,EAAEI,SAAWA,KAASO,SACzE6a,EAAiB,SAACtd,EAAGC,GAAJ,OAAWD,EAAEE,SAAWD,EAAEC,SAAY,GAAK,GAC5Dqd,EAAiB,SAAC5pB,GAAD,OAAuB0pB,EAAW1pB,EAAKsF,IAC3D2E,KAAI,SAAA3E,GAAE,OAAI4jB,EAAariB,MAAK,SAAAiD,GAAC,OAAIxE,IAAOwE,EAAExE,SAC1CI,QAAO,SAAAoE,GAAC,OAAIA,KACZ2C,KAAKkd,GACL1f,KAAI,SAAAH,GAAC,OAAIA,EAAGxE,OAEf,OAAQ2R,EACN,sBAAKrX,UAAU,qCAAf,UACGspB,EAAajf,KAAI,SAAAH,GAAC,OACjB,cAACwf,EAAD,CAEE/U,SAAUzK,EAAErJ,KACZiF,OAAQ,SAAA6D,GAAC,OACPmgB,EAAWngB,EAAEjE,IAAIqJ,SAAS7E,EAAExE,KACvBskB,EAAergB,GAAG,KAAOO,EAAExE,IACd,WAAbiE,EAAEsO,SALJ/N,EAAExE,OAOX,cAACgkB,EAAD,CACE/U,SAAS,SACT7O,OAAQ,SAAA6D,GAAC,MAAiB,WAAbA,EAAEsO,SAAwB+R,EAAergB,GAAGoM,UAC3D,cAAC2T,EAAD,CACE/U,SAAS,UACT7O,OAAQ,SAAA6D,GAAC,MAAiB,YAAbA,EAAEsO,aAEjB,MCvBSgS,GAxC4B,WAAO,IAAD,EAC/C,EAAoC1d,cAA5BnG,EAAR,EAAQA,UAAWqD,EAAnB,EAAmBA,QACb/G,EAAWgB,cACXd,EAAKvC,aAAY,SAACC,GAAD,OAAuBA,EAAEsC,MAC1Cb,EAAQ1B,YAAYwJ,GAASJ,IAC7B5H,EAAUxB,YAAYyG,EAAWV,IACjC0c,EAAgBziB,YAAYyJ,GAAiBL,IAMnD,GAJAzB,qBAAU,WACRtF,EAASge,EAAU/e,aAAa,CAAEE,UAASE,aAC1C,CAACA,EAAOF,KAENE,EACH,OAAO,cAAC,IAAD,CAAUvB,GAAG,kBACjB,GAAIsiB,EAAc/M,SAAW3P,EAAW,CAC3C,IAAM8jB,EAAgBpH,EAAc,GACpC,OAAO,cAAC,IAAD,CAAUtiB,GAAE,oBAAeuB,EAAM2D,GAArB,YAA2BwkB,EAAcxkB,MAG9D,OAAQ9C,EAAGd,YACT,eAAC,GAAD,CAAaqf,UAAS,iBAAEtf,QAAF,IAAEA,OAAF,EAAEA,EAAShB,YAAX,QAAmBkB,EAAMlB,KAA/C,UACE,cAAC,GAAD,IACEgB,EACE,sBAAK7B,UAAU,gBAAf,UACE,cAAC,GAAD,IACA,sBACE4I,MAAO,CAAEuhB,OAAQ,sBACjBnqB,UAAU,OAFZ,UAGG4C,EAAGhB,eAAiB,CACnB,KAAQ,cAAC,GAAD,IACR,MAAS,qBAAK5B,UAAU,aAAf,0DACT6B,EAAQ6F,MACV,cAAC,GAAD,UAGJ,qBAAK1H,UAAU,sBAEnB,M,6BChBSoqB,GAxBkD,WAC/D,IAAM1nB,EAAWgB,cACX2mB,EAAarhB,cAGnB,OACE,gCACE,oBAAIhJ,UAAU,yBACd,sBAAKA,UAAU,iBAAf,UACE,cAAC,EAAD,CACE0H,KAAK,OACL7G,KAAK,OACL0G,MAAM,cACNvH,UAAU,cACVwH,SAAU6iB,EAAW7iB,WACvB,cAAC,EAAD,CACEE,KAAK,SACLoB,QAdS,kBAAMpG,EAASiZ,GAAe0O,EAAWpV,YAAY2G,QAe9D5b,UAAU,6BAHZ,2BCuCOsqB,GAlD4B,WAAO,IAAD,EACzC5nB,EAAWgB,cACjB,EAA8CsF,cAAtCxB,EAAR,EAAQA,SAAUyB,EAAlB,EAAkBA,aAAcgM,EAAhC,EAAgCA,UAC1B7U,EAAOC,aAAY,SAACC,GAAD,OAAuBA,EAAEC,KAAKH,QACjDgb,EAAe/a,aAAY,SAACC,GAAD,OAAuBA,EAAEC,KAAK6a,gBACzDmP,EAAQ,IAAIC,gBAAgB1T,cAAc2T,QAChD,EAA0Bzd,mBAAQ,UAACud,EAAM1Q,IAAI,gBAAX,QAAuB,IAAzD,mBAAOmB,EAAP,KAAc0P,EAAd,KAKA,OAAQtqB,EACJ,cAAC,IAAD,CAAUI,GAAG,gBAAb,uBAEA,eAAC,GAAD,CAAa2gB,UAAU,qBAAvB,+BACE,qBAAKnhB,UAAU,qDAAf,8BACE,uBACEA,UAAU,sCACV+S,SAAU9J,GAVJ,SAAC7D,GAAD,OAAU1C,ExCqBH,SAAC0C,GAAD,OAAuC,SAAC1C,GAC/DA,EAASiE,EAAItC,cAAc,CACzBwX,UAAW,GACX3W,OAAQ,OACRE,OACAD,IAAI,cAEJL,SAAU,SAAC5D,GACLA,EAAQgD,QACVC,aAAa4V,QAAQ,QAAS7Y,EAAQgD,OACtCxB,EAAS2Y,OAEPna,EAAQ4a,UACVpZ,EAASH,GAAQ6Y,gBACjB1Y,EAASI,EAAW,CAAEsF,QAASlH,EAAQ4a,QAASC,QAAS,gBwCnC5B4O,CAAUvlB,OAQrC,+BAGE,oBAAIpF,UAAU,qBAAd,gDACA,mBAAGA,UAAU,OAAb,qEAEA,cAAC,EAAD,CACEuH,MAAM,QACN1G,KAAK,QACL2G,SAAUA,EACVxH,UAAU,OACViT,aAAc+H,EACd4P,QAAS,SAACnlB,GAAD,OAAOilB,EAASjlB,EAAEsO,cAAc5K,QAN3C,uBAOA,cAAC,EAAD,CACE5B,MAAM,WACN1G,KAAK,WACL6G,KAAK,WACLF,SAAUA,EACVxH,UAAU,OALZ,uBAMA,cAAC,IAAD,CAAMQ,GAAG,IAAIsI,QA1BD,kBAAMpG,ExCwCK,SAACsY,GAAD,OAAmB,SAACtY,GAChDsY,GAELtY,EAASiE,EAAItC,cAAc,CACzBS,SAAU,kBAAMpC,EAASI,EAAW,CAClCiZ,QAAS,OACT3T,QAAS,wEAEXjD,IAAI,qCAAD,OAAuC6V,OwChDP6P,CAAoB5V,IAAY+F,SA0B3D,wDAECI,GAAgB,cAAC,GAAD,wBAEjB,cAAC,EAAD,CAAcpb,UAAU,8CAAxB,8BACIob,EAAgB,cAAgB,UAEpC,oBAAGpb,UAAU,OAAb,mDAAqC,cAAC,IAAD,CAAMQ,GAAE,mBAAcwa,GAAK,iBAAcA,IAAzC,mDAGzC,cAAC,KAAD,CAAWnS,MAAM,OAAOshB,OAAO,OAA/B,2BCEOW,I,OAhD+B,WAAO,IAAD,EAC5C1qB,EAAOC,aAAY,SAACC,GAAD,OAAuBA,EAAEC,KAAKH,QACjDsC,EAAWgB,cACjB,EAAmCsF,cAA3BxB,EAAR,EAAQA,SAAUyB,EAAlB,EAAkBA,aACZshB,EAAQ,IAAIC,gBAAgB1T,cAAc2T,QAChD,EAA0Bzd,mBAAQ,UAACud,EAAM1Q,IAAI,gBAAX,QAAuB,IAAzD,mBAAOmB,EAAP,KAAc0P,EAAd,KAIA,OAAQtqB,EACJ,cAAC,IAAD,CAAUI,GAAG,gBAAb,uBAEA,eAAC,GAAD,gCACE,qBAAKR,UAAU,qDAAf,8BACE,uBAAMA,UAAU,sCACd+S,SAAU9J,GARH,SAAC7D,GAAD,OAAU1C,EzC4DD,SAAC0C,GAAD,OAA0C,SAAC1C,GACrEA,EAASiE,EAAItC,cAAc,CACzBwX,UAAW,CAACtZ,GAAQgZ,SAAS7T,MAC7BxC,OAAQ,OACRE,OACAD,IAAI,iBACJL,SAAU,SAAC5D,GACTiD,aAAa4V,QAAQ,QAAS7Y,GAC9BwB,EAAS2Y,WyCpEuB0P,CAAa3lB,OAOzC,+BAEE,oBAAIpF,UAAU,sCAAd,oDAEA,cAAC,EAAD,CACEuH,MAAM,QACN1G,KAAK,QACL2G,SAAUA,EACVxH,UAAU,OACViT,aAAc+H,EACd4P,QAAS,SAACnlB,GAAD,OAAOilB,EAASjlB,EAAEsO,cAAc5K,QAN3C,uBAOA,cAAC,EAAD,CACE5B,MAAM,WACN1G,KAAK,WACL2G,SAAUA,EACVxH,UAAU,OAJZ,uBAKA,cAAC,EAAD,CACEuH,MAAM,WACN1G,KAAK,WACL6G,KAAK,WACLF,SAAUA,EACVxH,UAAU,OALZ,uBAOA,cAAC,EAAD,CAAcA,UAAU,8CAAxB,2CACA,mBAAGA,UAAU,OAAb,8BACE,cAAC,IAAD,CAAMQ,GAAE,gBAAWwa,GAAK,iBAAcA,IAAtC,kEAIN,cAAC,KAAD,CAAWnS,MAAM,OAAOshB,OAAO,OAA/B,4BC9BOa,GAlB+B,WAC5C,IAAMtoB,EAAWgB,cAMjB,OAJAsE,qBAAU,WACRtF,EAASE,EAAGjB,aAAa,CAAEE,QAAS,KAAME,MAAO,UAChD,IAGD,eAAC,GAAD,CACE/B,UAAU,8BACVmhB,UAAU,aAFZ,UAGE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,qBAAKnhB,UAAU,4DCVNirB,GAN6B,WAG1C,OAFAvnB,cAAc+X,MAEP,cAAC,IAAD,CAAUjb,GAAG,IAAIqF,MAAI,KCEf,qBAAM,SAACnD,GACpBA,EAASiE,EAAItC,cAAc,CACzBwX,UAAW,GACX5X,QAASA,IACTkB,IAAI,kBACJL,SAAU,SAACM,GACT1C,EAASwoB,EAAevlB,QAAQP,EAAKQ,WACrClD,EAASyoB,GAAaxlB,QAAQP,EAAKmE,SACnC7G,EAAS0oB,GAAczlB,QAAQP,EAAK+I,UACpCzL,EAAS2oB,GAAY1lB,QAAQP,EAAK4E,QAClCtH,EAAS4oB,GAAY3lB,QAAQP,EAAKuV,QAClCjY,EAAS6X,GAAKJ,yBC2BLoR,GAzC8B,WAC3C,IAAM7oB,EAAWgB,cAEjBsE,qBAAU,WACRtF,EAAS2Y,MACT3Y,EAAS8oB,QACR,IAEH,IAAMC,EAAO,CACX,iCACA,kDACA,eACA,mBACA,sBACA,oBACA,cACA,6CACA,mCACA,yBACA,8CACA,gDACA,gCACA,gCACA,+DACA,mBACA,6CAEIC,EAAczE,KAAKC,MAAMD,KAAK0E,SAAWF,EAAK1V,QAEpD,OACE,cAAC,GAAD,CACEoL,UAAU,aACVnhB,UAAU,4CAFZ,SAGE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,WAAd,wBACA,mBAAGA,UAAU,aAAb,SAA2ByrB,EAAKC,WCrBzBE,GAf2C,SAAC7rB,GACzD,IAAMK,EAAOC,aAAY,SAACC,GAAD,OAAuBA,EAAEC,KAAKH,QACjD+Z,EAAkB9Z,aAAY,SAACC,GAAD,OAAuBA,EAAEia,KAAKJ,mBAGlE,OAFuB9Z,aAAY,SAACC,GAAD,OAAuBA,EAAEC,KAAK4a,oBAE1C/a,EACd,cAAC,IAAD,CAAUI,GAAG,WACZJ,GAAS+Z,EAIjB,cAAC,IAAD,eAAWpa,IAHJ,cAAC,GAAD,KCQI8rB,GAhB+B,WAC5C,OACE,eAAC,GAAD,CACE7rB,UAAU,6BACVmhB,UAAU,yBAFZ,UAGE,yBAAQnhB,UAAU,4CAAlB,UACE,oBAAIA,UAAU,gBAAd,uBACA,cAAC,IAAD,CAAMQ,GAAG,IAAT,SACE,cAAC,EAAD,+BAGJ,cAAC,KAAD,CAAWqI,MAAM,OAAOshB,OAAO,aCOtB2B,GAjB6B,WAAO,IAAD,EAC1C1rB,EAAOC,aAAY,SAACC,GAAD,OAAuBA,EAAEC,KAAKH,QACjDsC,EAAWgB,cAEXkY,EAAI,UADI,IAAI4O,gBAAgB1T,cAAc2T,QAC7B5Q,IAAI,eAAb,aAAG,EAAmB/B,WAOhC,OALA9P,qBAAU,WACJ4T,GACFlZ,EAASiZ,GAAeC,MACzB,IAECxb,EAAa,cAAC,IAAD,CAAUI,GAAG,kBAC1Bob,EAAa,cAAC,GAAD,IAEV,cAAC,IAAD,CAAUpb,GAAG,OCJP,SAASurB,KACtB,IAAMrpB,EAAWgB,cAQjB,OANAsE,qBAAU,WACRtF,EAAS2Y,MACT3Y,EAAS8oB,MACT9oB,G1CO2B,SAACA,EAAUC,GACxC,IAD2E,EACrEvC,EAAOuC,IAAWpC,KAAKH,KACvBwF,EAAWjD,IAAWqE,SAASpB,SAC/BqY,EAAe,GAHsD,eAKrDrY,GALqD,IAK3E,2BAAgC,CAAC,IAEmB,EAFzC/D,EAAqB,QACXzB,EAAK4rB,mBAAmBnqB,EAAQ6D,IAEjDuY,EAAMpc,EAAQ6D,IAAd,UAAoBuY,EAAMpc,EAAQ6D,WAAlC,QAAyC,GACzCuY,EAAMpc,EAAQ6D,IAAIG,KAAKhE,EAAQ6D,KATwC,8BAY3EhD,EAASH,GAAQyb,YAAYC,S0ClB1B,IAGD,cAAC,IAAD,CAAQgO,SAAU9V,GAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+V,OAAK,EAACpP,KAAK,IAAIqP,UAAW/K,KACjC,cAAC,IAAD,CAAO8K,OAAK,EAACpP,KAAK,SAASqP,UAAW7B,KACtC,cAAC,IAAD,CAAO4B,OAAK,EAACpP,KAAK,YAAYqP,UAAWrB,KACzC,cAAC,IAAD,CAAOoB,OAAK,EAACpP,KAAK,UAAUqP,UAAWlB,KACvC,cAAC,IAAD,CAAOiB,OAAK,EAACpP,KAAK,UAAUqP,UAAWL,KAEvC,cAAC,GAAD,CAAcI,OAAK,EAACpP,KAAK,gBAAgBqP,UAAWnB,KACpD,cAAC,GAAD,CAAckB,OAAK,EAACpP,KAAK,iCAAiCqP,UAAWlC,KAErE,cAAC,IAAD,CAAOnN,KAAK,IAAIqP,UAAWN,UCnCnC,IAYeO,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,8BCLC,YAAC/S,GAAD,OAAW,SAACuT,GAAD,gDAAU,WAAOC,GAAP,4CAAArgB,EAAA,yDAC9BqgB,EAAOplB,OAASnF,EAAQ8B,cAAcqD,KADR,yCAEzBmlB,EAAKC,IAFoB,gBAI0BA,EAAO5rB,QAA3DiE,EAJ0B,EAI1BA,IAAKD,EAJqB,EAIrBA,OAAQE,EAJa,EAIbA,KAAMyW,EAJO,EAIPA,UAAW5X,EAJJ,EAIIA,QAASa,EAJb,EAIaA,SAE/C+nB,EAAKC,GAN6B,kBASAC,KAAMC,QAAQ,CAC5CC,QAAS9W,4BACT/Q,OACAF,SACAC,MACAlB,YAd8B,OAkBhC,GAlBgC,SASlB/C,EATkB,EASxBkE,KAQRkU,EAAM5W,SAASH,EAAQgC,iBAAiBrD,IACpC2a,EAAJ,gBACqBA,GADrB,IACE,2BAAWnU,EAAX,QACE4R,EAAM5W,SAAS,CAAEgF,OAAMxG,YAF3B,+BAlBgC,QAuBhC4D,GAvBgC,uCAuBdA,EAAS5D,GAvBK,0DAyB1BgsB,EAAW,KAAeA,SAChC5T,EAAM5W,SAASH,EAAQiC,eAAe,CAAEW,MAAK+nB,cAC7C5T,EAAM5W,SAASI,EAAW,CACxBsF,QAAO,iBAAE8kB,QAAF,IAAEA,GAAF,UAAEA,EAAU9nB,YAAZ,aAAE,EAAgB0W,eAAlB,QAA6B,gBACpCC,QAAS,WA7BqB,0DAAV,wDCDX,YAACzC,GAAD,OAAW,SAACuT,GAAD,gDAAU,WAAOC,GAAP,0BAAArgB,EAAA,yDAC9BqgB,EAAOplB,OAASnF,EAAQkC,YAAYiD,KADN,yCAEzBmlB,EAAKC,IAFoB,SAIVA,EAAO5rB,QAAvBkE,EAJ0B,EAI1BA,KAAMwB,EAJoB,EAIpBA,MAEdimB,EAAKC,GAECK,EAAQ,WACZzQ,GAAG0Q,IAAIxmB,EAAOymB,GACd3Q,GAAG0Q,IAAI,QAASE,IAGZD,EAAkB,SAACnsB,GACvBisB,IACA7T,EAAM5W,SAASH,EAAQmC,eAAe,CACpCkC,QACA1F,cAGEosB,EAAgB,SAACpsB,GACrBisB,IACA7T,EAAM5W,SAASH,EAAQoC,aAAa,CAClCiC,QACA1F,cAIJwb,GAAG7H,GAAGjO,EAAOymB,GACb3Q,GAAG7H,GAAG,QAASyY,GAEf5Q,GAAG1Z,KAAK4D,EAAOxB,GA/BmB,4CAAV,wD,OCO1BmoB,IAASC,OACP,cAAC,IAAD,CAAkBC,SAAU,EAA5B,SACE,cAAC,IAAD,CAAUnU,MCMOoU,YAA+B,CAClDC,WAAW,GAAD,mBACLC,YAAqB,CAAEC,mBAAmB,KADrC,CAERnR,GACA/V,KAEFmnB,QAASC,aAAgB,CACvBxtB,QACAmK,UACA1D,SAAU+mB,aAAgB,CACxBnoB,WACA+P,WACApM,UACA4E,WACA0P,YACAI,SACAT,UACAxT,SACA2Q,WAEFJ,QACA3X,SD3BA,SACE,cAAC,IAAMorB,WAAP,UACE,cAACjC,GAAD,UAINjoB,SAASmqB,eAAe,SAM1B7B,O","file":"static/js/main.3307133a.chunk.js","sourcesContent":["import { getChannel } from '../store/channels';\nimport { getGuild, getGuildRoles } from '../store/guilds';\nimport { getMember, getSelfMember } from '../store/members';\nimport { getRoles } from '../store/roles';\n\n// FIXME: import this namespace from types\nexport namespace PermissionTypes {\n  export enum General {\n    VIEW_CHANNELS = 1024,\n    // MANAGE_NICKNAMES = 512, // change number\n    // CHANGE_NICKNAME = 256, // change number\n    MANAGE_INVITES = 256,\n    CREATE_INVITE = 128,\n    KICK_MEMBERS = 64,\n    // BAN_MEMBERS = 32, // change number\n    MANAGE_CHANNELS = 16,\n    MANAGE_ROLES = 8,\n    MANAGE_GUILD = 4,\n    // VIEW_AUDIT_LOG = 2, // change number\n    ADMINISTRATOR = 1,\n  }\n  export enum Text {\n    // ADD_REACTIONS = 2048 * 16,\n    // MENTION_EVERYONE = 2048 * 8,\n    READ_MESSAGES = 2048 * 4,\n    MANAGE_MESSAGES = 2048 * 2,\n    SEND_MESSAGES = 2048,\n  }\n  export enum Voice {\n    // MOVE_MEMBERS = 32768 * 8,\n    // MUTE_MEMBERS = 32768 * 4,\n    SPEAK = 32768 * 2,\n    CONNECT = 32768,\n  }\n  export const All = {\n    ...General,\n    ...Text,\n    ...Voice,\n  }\n  export type Permission = General | Text | Voice;\n  export type PermissionString = keyof typeof All;\n  \n  export const defaultPermissions =\n    PermissionTypes.General.VIEW_CHANNELS\n    | PermissionTypes.General.CREATE_INVITE\n    | PermissionTypes.Text.SEND_MESSAGES\n    | PermissionTypes.Text.READ_MESSAGES;\n}\n\nexport class PermService {\n  public readonly description = {\n    general: {\n      'ADMINISTRATOR': `Gives all permissions. This is a dangerous permission.`,\n      'CREATE_INVITE': 'Ability to create invites for users to join this guild.',\n      'KICK_MEMBERS': 'Ability to kick members from this guild.',\n      'MANAGE_CHANNELS': 'Ability to create, edit, or delete channels.',\n      'MANAGE_GUILD': `Ability to edit general guild settings.`,\n      'MANAGE_ROLES': 'Ability to create, update, and delete guild roles.',\n      'VIEW_CHANNELS': 'Ability to view channels.',\n      'MANAGE_INVITES': 'Ability to delete invites.',\n    },\n    text: {\n      'MANAGE_MESSAGES': `Ability to manage message other member's messages.`,\n      'READ_MESSAGES': `Ability to read messages,`,\n      'SEND_MESSAGES': 'Ability to send messages in text channels.',\n    },\n  };\n\n  constructor(private state: Store.AppState) {}\n\n  public canMember(permission: PermissionTypes.PermissionString, guild: Entity.Guild, member: Entity.GuildMember) {\n    return guild.ownerId === member.userId\n      || this.hasPerm(\n          this.getTotalPerms(member, guild.id),\n          PermissionTypes.All[permission] as number,\n        );\n  }\n  public canInChannel(permission: PermissionTypes.PermissionString, guildId: string, channelId: string) {\n    const channel = this.getChannel(channelId);    \n    const member = this.getSelfMember(guildId);\n\n    const overrides = channel.overrides\n      ?.filter(o => member.roleIds.includes(o.roleId)) ?? [];\n\n    const cumulativeAllowPerms = overrides.reduce((prev, curr) => prev | curr.allow, 0);\n    const cumulativeDenyPerms = overrides.reduce((prev, curr) => prev | curr.deny, 0);\n\n    const permNumber = PermissionTypes.Text[permission];\n    const canInherently = this.can(permission, guildId);\n    const isAllowedByOverride = this.hasPerm(cumulativeAllowPerms, permNumber);\n    const isDeniedByOverride = this.hasPerm(cumulativeDenyPerms, permNumber);\n\n    return (canInherently && !isDeniedByOverride) || isAllowedByOverride;\n  }\n\n  public can(permission: PermissionTypes.PermissionString, guildId: string) {\n    const guild = this.getGuild(guildId);    \n    const member = this.getSelfMember(guildId);\n\n    return guild.ownerId === member.userId\n      || this.hasPerm(\n          this.getTotalPerms(member, guildId),\n          PermissionTypes.All[permission] as number,\n        );\n  }\n  private getTotalPerms(member: Entity.GuildMember, guildId: string) {\n    return getGuildRoles(guildId)(this.state)\n      .filter(r => member?.roleIds.includes(r.id))\n      .reduce((acc, value) => value.permissions | acc, 0);\n  }\n  private hasPerm(totalPerms: number, permission: number) {\n    return Boolean(totalPerms & permission)\n        || Boolean(totalPerms & PermissionTypes.General.ADMINISTRATOR);\n  }\n\n  public canManage(prereq: PermissionTypes.PermissionString, guildId: string, managedUserId: string) {\n    const userMember = getMember(guildId, managedUserId)(this.state);\n    if (!userMember) return false;\n\n    return this.can(prereq, guildId)\n      && (this.state.auth.user!.id === userMember.userId\n      || (this.memberIsHigher(guildId, userMember.roleIds)));\n  }\n\n  public canPunish(prereq: PermissionTypes.PermissionString, guildId: string, managedUserId: string) {\n    return this.state.auth.user!.id !== managedUserId\n      && this.can(prereq, guildId)\n      && this.canManage(prereq, guildId, managedUserId);\n  }\n\n  // TODO: test\n  public memberIsHigher(guildId: string, roleIds: string[]) {\n    const guild = this.getGuild(guildId);\n    const member = this.getSelfMember(guildId);    \n    const myRoles = getRoles(member.roleIds)(this.state);\n    const theirRoles = getRoles(roleIds)(this.state);\n\n    const max = (key: string) => (max, val) => (max[key] > val[key]) ? max : val;\n    const myHighestRole: Entity.Role = myRoles.reduce(max('position'));\n    const theirHighestRole: Entity.Role = theirRoles.reduce(max('position'));\n\n    const selfIsOwner = member.userId === guild.ownerId;\n    const selfHasHigherRole = myHighestRole.position > theirHighestRole.position;    \n\n    return selfIsOwner || selfHasHigherRole;\n  }\n\n  public getHighestRole(roles: Entity.Role[]) {\n    const max = (key: string) => (max, val) => (max[key] > val[key]) ? max : val;\n    return roles.reduce(max('position'));\n  }\n\n  private getChannel(channelId: string) {\n    const channel = getChannel(channelId)(this.state);\n    if (!channel)\n      throw new TypeError('Channel not found');\n    return channel;\n  }\n  private getGuild(guildId: string) {\n    const guild = getGuild(guildId)(this.state);\n    if (!guild)\n      throw new TypeError('Guild not found');\n    return guild;\n  } \n  private getSelfMember(guildId: string) {\n    const member = getSelfMember(guildId)(this.state);\n    if (!member)\n      throw new TypeError('Member not found');\n    return member;\n  }\n}","import classNames from 'classnames';\n\nconst CircleButton: React.FunctionComponent<any> = (props) => {\n  return (\n    <button\n      {...props}\n      className={classNames(\n        `rounded-full ring ring-gray-400 secondary px-4 py-1`,\n        props.className)}>{props.children}</button>\n  );\n}\n \nexport default CircleButton;","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport CircleButton from '../utils/buttons/circle-button';\n \nconst Navbar: React.FunctionComponent = () => {\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  \n  return (\n    <nav className=\"flex items-center justify-between h-15 p-4 px-8\">\n      <a className=\"logo\">\n        <span className=\"font-bold text-white\">accord</span>\n        <span className=\"text-gray-600\">.</span>\n        <span className=\"muted font-light\">app</span>\n      </a>\n      <div>\n        <Link to={user ? '/channels/@me' : '/login'}>\n          <CircleButton>{user ? 'App' : 'Login'}</CircleButton>\n        </Link>\n      </div>\n    </nav>\n  );\n}\n \nexport default Navbar;","import { EventEmitter } from 'events';\n\nconst events = new EventEmitter();\n\nexport default events;","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport events from '../services/event-service';\nimport React from 'react';\n\nconst slice = createSlice({\n  name: 'ui',\n  initialState: {} as Store.AppState['ui'],\n  reducers: {\n    startedEditingMessage: (state, { payload }) => {\n      state.editingMessageId = payload;\n    },\n    stoppedEditingMessage: (state) => {\n      delete state.editingMessageId;\n    },\n    // only 1 invite is created -> to save data, and stop spam\n    focusedResource: (state, { payload }) => {\n      state.activeResource = payload;\n    },\n    focusedInvite: (state, { payload }) => {\n      state.activeInvite = payload;\n    },\n    focusedUser: (state, { payload }) => {\n      state.activeUser = payload;\n    },\n    pageSwitched: (state, { payload }) => {\n      state.activeChannel = payload.channel;\n      state.activeGuild = payload.guild;\n    },\n    openedModal: (state, { payload }) => {      \n      state.openModal = payload;\n    },\n    closedModal: (state) => {\n      delete state.openModal;\n    },\n    toggleDropdown: (state, { payload }) => {      \n      state.openDropdown = payload?.name;\n    },\n    toggleSaveChanges: (state, { payload }) => {\n      state.saveChangesOpen = payload;\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const dropdownIsOpen = (type: React.FunctionComponent) => createSelector<Store.AppState, string | undefined, boolean>(\n  state => state.ui.openDropdown,\n  name => name === type.name,\n);\nexport const modalIsOpen = (type: React.FunctionComponent) => createSelector<Store.AppState, string | undefined, boolean>(\n  state => state.ui.openModal,\n  name => name === type.name,\n);\n\nexport const openSaveChanges = (isOpen: boolean) => (dispatch, getState: () => Store.AppState) => {\n  if (getState().ui.saveChangesOpen === isOpen) return;\n\n  dispatch(actions.toggleSaveChanges(isOpen));\n}\nexport const angrySaveChanges = () => {\n  const saveChanges = document.querySelector('#saveChanges') as HTMLDivElement;\n  if (!saveChanges) return;\n\n  saveChanges.style.backgroundColor = 'var(--danger)';\n}\n\nexport const openUserProfile = (user: Entity.User) => (dispatch) => {\n  dispatch(actions.focusedUser(user));\n  dispatch(actions.openedModal('UserProfile'));\n}\nexport const previewImage = (url: string) => (dispatch) => {\n  dispatch(actions.focusedResource(url));\n  dispatch(actions.openedModal('ImagePreview'));\n}\n\nexport const openDialog = (dialog: Dialog) => () => events.emit('dialog', dialog);\n\nexport interface Dialog {\n  content: string | JSX.Element;\n  variant: 'default' | 'info' | 'error' | 'success' | 'warning';\n}\n\nexport const closeModal = (dispatch) => {\n  dispatch(actions.closedModal());\n  dispatch(openSaveChanges(false));\n  dispatch(actions.focusedUser(null));\n};","import classNames from 'classnames';\n\nexport interface CategoryProps {\n  title: string;\n  count?: number;\n  className?: string;\n}\n\nconst Category: React.FunctionComponent<CategoryProps> = ({ title, count, className }) => {\n  return (\n    <h2 className={classNames(`uppercase font-bold text-xs tracking-wider`, className)}>\n      {title} {count !== undefined && `— ${count}`}\n    </h2>\n  );\n}\n\nexport default Category;","import classNames from 'classnames';\nimport { useSnackbar } from 'notistack';\nimport ReactModal from 'react-modal'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeModal } from '../../store/ui';\n\nexport interface ModalProps {\n  typeName: string;\n  size?: keyof typeof sizeClass;\n  className?: string;\n}\n\n// TODO: add mobile styling support\nconst sizeClass = {\n  'sm': 'rounded-lg 2xl:w-1/4 2xl:inset-x-1/3 2xl:inset-y-1/3   md:w-1/3 md:inset-x-1/3 md:inset-y-1/4',\n  'md': 'rounded-lg 2xl:w-1/3 2xl:inset-x-1/3 2xl:inset-y-1/4   md:w-1/4 md:inset-x-1/3 md:inset-y-1/3',\n  'lg': 'rounded-lg 2xl:w-1/3 2xl:inset-x-1/3 2xl:top-1/4       md:w-1/3 md:inset-x-1/3 md:top-20',\n  'xl': 'rounded-lg 2xl:w-1/2 2xl:inset-x-1/4 2xl:top-1/4       md:w-1/3 md:inset-x-1/3 md:top-20',\n  'full': 'h-full w-full',\n};\n \nconst Modal: React.FunctionComponent<ModalProps> = ({ className, typeName, size, children }) => {\n  const dispatch = useDispatch();\n  const openModal = useSelector((s: Store.AppState) => s.ui.openModal);\n  const { closeSnackbar } = useSnackbar();\n\n  return (\n    <ReactModal\n      className={classNames(\n        `bg-bg-primary overflow-auto fixed outline-none`,\n        className,\n        sizeClass[size ?? 'sm'],\n      )}\n      appElement={document.querySelector('#root')!}\n      isOpen={openModal === typeName}\n      onRequestClose={() => {\n        dispatch(closeModal);\n        closeSnackbar('saveChanges');\n      }}>{children}</ReactModal>\n  );\n}\n \nexport default Modal;","export const headers = () => ({\n  'Authorization': `Bearer ${token()}`,\n});\n\nexport const token = () => localStorage.getItem('token');","import { createAction } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { headers } from './utils/rest-headers';\n\nexport const actions = {\n  restCallBegan: createAction<APIArgs>('api/restCallBegan'),\n  restCallSucceded: createAction<{}>('api/restCallSucceeded'),\n  restCallFailed: createAction<{}>('api/restCallFailed'),\n  wsCallBegan: createAction<WSArgs>('api/wsCallBegan'),\n  wsCallSucceded: createAction<{}>('api/wsCallSucceeded'),\n  wsCallFailed: createAction<{}>('api/wsCallFailed'),\n};\n\nexport interface APIArgs {\n  data?: object;\n  headers?: object;\n  method?: 'get' | 'post' | 'put' | 'patch' | 'delete';\n  onSuccess?: string[];\n  url: string;\n  /** Callback to handle side effects. */\n  callback?: (payload: any) => any | Promise<any>;\n}\nexport interface WSArgs {\n  data?: object;\n  event: keyof WS.To;\n}\n\nexport const uploadFile = (file: File, callback?: (args: REST.From.Post['/upload']) => any) => (dispatch) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  \n  dispatch(actions.restCallBegan({\n    method: 'post',\n    url: '/upload',\n    data: formData,\n    headers: {\n      ...headers(),\n      'Content-Type': 'multipart/form-data',\n    },\n    callback,\n  }));\n}","export const unique = (arr: any[]) => (old) => !arr.some(e => e.id === old.id);","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api } from './api';\nimport { unique } from './utils/filter';\n\nconst slice = createSlice({\n  name: 'channels',\n  initialState: [] as Store.AppState['entities']['channels'],\n  reducers: {\n    fetched: (channels, { payload }: Store.Action<Entity.Channel[]>) => { \n      channels.push(...payload.filter(unique(channels)));\n    },\n    created: (channels, { payload }: Store.Action<WS.Args.ChannelCreate>) => {\n      channels.push(payload.channel);\n    },\n    deleted: (channels, { payload }: Store.Action<WS.Args.ChannelDelete>) => {\n      const index = channels.findIndex(c => c.id === payload.channelId);\n      channels.splice(index, 1);\n    },\n    updated: (channels, { payload }: Store.Action<WS.Args.ChannelUpdate>) => {\n      const index = channels.findIndex(c => c.id === payload.channelId);\n      Object.assign(channels[index], payload.partialChannel);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const createChannel = (guildId: string, { name, type }: WS.Params.ChannelCreate) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'CHANNEL_CREATE',\n    data: { guildId, name, type } as WS.Params.ChannelCreate,\n  }));\n}\n\nexport const deleteChannel = (channelId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'CHANNEL_DELETE',\n    data: { channelId } as WS.Params.ChannelDelete,\n  }));\n}\n\nexport const updateChannel = (channelId: string, payload: Partial<Entity.Channel>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'CHANNEL_UPDATE',\n    data: { channelId, ...payload } as WS.Params.ChannelDelete,\n  }));\n}\n\nexport const joinVoiceChannel = (channelId: string) => (dispatch, getState: () => Store.AppState) => {\n  const channel = getChannel(channelId)(getState()) as ChannelTypes.Voice;\n  const selfUser = getState().auth.user!;\n  if (channel.userIds.includes(selfUser.id)) return;\n  \n  dispatch(api.wsCallBegan({\n    event: 'CHANNEL_JOIN',\n    data: { channelId } as WS.Params.ChannelJoin,\n  }));\n}\nexport const leaveVoiceChannel = () => (dispatch) => {\n  dispatch(api.wsCallBegan({ event: 'CHANNEL_LEAVE' }));\n}\n\nexport const getChannel = (id: string) =>\n  createSelector<Store.AppState, Entity.Channel[], Entity.Channel | undefined>(\n    state => state.entities.channels,\n    channels => channels.find(c => c.id === id),\n  );\n\nexport const getChannelUsers = (channelId: string) =>\n  createSelector<Store.AppState, { channels, users }, Entity.User[]>(\n    state => ({ channels: state.entities.channels, users: state.entities.users }),\n    ({ channels, users }) => {\n      const vc = channels.find(c => c.id === channelId) as ChannelTypes.Voice;\n      return vc.userIds.map(id => users.find(u => u.id === id))\n    },\n  );","const NormalButton: React.FunctionComponent<any> = (props) => {\n  return (\n    <button\n      {...props}\n      className={`rounded-md py-1.5 px-4 ${props.className}`}>\n      {props.children}\n    </button>\n  );\n}\n\nexport default NormalButton;","// stop unknown property react error\nexport const filterProps = (props: object) => {\n  return {\n    ...props,\n    titleName: undefined,\n    initialValue: undefined,\n  }\n}","import classNames from 'classnames';\nimport React from 'react';\nimport { UseFormRegister, FieldValues } from 'react-hook-form';\nimport { filterProps } from '../react/react-shush-error';\n\nimport './input.scoped.css';\n\nexport interface InputProps {\n  name: string;\n  register: UseFormRegister<FieldValues>;\n  options?: any;\n  autoFocus?: boolean;\n  label?: string;\n  type?: string;\n  className?: string;\n  disabled?: boolean;\n}\n \nconst Input: React.FunctionComponent<InputProps & React.AllHTMLAttributes<HTMLInputElement>> = (props) => {\n  const { label, name, register, options, type, autoFocus, className, disabled } = props;\n  return (\n    <div className={className}>\n      {label &&\n        <label\n          htmlFor={name}\n          className=\"uppercase text-xs font-semibold\">{label}</label>}\n      <input\n        id={name}\n        type={type ?? 'text'}\n        autoFocus={autoFocus}\n        disabled={disabled}\n        {...filterProps(props)}\n        {...register(name, { ...options })}\n        className={classNames(\n          'block bg-bg-secondary rounded focus:outline-none w-full h-10 p-2 mt-2',\n          { 'h-12': type === 'file' },\n        )} />\n    </div>\n  );\n}\n \nexport default Input;","import { useSnackbar } from 'notistack';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { UseFormSetValue, FieldValues } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openSaveChanges } from '../../store/ui';\nimport NormalButton from './buttons/normal-button';\n\nexport interface SaveChangesProps {\n  onSave: (e) => any;\n  setValue?: UseFormSetValue<FieldValues>;\n  obj: object;\n}\n \nconst SaveChanges: React.FunctionComponent<SaveChangesProps> = (props) => {\n  const { closeSnackbar, enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const isOpen = useSelector((s: Store.AppState) => s.ui.saveChangesOpen);\n\n  useEffect(() => {\n    if (!isOpen) return;\n\n    enqueueSnackbar('', {\n      anchorOrigin: { vertical: 'bottom', horizontal: 'center' },\n      content: SaveChanges,\n      key: 'saveChanges',\n      persist: true,\n    });\n  }, [isOpen]);\n\n  const onClickSave = (e) => {\n    closeSnackbar('saveChanges');\n    props.onSave(e);\n    dispatch(openSaveChanges(false));\n  };\n  const onClickReset = () => {\n    closeSnackbar('saveChanges');\n    for (const key in props.obj)\n      props.setValue?.(key, props.obj[key]);\n    dispatch(openSaveChanges(false));\n  };\n  const SaveChanges = () => (\n    <div\n      id=\"saveChanges\"\n      className=\"opacity-95 flex justify-between rounded bg-black p-3 px-5\"\n      style={{ width: '50vw' }}>\n      <span className=\"flex items-center flex-grow-1\">Careful — you have unsaved changes!</span>\n      <span>\n        <NormalButton\n          className=\"bg-transparent font\"\n          onClick={onClickReset}>Reset</NormalButton>\n        <NormalButton\n          className=\"bg-success text-black ml-2\"\n          onClick={onClickSave}>Save</NormalButton>\n      </span>\n    </div>\n  );\n\n  return null;\n}\n \nexport default SaveChanges;","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteChannel, updateChannel } from '../../../store/channels';\nimport { openSaveChanges } from '../../../store/ui';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport Input from '../../utils/input/input';\nimport SaveChanges from '../../utils/save-changes';\n \nconst ChannelSettingsOverview: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const { register, handleSubmit, setValue } = useForm();\n\n  const onSave = (e) => {\n    const onUpdate = (payload) => dispatch(updateChannel(channel.id, payload));\n    handleSubmit(onUpdate)(e);\n  };\n  const onDelete = () => {\n    const confirmation = window.confirm('Are you sure you want to delete this guild?');\n    confirmation && dispatch(deleteChannel(channel.id));\n  }\n  \n  return (\n    <form\n      onChange={() => dispatch(openSaveChanges(true))}\n      className=\"flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <header>\n        <h1 className=\"text-xl font-bold inline\">Channel Overview</h1>\n      </header>\n    \n      <section className=\"w-1/3\">\n        <Input\n          label=\"Name\"\n          name=\"name\"\n          register={register}\n          options={{ value: channel.name }}\n          className=\"pt-5\" />\n        <Input\n          label=\"Summary\"\n          name=\"summary\"\n          register={register}\n          options={{ value: channel.summary }}\n          className=\"pt-5\" />\n      </section>\n\n      <Category\n        className=\"py-2 mt-5\"\n        title=\"Advanced Settings\" />\n\n      <section>\n        <NormalButton\n          type=\"button\"\n          onClick={onDelete}\n          className=\"bg-danger\">Delete</NormalButton>\n      </section>\n\n      <SaveChanges\n        setValue={setValue}\n        onSave={onSave}\n        obj={channel} />\n    </form>    \n  );\n}\n \nexport default ChannelSettingsOverview;","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api, uploadFile } from './api';\nimport { unique } from './utils/filter';\n\nconst slice = createSlice({\n  name: 'guilds',\n  initialState: [] as Store.AppState['entities']['guilds'],\n  reducers: {\n    fetched: (guilds, { payload }: Store.Action<Entity.Guild[]>) => {\n      guilds.push(...payload.filter(unique(guilds)));\n    },\n    created: (guilds, { payload }: Store.Action<WS.Args.GuildCreate>) => {\n      guilds.push(payload.guild);\n    },\n    updated: (guilds, { payload }: Store.Action<WS.Args.GuildUpdate>) => {\n      const guild = guilds.find(g => g.id === payload.guildId);\n      Object.assign(guild, payload.partialGuild);\n    },\n    deleted: (guilds, { payload }) => {\n      const index = guilds.findIndex(u => u.id === payload.guildId);\n      guilds.splice(index, 1);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const createGuild = (name: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_CREATE',\n    data: { name } as WS.Params.GuildCreate,\n  }));\n}\n\nexport const updateGuild = (guildId: string, payload: Partial<Entity.Guild>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_UPDATE',\n    data: { guildId, ...payload } as WS.Params.GuildUpdate,\n  }));\n}\n\nexport const uploadGuildIcon = (guildId: string, file: File) => (dispatch) => {\n  const uploadCallback = async ({ url }: REST.From.Post['/upload']) =>\n    dispatch(updateGuild(guildId, { iconURL: url }));\n  dispatch(uploadFile(file, uploadCallback));\n}\n\nexport const deleteGuild = (guildId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_DELETE',\n    data: { guildId } as WS.Params.GuildDelete,\n  }));\n}\n\nexport const getGuild = (id: string) =>\ncreateSelector<Store.AppState, Entity.Guild[], Entity.Guild | undefined>(\n  state => state.entities.guilds,\n  guilds => guilds.find(g => g.id === id),\n);\n\nexport const getGuildChannels = (guildId: string | undefined) =>\ncreateSelector<Store.AppState, Entity.Channel[], Entity.Channel[]>(\n  state => state.entities.channels,\n  channels => channels.filter(c => c.guildId === guildId),\n);\n\nexport const getGuildInvites = (guildId: string | undefined) =>\ncreateSelector<Store.AppState, Entity.Invite[], Entity.Invite[]>(\n  state => state.entities.invites.list,\n  invites => invites.filter(i => i.guildId === guildId),\n);\n\nexport const getGuildMembers = (guildId: string | undefined) =>\ncreateSelector<Store.AppState, Entity.GuildMember[], Entity.GuildMember[]>(\n  state => state.entities.members,\n  members => members.filter(m => m.guildId === guildId),\n);\n\nexport const getGuildRoles = (guildId: string | undefined) =>\ncreateSelector<Store.AppState, Entity.Role[], Entity.Role[]>(\n  state => state.entities.roles,\n  role => role.filter(r => r.guildId === guildId),\n);\n\nexport const getGuildUsers = (guildId: string | undefined) =>\ncreateSelector<Store.AppState, { members: Entity.GuildMember[], users: Entity.User[], }, Entity.User[]>(\n  state => ({\n    members: state.entities.members,\n    users: state.entities.users,\n  }),\n  ({ members, users }) => members\n    .filter(m => m.guildId === guildId)\n    .map(m => users.find(u => u.id === m.userId)!\n  ),\n);\n","import { faIdCard } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FunctionComponent } from 'react';\n\ninterface DevModeMenuSectionProps {\n  ids: { title: string, id: string }[];\n}\n \nconst DevModeMenuSection: FunctionComponent<DevModeMenuSectionProps> = ({ ids }) => {\n  return (\n    <>\n      <hr className=\"mt-3 border-bg-primary pt-2\" />\n      {ids.map(({ title, id }) => (\n        <div key={id}>\n          <div className=\"float-none -mb-1 text-xs\">{title}</div>\n          <div\n            title={title}\n            className=\"flex items-center justify-between pb-2\">\n            <span className=\"muted\">{id}</span>\n            <FontAwesomeIcon icon={faIdCard} />\n          </div>\n        </div>\n      ))}\n    </>\n  );\n}\n \nexport default DevModeMenuSection;","import { ContextMenu } from 'react-contextmenu';\nimport { useSelector } from 'react-redux';\nimport DevModeMenuSection from './dev-mode-menu-section';\n\nexport interface RoleMenuProps {\n  role: Entity.Role;\n}\n\nconst RoleMenu: React.FunctionComponent<RoleMenuProps> = ({ role }) => {\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  return (\n    <ContextMenu\n      key={role.id}\n      id={role.id}\n      className=\"bg-bg-tertiary rounded shadow w-48 p-2\">\n      <div style={{ color: role.color }}>{role.name}</div>\n      {devMode && <DevModeMenuSection ids={[\n        { title: 'Role ID', id: role.id },\n      ]} />}\n    </ContextMenu>\n  );\n}\n \nexport default RoleMenu;","import classNames from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { angrySaveChanges } from '../../store/ui';\n\nexport interface TabLinkProps {\n  tab: string;\n  id: string;\n  setTab?: React.Dispatch<React.SetStateAction<string>>;\n  className?: string;\n}\ntype Props = React.HTMLAttributes<HTMLAnchorElement>;\n \nconst TabLink: React.FunctionComponent<TabLinkProps & Props> = (props) => {\n  const { id, tab, setTab, children, className } = props;\n  const saveChangesOpen = useSelector((s: Store.AppState) => s.ui.saveChangesOpen);\n\n  return (\n    <Link\n      {...props}\n      to=\"#\"\n      onClick={() => {\n        if (saveChangesOpen)\n          return angrySaveChanges();\n        setTab?.(id);\n      }}\n      className={classNames(\n        `flex items-center rounded py-1.5 px-2.5 h-8 mb-0.5`,\n        className,\n        { 'active': tab === id })}>{children}</Link>\n  );\n}\n \nexport default TabLink;","import Select from 'react-select';\n\ninterface ScarceSelectProps {\n  mapOptions: (entity: any) => { label: string, value: string, color: string };\n  onChange: (select: HTMLSelectElement) => void;\n  unadded: any[];\n}\n \nconst ScarceSelect: React.FunctionComponent<ScarceSelectProps> = (props) => {\n  const colorStyles = {\n    singleValue: () => ({ display: 'none' }),\n    control: () => ({\n      width: '100%',\n      backgroundColor: 'var(--bg-secondary)',\n      borderRadius: '5px',\n    }),\n    option: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      backgroundColor: 'var(--bg-secondary)',\n      cursor: 'pointer',\n    }),\n    input: (styles) => ({ ...styles, color: 'var(--font)' }),\n    menu: (styles) => ({\n      ...styles,\n      backgroundColor: 'var(--bg-secondary)',\n    }),\n    multiValue: (styles) => ({\n      ...styles,\n      color: 'var(--font)',\n      backgroundColor: 'var(--bg-tertiary)',\n    }),\n    indicatorSeparator: () => ({ display: 'none' }),\n    indicatorsContainer: (styles) => ({ ...styles, float: 'right' }),\n    multiValueLabel: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      backgroundColor: 'var(--bg-tertiary)',\n    }),\n  };\n\n  return (\n    <Select\n      placeholder=\"Add role...\"\n      options={props.unadded.map(props.mapOptions)}\n      styles={colorStyles}\n      onChange={props.onChange} \n      noOptionsMessage={() => 'All roles have been added'} />\n  );\n}\n \nexport default ScarceSelect;","import { useState } from 'react';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { updateChannel } from '../../../store/channels';\nimport { getGuildRoles } from '../../../store/guilds';\nimport { openSaveChanges } from '../../../store/ui';\nimport RoleMenu from '../../ctx-menus/role-menu';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport SaveChanges from '../../utils/save-changes';\nimport TabLink from '../../utils/tab-link';\nimport PermOverrides from './perm-overrides';\nimport ScarceSelect from './scarce-select';\n \nconst ChannelSettingsPerms: React.FunctionComponent = () => {  \n  const { guildId }: any = useParams();\n  const dispatch = useDispatch();\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n\n  const byPosition = (a, b) => (a.position > b.position) ? 1 : -1;\n  const allRoles = useSelector(getGuildRoles(guildId)).sort(byPosition);\n\n  const defaultOverride = channel.overrides?.[0];\n  const [activeOverride, setOverride] = useState(\n    (defaultOverride)\n      ? { ...defaultOverride } as ChannelTypes.Override\n      : undefined,\n  );\n  \n  const unaddedRoles = allRoles.filter(r => !channel.overrides?.some(o => o.roleId === r.id));\n  const overrideRoles = allRoles.filter(r => channel.overrides?.some(o => o.roleId === r.id));\n  const [activeRoleId, setActiveRoleId] = useState(overrideRoles[0]?.id ?? '');\n\n  const deleteActiveOverride = () => {\n    setOverride({ allow: 0, deny: 0, roleId: activeRoleId });\n    setActiveRoleId('');\n    dispatch(openSaveChanges(true));\n  }\n\n  const RoleDetails = () => {    \n    return (\n      <>\n        {/* <PermOverrides\n          setOverride={setOverride}\n          activeOverride={activeOverride} /> */}\n        <div>In development...</div>\n        {/* <NormalButton\n          onClick={deleteActiveOverride}\n          className=\"bg-danger float-right\"\n          type=\"button\">Delete</NormalButton> */}\n      </>\n    );\n  }\n\n  const onSave = (e) => {\n    const overrides = JSON.parse(JSON.stringify(channel.overrides)) ?? [];\n    if (activeOverride && activeOverride.allow + activeOverride.deny > 0)\n      overrides.push(activeOverride);\n\n    dispatch(updateChannel(channel.id, { overrides }));\n  };\n\n  const role = allRoles.find(r => r.id === activeRoleId);\n  const alreadyActive = channel.overrides?.some(o => o.roleId === activeRoleId);\n  if (activeOverride && role && !alreadyActive)\n    overrideRoles.push(role);\n\n  return (\n    <div className=\"grid grid-cols-12 flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <div className=\"lg:col-span-3 col-span-12\">\n        <nav className=\"pr-10\">\n          {overrideRoles.sort(byPosition).map(r => (\n            <ContextMenuTrigger id={r.id} key={r.id}>\n              <TabLink\n                style={{ color: r.color }}\n                tab={activeRoleId}\n                setTab={setActiveRoleId}\n                id={r.id}>{r.name}</TabLink>\n              <RoleMenu role={r} />\n            </ContextMenuTrigger>\n          ))}\n\n          <Category className=\"m-1 mt-3\" title=\"Add Role\" />\n          <ScarceSelect\n            mapOptions={r => ({ label: r.name, value: r.id, color: r.color })}\n            onChange={select => {\n              const roleId = select.value;\n              setOverride({ allow: 0, deny: 0, roleId });\n              setActiveRoleId(roleId);\n            }}\n            unadded={unaddedRoles} />\n        </nav>\n      </div>\n      <div className=\"lg:col-span-9 col-span-12\">\n        {activeOverride && <RoleDetails />}\n      </div>\n\n      <SaveChanges\n        onSave={onSave}\n        obj={{ overrides: activeOverride }} />  \n    </div>\n  );\n}\n \nexport default ChannelSettingsPerms;","import { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useSnackbar } from 'notistack';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from '../../../store/ui';\n\nconst EscButton = () => {\n  const dispatch = useDispatch();\n  const { closeSnackbar } = useSnackbar();\n\n  const onClick = () => {\n    dispatch(closeModal);\n    closeSnackbar('saveChanges');\n  };\n  \n  return (\n    <div\n      className=\"rounded-full ring ring-gray-500 cursor-pointer border-white rounded-full px-2 w-16 mt-14\"\n      onClick={onClick}>\n      <FontAwesomeIcon icon={faTimes} color=\"var(--muted)\" />\n      <span className=\"pl-1.5 muted\">ESC</span>\n    </div>\n  );\n}\n\nexport default EscButton;","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api } from './api';\nimport { unique } from './utils/filter';\n\nconst slice = createSlice({\n  name: 'members',\n  initialState: [] as Store.AppState['entities']['members'],\n  reducers: {\n    fetched: (members, { payload }: Store.Action<Entity.GuildMember[]>) => {\n      members.push(...payload.filter(unique(members)));\n    },\n    added: (members, { payload }: Store.Action<WS.Args.GuildMemberAdd>) => {\n      members.push(payload.member);\n    },\n    removed: (members, { payload }: Store.Action<WS.Args.GuildMemberRemove>) => {\n      const index = members.findIndex(m => m.id === payload.memberId);      \n      members.splice(index, 1);\n    },\n    updated: (members, { payload }: Store.Action<WS.Args.GuildMemberUpdate>) => {\n      const member = members.find(m => m.id === payload.memberId);\n      Object.assign(member, payload.partialMember);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const joinGuild = (inviteCode: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_MEMBER_ADD',\n    data: { inviteCode } as WS.Params.GuildMemberAdd,\n  }));\n}\n\nexport const leaveGuild = (guildId: string) => (dispatch, getState: () => Store.AppState) => {\n  const user = getState().auth.user!;\n\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_MEMBER_REMOVE',\n    data: { guildId, userId: user.id } as WS.Params.GuildMemberRemove,\n  }));\n}\n\nexport const kickMember = (guildId: string, userId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_MEMBER_REMOVE',\n    data: { guildId, userId } as WS.Params.GuildMemberRemove,\n  }));\n}\n\nexport const updateMember = (memberId: string, options: Partial<Entity.GuildMember>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_MEMBER_UPDATE',\n    data: { memberId, ...options } as WS.Params.GuildMemberUpdate,\n  }));\n}\n\nexport const getMember = (guildId: string, userId: string) =>\ncreateSelector<Store.AppState, Entity.GuildMember[], Entity.GuildMember | undefined>(\n  state => state.entities.members,\n  members => members.find(m => m.guildId === guildId && m.userId === userId),\n);\n\nexport const getSelfMember = (guildId: string | undefined) =>\ncreateSelector<Store.AppState, any, Entity.GuildMember | undefined>(\n  state => ({ user: state.auth.user, members: state.entities.members }),\n  ({ user, members }) => members.find(m => m.guildId === guildId && m.userId === user.id),\n);\n\nexport const filterByRole = (roleId: string) => \ncreateSelector<Store.AppState, Entity.GuildMember[], Entity.GuildMember[]>(\n  state => state.entities.members,\n  members => members.filter(m => m.roleIds.includes(roleId)),\n);","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { unique } from './utils/filter';\nimport { actions as api } from './api';\nimport { WS } from '../types/ws';\nimport { byMax } from './utils/reduce';\n\nconst slice = createSlice({\n  name: 'roles',\n  initialState: [] as Store.AppState['entities']['roles'],\n  reducers: {\n    fetched: (roles, { payload }: Store.Action<Entity.Role[]>) => {\n      roles.push(...payload.filter(unique(roles)));\n    },\n    created: (roles, { payload }: Store.Action<WS.Args.GuildRoleCreate>) => {\n      roles.push(payload.role);\n    },\n    updated: (roles, { payload }: Store.Action<WS.Args.GuildRoleUpdate>) => {\n      const role = roles.find(r => r.id === payload.roleId);\n      Object.assign(role, payload.partialRole);\n    },\n    deleted: (roles, { payload }: Store.Action<WS.Args.GuildRoleDelete>) => {\n      const index = roles.findIndex(r => r.id === payload.roleId);\n      roles.splice(index, 1);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const getRole = (id: string) => createSelector<Store.AppState, Entity.Role[], Entity.Role | undefined>(\n  state => state.entities.roles,\n  roles => roles.find(r => r.id === id),\n);\n\nexport const getRoles = (ids: string[]) => createSelector<Store.AppState, Entity.Role[], Entity.Role[]>(\n  state => state.entities.roles,\n  roles => roles.filter(r => ids.includes(r.id)),\n);\n\nexport const filterHoistedRoles = (guildId: string) => createSelector<Store.AppState, Entity.Role[], Entity.Role[]>(\n  state => state.entities.roles,\n  roles => roles.filter(r => r.guildId === guildId && r.hoisted),\n);\n\nexport const getMemberHighestRole = (guildId: string | undefined, userId: string) => createSelector<Store.AppState, any, Entity.Role>(\n  state => ({ members: state.entities.members, roles: state.entities.roles }),\n  ({ members, roles }) => {\n    const member = members.find(m => m.guildId === guildId && m.userId === userId);\n    return (member) ?\n      roles\n        .filter(r => member.roleIds.includes(r.id))\n        .reduce(byMax('position'))\n      : null;\n  },\n);\n\nexport const createRole = (guildId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_ROLE_CREATE',\n    data: { guildId } as WS.Params.GuildRoleCreate,\n  }));\n}\n\nexport const updateRole = (guildId: string, roleId: string, payload: Partial<Entity.Role>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_ROLE_UPDATE',\n    data: { roleId, guildId, ...payload } as WS.Params.GuildRoleUpdate,\n  }));\n}\n\nexport const deleteRole = (guildId: string, roleId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'GUILD_ROLE_DELETE',\n    data: { roleId, guildId } as WS.Params.GuildRoleDelete,\n  }));\n}","export const byMax = (k: string) => (acc, val) => (acc < val[k]) ? acc : val;","import { useStore } from 'react-redux';\nimport { PermService } from '../services/perm-service';\n\nconst usePerms = (): PermService => {\n  const state = useStore().getState();\n  return new PermService(state);\n}\n \nexport default usePerms;","import { CSSProperties, FunctionComponent } from 'react';\nimport TabLink from './tab-link';\n\ntype Tab = { name: string, id: string, perm?: string };\n\ninterface NavTabsProps {\n  className?: string;\n  tabs: Tab[];\n  tab: string;\n  setTab: React.Dispatch<React.SetStateAction<string>>;\n  linkStyle?: CSSProperties;\n  activeLinkStyle?: CSSProperties;\n  predicate?: (t: Tab) => boolean;\n}\n \nconst NavTabs: FunctionComponent<NavTabsProps> = ({ className, tabs, setTab, tab, predicate, linkStyle, activeLinkStyle }) => {\n  return (\n    <div className={className}>\n      {tabs.map(t => (!predicate || predicate?.(t)) && (\n        <TabLink\n          style={{\n            ...linkStyle,\n            ...(t.id === tab ? activeLinkStyle : {}),\n          }}\n          tab={tab}\n          setTab={setTab}\n          id={t.id}\n          key={t.id}>{t.name}</TabLink>\n      ))}\n    </div>\n  );\n}\n \nexport default NavTabs;","import { useSelector } from 'react-redux';\nimport Category from '../../utils/category';\nimport Modal from '../modal';\nimport { useState } from 'react';\nimport ChannelSettingsOverview from './channel-settings-overview';\nimport ChannelSettingsPerms from './channel-settings-perms';\nimport EscButton from '../../utils/buttons/esc-button';\nimport usePerms from '../../../hooks/use-perms';\nimport NavTabs from '../../utils/nav-tabs';\n\nconst ChannelSettings: React.FunctionComponent = () => {\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const [tab, setTab] = useState('overview');\n  const perms = usePerms();\n\n  return (channel) ? (\n    <Modal typeName={'ChannelSettings'} size=\"full\">\n      <div className=\"grid grid-cols-12 h-full\">\n        <div className=\"col-span-4 bg-bg-secondary\">\n          <nav className=\"float-right flex-grow py-14 w-48 my-1 mr-4\">\n            <Category\n              className=\"muted px-2.5 pb-1.5\"\n              title={`#${channel.name}`} />\n          <NavTabs\n            tabs={[\n              { perm: 'MANAGE_CHANNELS', name: 'Overview', id: 'overview' },\n              { perm: 'MANAGE_CHANNELS', name: 'Perms', id: 'perms' },\n            ]}\n            tab={tab}\n            setTab={setTab}\n            predicate={t => perms.can(t.perm as any, guild.id)} />\n          </nav>\n        </div>\n\n        <div className=\"col-span-6 h-full\">\n          {tab === 'overview' && <ChannelSettingsOverview />}\n          {tab === 'perms' && <ChannelSettingsPerms />}\n        </div>\n\n        <div className=\"col-span-2 h-full\">\n          <EscButton />\n        </div>\n      </div>\n    </Modal>\n  ) : null;\n};\n \nexport default ChannelSettings;","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createChannel } from '../../store/channels';\nimport NormalButton from '../utils/buttons/normal-button';\nimport Input from '../utils/input/input';\nimport Modal from './modal';\n\nconst CreateChannel: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, setValue } = useForm();\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild);\n\n  const create = (data) => {\n    dispatch(createChannel(guild!.id, data));\n    setValue('name', '');\n  };\n\n  const types: ChannelTypes.Type[] = ['TEXT', 'VOICE'];\n  \n  return (\n    <Modal typeName={'CreateChannel'} size=\"lg\">\n      <form\n        className=\"flex flex-col h-full\"\n        onSubmit={handleSubmit(create)}>\n        <header className=\"text-center mb-5 p-5\">\n          <h1 className=\"text-2xl font-bold inline\">Create Channel</h1>\n        </header>\n      \n        <div className=\"flex-grow p-5\">\n          <Input\n            label=\"Channel Name\"\n            name=\"name\"\n            register={register} />\n        </div>\n      \n      <div className=\"flex-grow pt-0 p-5\">\n        <label\n          htmlFor=\"channelType\"\n          className=\"uppercase text-xs font-semibold\">Channel Type</label>\n        <select\n          id=\"channelType\"\n          className=\"block bg-bg-secondary rounded focus:outline-none w-full h-10 p-2 mt-2\"\n          defaultValue={types[0]}\n          {...register('type')}>\n          {types.map(type => <option key={type} value={type}>{type}</option>)}\n        </select>\n      </div>\n\n        <footer className=\"bg-bg-secondary\">\n          <NormalButton\n            className=\"bg-primary font float-right m-4\">Create</NormalButton>\n        </footer>\n      </form>\n    </Modal>\n  );\n}\n \nexport default CreateChannel;","import { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { createGuild } from '../../store/guilds';\nimport { joinGuild } from '../../store/members';\nimport NormalButton from '../utils/buttons/normal-button';\nimport Input from '../utils/input/input';\nimport Modal from './modal';\n\nconst CreateGuild: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit } = useForm();\n  const { register: register2, handleSubmit: handleSubmit2 } = useForm();\n\n  const submitCreate = (data) => dispatch(createGuild(data.name));\n  const submitJoin = (data) => dispatch(joinGuild(data.inviteCode));\n\n  return (\n    <Modal\n      className=\"p-5\"\n      typeName={'CreateGuild'}\n      size=\"lg\">\n      <header className=\"text-center mb-5\">\n        <h1 className=\"text-3xl font-bold inline\">Create Guild</h1>\n        <p className=\"lead\">\n          Hang out with your friends. <br />\n          Create an epic guild, or join with friends.\n        </p>\n      </header>\n\n      <h3 className=\"uppercase font-bold mt-10\">Join One</h3>\n\n      <form onSubmit={handleSubmit(submitJoin)}>\n        <Input\n          label=\"Invite Code\"\n          name=\"inviteCode\"\n          register={register} />\n        <NormalButton className=\"bg-tertiary w-full h-11 mt-8\">Join</NormalButton>\n      </form>\n\n      <h3 className=\"uppercase font-bold mt-10\">Make Your Own</h3>\n\n      <form onSubmit={handleSubmit2(submitCreate)}>\n        <Input\n          label=\"Guild Name\"\n          name=\"name\"\n          register={register2} />\n        <NormalButton className=\"bg-primary font w-full h-11 mt-8\">Create</NormalButton>\n      </form>\n    </Modal>\n  );\n}\n\nexport default CreateGuild;","import { createSlice } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api } from './api';\nimport { unique } from './utils/filter';\n\nconst slice = createSlice({\n  name: 'invites',\n  initialState: {\n    fetched: {},\n    list: [] as Entity.Invite[],\n  } as Store.AppState['entities']['invites'],\n  reducers: {\n    fetched: ({ list, fetched }, { payload }: Store.Action<Entity.Invite[]>) => {\n      const guildId = payload[0].guildId;\n      list.push(...payload.filter(unique(list)));\n      fetched.push(guildId);\n    },\n    created: ({ list }, { payload }: Store.Action<WS.Args.InviteCreate>) => {\n      list.push(payload.invite);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const createInvite = (guildId: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'INVITE_CREATE',\n    data: { guildId } as WS.Params.InviteCreate,\n  }));\n}\n\nexport const deleteInvite = (inviteCode: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'INVITE_DELETE',\n    data: { inviteCode } as WS.Params.InviteDelete,\n  }));\n}","import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Input from '../utils/input/input';\nimport NormalButton from '../utils/buttons/normal-button';\nimport Modal from './modal';\nimport { createInvite } from '../../store/invites';\n\nconst CreateInvite: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { register, setValue } = useForm();\n  const { activeGuild, activeInvite, openModal } = useSelector((s: Store.AppState) => s.ui);\n\n  setValue('inviteCode', activeInvite?.id);\n\n  const isOpen = openModal === 'CreateInvite';\n  useEffect(() => {\n    if (activeInvite || !activeGuild || !isOpen) return;\n\n    dispatch(createInvite(activeGuild.id));\n  }, [isOpen]);\n\n  const copyCode = () => window.navigator.clipboard.writeText(activeInvite!.id);\n  \n  return (activeInvite) ? (\n    <Modal typeName={'CreateInvite'} className=\"p-5\">\n      <header className=\"mb-3\">\n        <h1 className=\"font-bold inline uppercase\">Invite Friends to {activeGuild?.name}</h1>\n      </header>\n\n      <h4 className=\"text-xs uppercase font-bold muted mb-3\">Or Send A Guild Invite To A Friend</h4>\n\n      <div className=\"relative\">\n        <NormalButton\n          onClick={copyCode}\n          className=\"absolute -right-3 top-5 m-4\">Copy</NormalButton>\n        <Input\n          label=\"Invite Code\"\n          name=\"inviteCode\"\n          register={register}\n          autoFocus />\n      </div>\n    </Modal>\n  ) : null;\n}\n \nexport default CreateInvite;","import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteGuild, updateGuild, uploadGuildIcon } from '../../../store/guilds';\nimport { openSaveChanges } from '../../../store/ui';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport Input from '../../utils/input/input';\nimport SaveChanges from '../../utils/save-changes';\n \nconst GuildSettingsOverview: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const { register, handleSubmit, setValue } = useForm();\n\n  const onSave = (e) => {\n    const onUpdate = (payload) => dispatch(updateGuild(guild.id, payload));\n    handleSubmit(onUpdate)(e);\n  };\n  const onDelete = () => {\n    const confirmation = window.confirm('Are you sure you want to delete this guild?');\n    confirmation && dispatch(deleteGuild(guild.id));\n  }\n  \n  return (\n    <form\n      onChange={() => dispatch(openSaveChanges(true))}\n      className=\"flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <header>\n        <h1 className=\"text-xl font-bold inline\">Guild Overview</h1>\n      </header>\n    \n      <section className=\"w-1/2\">\n        <Input\n          label=\"Name\"\n          name=\"name\"\n          register={register}\n          options={{ value: guild.name }}\n          className=\"pt-5\" />\n        <Input\n          type=\"file\"\n          accept=\"image/*\"\n          label=\"Icon Image\"\n          name=\"iconURL\"\n          className=\"pt-5\"\n          register={(): any => {}}\n          options={{ value: guild.iconURL }}\n          onChange={(e) => {\n            const file = e.currentTarget?.files?.[0];\n            if (file) dispatch(uploadGuildIcon(guild.id, file));\n          }} />\n      </section>\n\n      <Category\n        className=\"py-2 mt-5\"\n        title=\"Advanced Settings\" />\n\n      <section>\n        <NormalButton\n          type=\"button\"\n          onClick={onDelete}\n          className=\"bg-danger\">Delete</NormalButton>\n      </section>\n\n      <SaveChanges\n        setValue={setValue}\n        onSave={onSave}\n        obj={guild} />\n    </form>    \n  );\n}\n \nexport default GuildSettingsOverview;","import './toggle.scoped.css';\n\nimport classNames from 'classnames';\n\nexport type ToggleProps = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLInputElement>,\n  HTMLInputElement> & {\n  checked: boolean;\n  id: string;\n}\n \nconst Toggle: React.FunctionComponent<ToggleProps> = (props) => {\n  return (\n    <div className={classNames(`flex`, props.className)}>\n      <label\n        htmlFor={props.id}\n        className=\"flex items-center cursor-pointer\">\n        <div className=\"relative\">\n          <input\n            {...props}\n            id={props.id}\n            type=\"checkbox\"\n            className=\"sr-only\"\n            checked={props.checked} />\n          <div className=\"block bg-gray-600 w-14 h-8 rounded-full\" />\n          <div className=\"dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition\" />\n        </div>\n      </label>\n    </div>\n  );\n}\n \nexport default Toggle;","import { UseFormSetValue, FieldValues } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport usePerms from '../../../hooks/use-perms';\nimport { PermissionTypes } from '../../../services/perm-service';\nimport { openSaveChanges } from '../../../store/ui';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport Toggle from '../../utils/input/toggle';\n\nexport interface RolePermissionsProps {\n  setRoleValue: UseFormSetValue<FieldValues>;\n  setPerms: React.Dispatch<React.SetStateAction<number>>;\n  perms: number;\n}\n \nconst RolePermissions: React.FunctionComponent<RolePermissionsProps> = ({ perms, setPerms, setRoleValue: setValue }) => {\n  const dispatch = useDispatch();\n  const { description } = usePerms();\n  \n  const fullySetPerms = (perms: number) => {\n    setPerms(perms);\n    setValue('permissions', perms);\n    dispatch(openSaveChanges(true));\n  };\n  const togglePerm = (name: string, on: boolean) =>\n    fullySetPerms((on)\n      ? perms | PermissionTypes.All[name]\n      : perms & ~PermissionTypes.All[name]);\n  const has = (name: string) => Boolean(perms & PermissionTypes.All[name]);\n  const PermToggle = ({ category, permName }) => (\n    <div className=\"flex items-center justify-between mb-2\">\n      <span>{description[category][permName]}</span>\n      <Toggle\n        id={permName}\n        checked={has(permName)}\n        onChange={() => togglePerm(permName, !has(permName))}\n        className=\"float-right\" />\n    </div>\n  );\n\n  return (\n    <>\n      {Object.keys(description).map(category => (\n        <div key={category} className=\"mb-5\">\n          <Category className=\"muted pb-1.5 mt-5\" title={category} />\n            {Object.keys(description[category]).map(permName => (\n              <>\n                <strong\n                  title={PermissionTypes.All[permName]}\n                  className=\"secondary\">{permName}</strong>\n                <PermToggle\n                  key={permName}\n                  category={category}\n                  permName={permName} />\n              </>\n            ))}\n        </div>\n      ))}\n      <NormalButton\n        onClick={() => fullySetPerms(0)}\n        className=\"bg-white text-black\"\n        type=\"button\">Clear</NormalButton>\n      <NormalButton\n        onClick={() => fullySetPerms(PermissionTypes.defaultPermissions)}\n        className=\"bg-secondary text-black ml-2\"\n        type=\"button\">Default</NormalButton>\n    </>\n  );\n}\n \nexport default RolePermissions;","import classNames from 'classnames';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport usePerms from '../../../hooks/use-perms';\nimport { getGuildRoles } from '../../../store/guilds';\nimport { createRole, deleteRole, getRole, updateRole } from '../../../store/roles';\nimport { openSaveChanges } from '../../../store/ui';\nimport RoleMenu from '../../ctx-menus/role-menu';\nimport CircleButton from '../../utils/buttons/circle-button';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport Input from '../../utils/input/input';\nimport Toggle from '../../utils/input/toggle';\nimport SaveChanges from '../../utils/save-changes';\nimport TabLink from '../../utils/tab-link';\nimport RolePermissions from './role-permissions';\n \nconst GuildSettingsRoles: React.FunctionComponent = () => {  \n  const dispatch = useDispatch();\n  const { handleSubmit, register, setValue, getValues } = useForm();\n  const { guildId }: any = useParams();\n  const roles = useSelector(getGuildRoles(guildId));\n  const [activeRoleId, setActiveRoleId] = useState(roles[0].id);\n  const activeRole = useSelector(getRole(activeRoleId));\n  const [perms, setPerms] = useState(0);\n  const [hoisted, setHoisted] = useState(false);\n  const permsService = usePerms();\n\n  useEffect(() => {\n    if (!activeRole) return setActiveRoleId(roles[0].id);\n\n    for (const name of ['name', 'color', 'permissions', 'hoisted'])\n      setValue(name, activeRole[name]);\n    setPerms(activeRole.permissions);\n    setHoisted(activeRole.hoisted);\n  }, [activeRole]);\n\n  const RoleDetails = () => {    \n    return (\n      <form\n        className=\"mb-10\"\n        onChange={() => dispatch(openSaveChanges(true))}>\n        <div className=\"flex gap-4\">\n          <Input\n            label=\"Name\"\n            name=\"name\"\n            register={register} />\n          <Input\n            label=\"Color\"\n            name=\"color\"\n            type=\"color\"\n            register={register} />\n        </div>\n\n        <div className=\"mt-5\">\n          <Category title=\"Options\" className=\" pb-1.5 mt-5\" />\n          <span>\n            <span>Separate role on member list</span>\n            <Toggle\n              id=\"hoisted\"\n              checked={hoisted}\n              {...register('hoisted')}\n              onChange={() => {\n                setHoisted(!hoisted);\n                setValue('hoisted', !hoisted);\n              }}\n              className=\"float-right\" />\n          </span>\n        </div>\n  \n        <RolePermissions\n          perms={perms}\n          setPerms={setPerms}\n          setRoleValue={setValue}  />\n        <NormalButton\n          onClick={() => dispatch(deleteRole(guildId, activeRole!.id))}\n          className=\"bg-danger float-right\"\n          type=\"button\">Delete</NormalButton>\n      </form>\n    )\n  }\n\n  const onSave = (e) => {\n    const onUpdate = (payload) => dispatch(updateRole(guildId, activeRole!.id, payload));\n    handleSubmit(onUpdate)(e);\n  };  \n  const byPosition = (a, b) => (a.position > b.position) ? -1 : 1;\n  const selfIsHigher = (r) => permsService.memberIsHigher(guildId, [r.id]);\n\n  return (\n    <div className=\"grid grid-cols-12 flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <div className=\"lg:col-span-3 col-span-12\">\n        <nav className=\"pr-10\">\n          {roles.sort(byPosition).map(r => (\n            <ContextMenuTrigger id={r.id} key={r.id}>\n              <TabLink\n                className={classNames({\n                  'cursor-not-allowed opacity-25': !selfIsHigher(r),\n                })}\n                key={r.id}\n                style={{ color: r.color }}\n                tab={activeRoleId}\n                setTab={(...args) => selfIsHigher(r) && setActiveRoleId(...args)}\n                id={r.id}>{r.name}</TabLink>\n              <RoleMenu role={r} />\n            </ContextMenuTrigger>\n          ))}\n          <CircleButton\n            onClick={() => dispatch(createRole(guildId))}\n            style={{ color: 'var(--success)' }}\n            className=\"ring-green-500 m-2\">Create</CircleButton>\n        </nav>\n      </div>\n      <div className=\"lg:col-span-9 col-span-12\">\n        {activeRole && <RoleDetails />}\n      </div>\n\n      <SaveChanges\n        setValue={(...args) => {\n          setValue(...args);\n          setPerms(activeRole!.permissions);\n          setHoisted(activeRole!.hoisted);\n        }}\n        onSave={onSave}\n        obj={getValues()} />  \n    </div>\n  );\n}\n \nexport default GuildSettingsRoles;","import { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { getGuildInvites } from '../../../store/guilds';\nimport { deleteInvite } from '../../../store/invites';\nimport { openSaveChanges } from '../../../store/ui';\nimport CircleButton from '../../utils/buttons/circle-button';\n\nconst GuildSettingsInvites: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { guildId }: any = useParams();\n  const invites = useSelector(getGuildInvites(guildId));\n  \n  const Invites = () => (\n    <div className=\"mt-2\">\n      {invites.map(i => (\n        <div className=\"w-full mb-3\">\n          <strong>{i.id}</strong>\n          <span className=\"float-right\">\n            <button\n              type=\"button\"\n              className=\"danger rounded-full ring ring-red-500 px-2\"\n              onClick={() => dispatch(deleteInvite(i.id))}>x</button>\n          </span>\n        </div>\n      ))}\n      {!invites.length && <span>No invites created.</span>}\n    </div>\n  );\n  \n  return (\n    <form\n      onChange={() => dispatch(openSaveChanges(true))}\n      className=\"flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <header>\n        <h1 className=\"text-xl font-bold inline\">Invites</h1>\n      </header>\n    \n      <Invites />\n    </form>    \n  );\n}\n \nexport default GuildSettingsInvites;","import { useSelector } from 'react-redux';\nimport Category from '../../utils/category';\nimport Modal from '../modal';\nimport { useState } from 'react';\nimport GuildSettingsOverview from './guild-settings-overview';\nimport GuildSettingsRoles from './guild-settings-roles';\nimport EscButton from '../../utils/buttons/esc-button';\nimport usePerms from '../../../hooks/use-perms';\nimport GuildSettingsInvites from './guild-settings-invites';\nimport NavTabs from '../../utils/nav-tabs';\n\nconst GuildSettings: React.FunctionComponent = () => {\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const [tab, setTab] = useState('overview');\n  const perms = usePerms();\n\n  return (guild) ? (\n    <Modal typeName={'GuildSettings'} size=\"full\">\n      <div className=\"grid grid-cols-12 h-full\">\n        <div className=\"col-span-4 bg-bg-secondary\">\n          <nav className=\"float-right flex-grow py-14 w-48 my-1 mr-4\">\n            <Category\n              className=\"muted px-2.5 pb-1.5\"\n              title={guild.name} />\n          <NavTabs\n            tabs={[\n              { perm: 'MANAGE_GUILD', name: 'Overview', id: 'overview' },\n              { perm: 'MANAGE_ROLES', name: 'Roles', id: 'roles' },\n              { perm: 'MANAGE_INVITES', name: 'Invites', id: 'invites' },\n            ]}\n            tab={tab}\n            setTab={setTab}\n            predicate={t => perms.can(t.perm as any, guild.id)} />\n          </nav>\n        </div>\n\n        <div className=\"col-span-6 h-full\">\n          {tab === 'overview' && <GuildSettingsOverview />}\n          {tab === 'roles' && <GuildSettingsRoles />}\n          {tab === 'invites' && <GuildSettingsInvites />}\n        </div>\n\n        <div className=\"col-span-2 h-full\">\n          <EscButton />\n        </div>\n      </div>\n    </Modal>\n  ) : null;\n};\n \nexport default GuildSettings;","import { useSelector } from 'react-redux';\nimport Modal from './modal';\n\nconst CreateInvite: React.FunctionComponent = () => {\n  const resource = useSelector((s: Store.AppState) => s.ui.activeResource);\n  const fullURL = process.env.REACT_APP_CDN_URL! + resource;\n\n  return (resource) ? (\n    <Modal\n      size=\"lg\"\n      typeName={'ImagePreview'}\n      className=\"p-5 bg-transparent \">\n      <img\n        src={fullURL}\n        onError={(e) => {\n          e.currentTarget.onerror = null;\n          e.currentTarget.src = `${process.env.REACT_APP_CDN_URL}/images/image-not-found.png`;\n        }} />\n      <a\n        style={{ color: 'var(--normal)' }}\n        className=\"pt-2\"\n        href={fullURL}\n        target=\"_blank\">View Original</a>\n    </Modal>\n  ) : null;\n}\n \nexport default CreateInvite;","import { FunctionComponent, HTMLAttributes } from 'react';\n\nconst Image: FunctionComponent<any> = (props) => {\n  return (\n    <img\n      onError={e => e.currentTarget.src = `${process.env.REACT_APP_CDN_URL}/avatars/unknown.png`}\n      {...props} />\n    );\n}\n \nexport default Image;","import classNames from 'classnames';\nimport { useLocation } from 'react-router-dom';\nimport Image from '../../utils/image';\n\nimport './sidebar-icon.scoped.css';\n\nexport interface SidebarIconProps {\n  imageURL?: string;\n  name: string;\n  to?: string;\n  classes?: string;\n}\n\nconst SidebarIcon: React.FunctionComponent<SidebarIconProps> = (props) => {\n  let { to, imageURL, name, classes = 'font' } = props;\n  const location = useLocation();\n  if (imageURL)\n    imageURL = `${process.env.REACT_APP_CDN_URL}${imageURL}`;\n\n  const getAbbr = (name: string) => name\n    .split(' ')\n    .map(n => n[0])\n    .join('')\n    .slice(0, 3);\n\n  const Icon = () => (imageURL)\n    ? <Image\n        className=\"h-12 w-12\"\n        src={imageURL}\n        alt={name} />\n    : <span className=\"select-none flex items-center justify-center h-12 w-12\">{getAbbr(name)}</span>;\n\n  const isActive = to && location.pathname.startsWith(to);\n  const activeClasses = (isActive)\n    ? 'rounded-xl bg-primary'\n    : 'rounded-full bg-bg-primary';\n\n  return (\n    <div\n      className={classNames(`wrapper`, { 'active': isActive })}\n      title={name}>\n      <div className=\"selected rounded bg-white absolute -left-1 h-0 w-2\" />\n      <div className={classNames(\n          `cursor-pointer guild-icon flex justify-center mb-2`,\n          activeClasses, classes,\n        )}>\n        <Icon />\n      </div>\n    </div>\n  );\n}\n\nexport default SidebarIcon;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCrown } from '@fortawesome/free-solid-svg-icons';\nimport { getMemberHighestRole } from '../../store/roles';\nimport { useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport Image from '../utils/image';\n\nexport interface UsernameProps {\n  user: Entity.User;\n  guild?: Entity.Guild;\n  size?: 'sm' | 'md' | 'lg';\n}\n \nconst Username: React.FunctionComponent<UsernameProps> = ({ guild, user, size = 'md' }) => {\n  const highestRole = useSelector(getMemberHighestRole(guild?.id, user.id));\n\n  const userOwnsGuild = guild?.ownerId === user.id;\n  const discrim = user.discriminator\n    .toString()\n    .padStart(4, '0');\n  const isOnline = user.status === 'ONLINE';\n\n  const UserPresence = () => {\n    const blob = {\n      color: (isOnline) ? 'bg-success' : 'bg-gray-500',\n      size: {\n        'lg': 'h-6 w-6',\n        'md': 'h-3.5 w-3.5',\n        'sm': 'h-2 w-2',\n      }[size],\n    };\n\n    return (\n      <span className=\"rounded-full absolute flex -right-0.5 -bottom-0.5\">\n        <span\n          style={{ border: '2px solid var(--bg-secondary)' }}\n          className={classNames(\n            `relative inline-flex rounded-full px-1`,\n            blob.size, blob.color, { 'hidden': size === 'sm' })} />\n      </span>\n    );\n  }\n\n  const sizeClass = {\n    'lg': 'text-lg',\n    'md': 'text-sm',\n    'sm': 'text-sm',\n  }[size];\n\n  return (\n    <div className={classNames(\n      `flex items-center px-2`,\n      'cursor-pointer',\n      { 'opacity-50': !isOnline })}>\n      <div className=\"relative avatar mr-2\">\n        <UserPresence />\n        <Image\n          className={{\n            'sm': 'select-none rounded-full w-6 h-6',\n            'md': `select-none rounded-full w-8 h-8`,\n            'lg': `select-none rounded-full w-20 h-20`,\n          }[size]}\n          src={`${process.env.REACT_APP_CDN_URL}${user.avatarURL}`} />\n      </div>\n      <div className=\"tag leading-4\">\n        <h4 className={classNames({ 'font-bold': size !== 'sm' }, sizeClass)}>\n          <span\n            style={{ color: highestRole?.color ?? 'var(--font)' }}\n            className={classNames({ 'font-light text-base': guild })}>{user.username}</span>\n          <span className=\"text-yellow-400 ml-1\">\n            {(userOwnsGuild && size !== 'sm') && <FontAwesomeIcon icon={faCrown} />}\n          </span>\n        </h4>\n        {(!guild && size !== 'sm') &&\n          <div className={classNames(`discriminator`, sizeClass)}>#{discrim}</div>}\n      </div>\n    </div>\n  );\n}\n \nexport default Username;","import { faBug, faGavel, faSun, faVideo } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport moment from 'moment';\nimport { FunctionComponent, useState } from 'react';\nimport { useSelector, useStore } from 'react-redux';\nimport { getGuild } from '../../store/guilds';\nimport SidebarIcon from '../navigation/sidebar/sidebar-icon';\nimport Username from '../user/username';\nimport Category from '../utils/category';\nimport NavTabs from '../utils/nav-tabs';\nimport Modal from './modal';\n\nconst UserProfile: FunctionComponent = () => {\n  const selfUser = useSelector((s: Store.AppState) => s.auth.user)!;\n  const user = useSelector((s: Store.AppState) => s.ui.activeUser);\n  const [tab, setTab] = useState('info');\n\n  type BadgeIcon = {\n    [k in UserTypes.Badge]: { color: string, icon: any, title: string }\n  };\n  const badgeIcons: BadgeIcon = {\n    'BUG_1': {\n      color: 'bronze',\n      icon: faBug,\n      title: 'Has destroyed a few bugs.',\n    },\n    'BUG_2': {\n      color: 'silver',\n      icon: faBug,\n      title: 'Has destroyed many bugs.',\n    },\n    'BUG_3': {\n      color: 'gold',\n      icon: faBug,\n      title: 'Are there any bugs left?'\n    },\n    'OG': {\n      color: 'orange',\n      icon: faSun,\n      title: 'Was here since the very beginning.',\n    },\n    'STAFF': {\n      color: 'var(--primary)',\n      icon: faGavel,\n      title: 'Staff.',\n    },\n    'VIEWER': {\n      color: 'var(--tertiary)',\n      icon: faVideo,\n      title: 'This user was noticed in live chat.',\n    },\n  };\n\n  const UserBadges = () => (user) ? (\n    <div className=\"px-3 pt-2\">\n      {user.badges.map(b => {\n        const { color, icon, title } = badgeIcons[b];\n        return (\n          <FontAwesomeIcon\n            title={title}\n            className=\"pr-3\"\n            style={{ color }}\n            size=\"2x\"\n            icon={icon} />\n        );\n      })}\n    </div>\n  ) : null;\n\n  const UserInfo = () => (user) ? (\n    <div className=\"grid grid-cols-2\">\n      <div className=\"col-span-1\">\n        <strong>Created: </strong>\n        <span title={user.createdAt.toString()}>{moment(user.createdAt).format('DD/MM/YYYY')}</span>\n      </div>\n    </div>\n  ) : null;\n\n  const UserMutualGuilds = () => {\n    const store = useStore();\n\n    if (!user) return null;\n    \n    const mutualGuilds = selfUser.guildIds\n      .filter(id => user.guildIds.includes(id))\n      .map(id => getGuild(id)(store.getState()));\n    \n    return (\n      <div>\n        <Category\n          title={`${mutualGuilds.length} Mutual Guilds`}\n          className=\"mb-2\" />\n        <div className=\"mx-2\">\n          {mutualGuilds.map(guild => (guild)\n            ? <div className=\"w-12 -ml-2 float-left scale-200\">\n                <SidebarIcon\n                  imageURL={guild.iconURL}\n                  name={guild.name} />\n              </div>\n            : null,\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return (user) ? (\n    <Modal\n      typeName={'UserProfile'}\n      size=\"md\">\n      <header className=\"bg-bg-tertiary\">\n        <div className=\"p-5\">\n          <Username size=\"lg\" user={user} />\n          <UserBadges />\n        </div>\n        <hr className=\"border-bg-primary\" />\n        <NavTabs\n          className=\"normal p-2\"\n          tab={tab}\n          setTab={setTab}\n          tabs={[\n            { name: 'Info', id: 'info' },\n            { name: 'Mutual Guilds', id: 'mutualGuilds' },\n          ]}\n          linkStyle={{\n            color: 'var(--normal)',\n            fontWeight: 'bold',\n            padding: '0 0 30px 0',\n            margin: '5px 10px',\n            borderRadius: 0,\n            display: 'inline-block',\n          }}\n          activeLinkStyle={{ borderBottom: '3px solid var(--normal)' }} />\n      </header>\n      <main className=\"p-4\">\n        {(tab === 'info') && <UserInfo />}\n        {(tab === 'mutualGuilds') && <UserMutualGuilds />}\n      </main>\n    </Modal>\n  ) : null;\n}\n \nexport default UserProfile;","import { createSlice } from '@reduxjs/toolkit';\n\nconst get = (key: keyof Store.AppState['config']) =>\n  JSON.parse(localStorage.getItem(`config.${key as string}`) as any);\nconst set = (key: keyof Store.AppState['config'], value: any) =>\n  JSON.parse(localStorage.setItem(`config.${key as string}`, value) as any);\n\nconst slice = createSlice({\n  name: 'config',\n  initialState: {\n    devMode: get('devMode') ?? false,\n    memberListToggled: get('memberListToggled') ?? true,\n  } as Store.AppState['config'],\n  reducers: {\n    toggleDevMode: (config) => {\n      const value = !config.devMode;\n      config.devMode = value;\n    },\n    toggleMemberList: (config) => {\n      const value = !config.memberListToggled;\n      config.memberListToggled = value;\n    },\n  }\n})\nconst actions = slice.actions;\nexport default slice.reducer;\n\nexport const toggleDevMode = () => (dispatch, getState: () => Store.AppState) => {\n  const config = getState().config;\n\n  dispatch(actions.toggleDevMode());\n  set('devMode', !config.devMode);\n}\nexport const toggleMemberList = () => (dispatch, getState: () => Store.AppState) => {\n  const config = getState().config;\n\n  dispatch(actions.toggleMemberList());\n  set('memberListToggled', !config.memberListToggled);\n}","import { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'meta',\n  initialState: {\n    fetchedEntities: false,\n    hasListenedToWS: false,\n    userCount: NaN,\n  } as Store.AppState['meta'],\n  reducers: {\n    fetchedEntities: (meta) => { meta.fetchedEntities = true },\n    listenedToWS: (meta) => { meta.hasListenedToWS = true },\n    ping: (meta, { payload }) => { meta.ping = payload },\n    updatedUserCount: (meta, { payload }) => { meta.userCount = payload },\n  }\n});\nexport const actions = slice.actions;\nexport default slice.reducer;","import { createSlice, createSelector } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api, uploadFile } from './api';\nimport { actions as meta } from './meta';\nimport { unique } from './utils/filter';\nimport { token } from './utils/rest-headers';\n\nconst slice = createSlice({\n  name: 'users',\n  initialState: [] as Store.AppState['entities']['users'],\n  reducers: {\n    fetched: (users, { payload }: Store.Action<Entity.User[]>) => {\n      users.push(...payload.filter(unique(users)));\n    },\n    updated: (users, { payload }: Store.Action<WS.Args.UserUpdate>) => {\n      const user = users.find(u => u.id === payload.userId);\n      if (user) Object.assign(user, payload.partialUser);\n    },\n    deleted: (users, { payload }: Store.Action<WS.Args.UserDelete>) => {\n      const index = users.findIndex(u => u.id === payload.userId);\n      users.splice(index, 1);\n    },\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const updateSelf = (payload: Partial<Entity.User>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'USER_UPDATE',\n    data: { ...payload, token: token() } as WS.Params.UserUpdate,\n  }));\n}\n  \nexport const toggleBlockUser = (userId: string) => (dispatch, getState: () => Store.AppState) => {\n  console.log('hi');  \n  const user = getState().auth.user!;\n  const ignored = JSON.parse(JSON.stringify(user.ignored));\n  ignored.userIds = ignored.userIds ?? [];\n\n  if (!ignored.userIds.includes(userId))\n    ignored.userIds.push(userId);\n  else {\n    const index = ignored.userIds.indexOf(userId);\n    ignored.userIds.splice(index, 1);\n  }\n\n  dispatch(api.wsCallBegan({\n    event: 'USER_UPDATE',\n    data: { token: token(), ignored } as WS.Params.UserUpdate,\n  }));  \n}\n\nexport const deleteSelf = () => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'USER_DELETE',\n    data: { token: token() } as WS.Params.UserDelete,\n  }));\n}\n\nexport const countUsers = () => (dispatch) => {\n  dispatch(api.restCallBegan({\n    onSuccess: [meta.updatedUserCount.type],\n    url: '/users/count',\n  }));\n}\n\nexport const uploadUserAvatar = (file: File) => (dispatch) => {\n  const uploadCallback = async ({ url }: REST.From.Post['/upload']) =>\n    dispatch(updateSelf({ avatarURL: url }));\n  dispatch(uploadFile(file, uploadCallback));\n}\n\nexport const getUser = (id: string) =>\n  createSelector<Store.AppState, Entity.User[], Entity.User>(\n    state => state.entities.users,\n    users => users.find(u => u.id === id) ?? {\n      avatarURL: '/avatars/unknown.png',\n      discriminator: 0,\n      username: 'Unknown',\n    } as Entity.User,\n  );","import { useSnackbar } from 'notistack';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleDevMode } from '../../../store/config';\nimport { openSaveChanges } from '../../../store/ui';\nimport { updateSelf, deleteSelf, uploadUserAvatar } from '../../../store/users';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport Input from '../../utils/input/input';\nimport Toggle from '../../utils/input/toggle';\nimport SaveChanges from '../../utils/save-changes';\n\nconst UserSettingsOverview: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((s: Store.AppState) => s.auth.user)!;\n  const { register, handleSubmit, setValue } = useForm();\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  const onSave = (e) => {\n    const onUpdate = (payload) => dispatch(updateSelf(payload));\n    handleSubmit(onUpdate)(e);\n  };\n  const onDelete = () => {\n    const confirmation = window.confirm('Are you sure you want to delete your user?');\n    if (confirmation) dispatch(deleteSelf());\n  }\n\n  return (\n    <div className=\"flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <form onChange={() => dispatch(openSaveChanges(true))}>\n        <header>\n          <h1 className=\"text-xl font-bold inline\">My Account</h1>\n        </header>\n\n        <section className=\"w-1/2\">\n          <Input\n            label=\"Username\"\n            name=\"username\"\n            register={register}\n            options={{ value: user.username }}\n            className=\"pt-5\" />\n          <Input\n            label=\"Email\"\n            name=\"email\"\n            register={register}\n            options={{ value: user.email }}\n            className=\"pt-5\" />\n          <Input\n            type=\"file\"\n            accept=\"image/*\"\n            label=\"Avatar Image\"\n            className=\"pt-5\"\n            name=\"avatarURL\"\n            register={(): any => {}}\n            options={{ value: user.avatarURL }}\n            onChange={(e) => {\n              const file = e.currentTarget?.files?.[0];\n              if (file) dispatch(uploadUserAvatar(file));\n            }} />\n        </section>\n\n        <SaveChanges\n          setValue={setValue}\n          onSave={onSave}\n          obj={user} />\n      </form>\n\n      <Category\n      className=\"py-2 mt-5\"\n      title=\"Advanced Settings\" />\n\n      <section>\n      <div className=\"w-1/2 pb-5\">\n        <label htmlFor=\"devMode\">Dev Mode</label>\n        <Toggle\n          onChange={(e) => e.stopPropagation()}\n          onClick={() => dispatch(toggleDevMode())}\n          checked={devMode}\n          className=\"float-right\"\n          id=\"devMode\" />\n      </div>\n\n      <NormalButton\n        role=\"button\"\n        onClick={handleSubmit(onDelete)}\n        className=\"bg-danger\">Delete</NormalButton>\n      </section>\n    </div>\n  );\n}\n \nexport default UserSettingsOverview;","import { createSlice } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api } from './api';\nimport { openDialog } from './ui';\nimport { headers, token } from './utils/rest-headers';\n\nconst slice = createSlice({\n  name: 'auth',\n  initialState: {\n    attemptedLogin: false,\n    shouldVerify: false,\n  } as Store.AppState['auth'],\n  reducers: {\n    ready: (auth, { payload }: Store.Action<WS.Args.Ready>) => {\n      auth.user = payload.user;\n    },\n    updatedUser: (auth, { payload }: Store.Action<WS.Args.UserUpdate>) => {\n      Object.assign(auth.user, payload.partialUser);\n    },\n    loggedIn: (auth) => { auth.attemptedLogin = true },\n    loggedOut: (auth) => {\n      delete auth.user;\n      auth.attemptedLogin = false;\n      auth.shouldVerify = false;\n    },\n    shouldVerify: (auth) => { auth.shouldVerify = true }\n  },\n});\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const ready = () => (dispatch, getState: () => Store.AppState) => {\n  if (getState().auth.user || !token()) return;\n\n  dispatch(api.wsCallBegan({\n    event: 'READY',\n    data: { token: token() } as WS.Params.Ready,\n  }));\n}\n\n// handle side effects here\nexport const loginUser = (data: REST.To.Post['/auth/login']) => (dispatch) => {\n  dispatch(api.restCallBegan({\n    onSuccess: [],\n    method: 'post',\n    data,\n    url: `/auth/login`,\n    // TODO: replace with snackbar\n    callback: (payload) => {\n      if (payload.token) {\n        localStorage.setItem('token', payload.token);\n        dispatch(ready());\n      }\n      if (payload.message) {\n        dispatch(actions.shouldVerify());\n        dispatch(openDialog({ content: payload.message, variant: 'info' }))\n      }\n    }\n  }));\n}\n\nexport const forgotPasswordEmail = (email: string) => (dispatch) => {\n  if (!email) return;\n  \n  dispatch(api.restCallBegan({\n    callback: () => dispatch(openDialog({\n      variant: 'info',\n      content: 'Sent reset password instructions to email, if email is registered',\n    })),\n    url: `/auth/email/forgot-password?email=${email}`,\n  }));\n}\n\nexport const logoutUser = () => (dispatch) => {\n  dispatch(actions.loggedOut());\n  localStorage.removeItem('token');\n}\n\nexport const registerUser = (data: REST.To.Post['/auth/register']) => (dispatch) => {\n  dispatch(api.restCallBegan({\n    onSuccess: [actions.loggedIn.type],\n    method: 'post',\n    data,\n    url: `/auth/register`,\n    callback: (payload) => {\n      localStorage.setItem('token', payload);\n      dispatch(ready());\n    },\n  }));\n}\nexport const sendVerifyCode = (code: string) => (dispatch) => {\n  dispatch(api.restCallBegan({\n    onSuccess: [],\n    url: `/auth/verify?code=${code}`,\n    callback: ({ message, token }: REST.From.Get['/auth/verify']) => {\n      if (message) dispatch(openDialog({ content: message, variant: 'info' }));\n      if (token) {\n        localStorage.setItem('token', token);\n        dispatch(ready());\n      }\n    },\n  }))\n}\n\nexport const changePassword = (oldPassword: string, newPassword: string) => (dispatch, getState: () => Store.AppState) => {\n  const user = getState().auth.user!;\n  \n  dispatch(api.restCallBegan({\n    onSuccess: [],\n    method: 'post',\n    url: `/auth/change-password`,\n    data: { email: user.email, oldPassword, newPassword },\n    callback: ({ message, token }: REST.From.Post['/auth/change-password']) => {\n      if (message) dispatch(openDialog({ content: message, variant: 'info' }));\n      if (token) localStorage.setItem('token', token);\n    },\n  }))\n}","import { faCheckCircle, faExclamationTriangle, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changePassword } from '../../../store/auth';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport Category from '../../utils/category';\nimport Input from '../../utils/input/input';\n\nconst UserSettingsSecurity: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const passwordForm = useForm();\n  const user = useSelector((s: Store.AppState) => s.auth.user)!;\n\n  const onChangePassword = (e) => {\n    const { oldPassword, newPassword } = passwordForm.getValues();\n    const onUpdate = () => dispatch(changePassword(oldPassword, newPassword));\n    passwordForm.handleSubmit(onUpdate)(e);\n  };\n\n  return (\n    <div className=\"flex flex-col pt-14 px-10 pb-20 h-full mt-1\">\n      <header>\n        <h1 className=\"text-xl font-bold inline\">Account Security</h1>\n      </header>\n\n      <Category\n        className=\"py-2 mt-5\"\n        title=\"Change Password\" />\n\n      <section className=\"w-1/2\">\n        {!user.verified && <div className=\"secondary\">\n          <FontAwesomeIcon icon={faInfoCircle} />\n          <span className=\"ml-1\">To change your password, your email must be verified.</span>\n        </div>}\n\n        <Input\n          label=\"Old Password\"\n          name=\"oldPassword\"\n          type=\"password\"\n          register={passwordForm.register} />\n\n        <Input\n          label=\"New Password\"\n          name=\"newPassword\"\n          type=\"password\"\n          className=\"pt-5\"\n          register={passwordForm.register} />\n\n        <div className=\"flex justify-center w-full mt-4\">\n          <NormalButton\n            onClick={passwordForm.handleSubmit(onChangePassword)}\n            className=\"bg-warning\">Change</NormalButton>\n        </div>\n      </section>\n\n      <section className=\"mt-10\">\n        <Category title=\"Login Status\" className=\"pb-2\" />\n\n        {(user.verified)\n          ? <div className=\"success\">\n              <FontAwesomeIcon icon={faCheckCircle} className=\"mr-1\" />\n              <span>Your email is verified and email 2FA is enabled.</span>\n            </div>\n          : <div className=\"warning\">\n              <FontAwesomeIcon icon={faExclamationTriangle} className=\"mr-1\" />\n              <span>Your email is unverified which means email 2FA is unavailable.</span>\n            </div>}\n      </section>\n    </div>    \n  );\n}\n \nexport default UserSettingsSecurity;","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport EscButton from '../../utils/buttons/esc-button';\nimport Category from '../../utils/category';\nimport NavTabs from '../../utils/nav-tabs';\nimport Modal from '../modal';\nimport UserSettingsOverview from './user-settings-overview';\nimport UserSettingsSecurity from './user-settings-security';\n\nconst UserSettings: React.FunctionComponent = () => {\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  const [tab, setTab] = useState('overview');\n\n  return (user) ? (\n    <Modal\n      typeName={'UserSettings'}\n      size=\"full\">\n      <div className=\"grid grid-cols-12 h-full\">\n        <div className=\"col-span-4 bg-bg-secondary\">\n          <nav className=\"float-right flex-grow py-14 w-48 my-1 mr-4\">\n            <Category\n              className=\"normal px-2.5 pb-1.5\"\n              title=\"User Settings\" />\n            <NavTabs\n              tab={tab}\n              setTab={setTab}\n              tabs={[\n                { name: 'Overview', id: 'overview' },\n                { name: 'Security', id: 'security' },\n              ]} />\n            <div className=\"rounded-sm bg-bg-modifier-accent h-px w-42 my-2 mx-2.5 \" />\n\n            <Link\n              to=\"/logout\"\n              className=\"danger flex items-center rounded py-1.5 px-2.5 h-8 mb-0.5\">Logout</Link>\n          </nav>\n        </div>\n\n        <div className=\"col-span-6 h-full\">\n          {tab === 'overview' && <UserSettingsOverview />}\n          {tab === 'security' && <UserSettingsSecurity />}\n        </div>\n\n        <div className=\"col-span-2 h-full\">\n          <EscButton />\n        </div>\n      </div>\n    </Modal>\n  ) : null;\n}\n\nexport default UserSettings;","import io from 'socket.io-client';\nimport { WS } from '../types/ws';\n\nconst ws = (io as any).connect(process.env.REACT_APP_ROOT_API_URL, {\n  secure: true,\n  path: `/ws`,\n  transports: ['websocket', 'polling', 'flashsocket'],\n});\n\nws.io.on('open', () => console.log('Connected to WS Server'));\n\nexport default ws as WSClient;\n\ninterface WSClient {\n  emit: <K extends keyof WS.To>(event: K, args: WS.To[K]) => any;\n  on: <K extends keyof WS.From>(event: K | 'error' | 'disconnect', callback: (args: WS.From[K]) => any) => any;\n  off: (event: string, callback?: any) => any;\n  disconnect: () => any;\n}","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport moment from 'moment';\nimport { actions as api } from './api';\n\nconst slice = createSlice({\n  name: 'typing',\n  initialState: [] as Store.AppState['entities']['typing'],\n  reducers: {\n    userTyped: (typing, { payload }: Store.Action<{ channelId: string, userId: string }>) => {      \n      typing.push(payload);\n    },\n    userStoppedTyping: (typing, { payload }: Store.Action<{ channelId: string, userId: string }>) => {\n      const index = getIndex(typing, payload.userId, payload.channelId);\n      typing.splice(index, 1);\n    },\n  },\n});\n\nconst getIndex = (typing: any[], userId: string, channelId: string) => {\n  return typing.findIndex(t =>\n    t.channelId === channelId\n    && t.userId === userId)\n}\n\nexport const actions = slice.actions;\nexport default slice.reducer;\n\nexport const getTypersInChannel = (channelId: string) => createSelector<any, any, any>(\n  state => state.entities.typing,\n  typing => typing.filter(t => t.channelId === channelId),\n) as (channelId: string) => Store.AppState['entities']['typing'];\n\nlet lastTypedAt: Date;\n\nexport const startTyping = (channelId: string) => (dispatch, getState: () => Store.AppState) => {\n  const secsAgo = moment(new Date()).diff(lastTypedAt, 'seconds');\n  if (lastTypedAt && secsAgo < 5) return;\n\n  lastTypedAt = new Date();\n\n  dispatch(api.wsCallBegan({\n    event: 'TYPING_START',\n    data: { channelId },\n  }));\n}","import ws from './ws-service';\n\nlet timeout: NodeJS.Timeout;\nlet beforeSendMs: number;\nlet mediaStream: MediaStream;\nlet recorder: MediaRecorder;\nlet audioChunks: Blob[] = [];\nlet channelId: string;\n\n// start feedback cycle w/ server and client (EMIT voice_data via client when in vc)\n// - as soon as we are in a vc, we send updates\n// - (Client) EMIT VOICE_DATA -> (Server) EMIT VOICE_DATA\n//                    ^______________|\nexport async function startVoiceFeedback(currentChannelId: string) {\n  channelId = currentChannelId;\n  const wsPing = new Date().getTime() - beforeSendMs;\n  console.log('start feedback', wsPing);  \n\n  if (!mediaStream && !recorder)\n    await startMedia();\n  if (!recorder.onstop)\n    recorder.onstop = onStop;\n  \n  // we start recording as soon as join a vc\n  // - 100ms later, we send it to the server\n  // - server sends audio and is played on client\n  // - gap between server and client (6ms)?\n  if (recorder.state !== 'recording')\n    recorder.start();\n  // it's waits for a response which takes 100ms, creating a hole in audio\n  timeout = setTimeout(() => (recorder.state === 'recording') && recorder.stop(), 300);\n}\n\nexport const stopVoiceFeedback = () => {\n  console.log('stopping feedback');  \n\n  clearTimeout(timeout);\n  if (recorder && recorder.state === 'recording') {\n    recorder.onstop = null;\n    recorder.stop();\n  }\n}\n\nws.on('VOICE_DATA', async ({ channelId, connections }) => {\n  console.log('receive VOICE_DATA');\n  if (!channelId) return;\n  \n  // we play audio as soon as it's available\n  for (const { blob: arrayBuffer, userId } of connections) {\n    document.querySelector(`#voice${userId}`)?.remove();\n\n    const blob = new Blob([arrayBuffer], { 'type' : 'audio/ogg; codecs=opus' });\n    const audio = document.createElement('audio');\n    audio.id = `voice${userId}`;\n    audio.src = window.URL.createObjectURL(blob);\n    audio.play();\n  }\n  startVoiceFeedback(channelId);\n});\n\nasync function startMedia() {\n  mediaStream = await navigator.mediaDevices.getUserMedia({ audio: true });\n  recorder = new MediaRecorder(mediaStream);\n  recorder.onstart = () => audioChunks = [];\n  recorder.ondataavailable = (e) => audioChunks.push(e.data);\n  recorder.onstop = onStop;\n}\n\nasync function onStop() {\n  console.log('stop recording');\n  \n  beforeSendMs = new Date().getTime();\n  const blob = new Blob(audioChunks, { 'type': 'audio/ogg; codecs=opus' });\n  ws.emit('VOICE_DATA', { channelId, blob });\n  recorder.onstop = onStop;\n}","import { createSlice, createSelector } from '@reduxjs/toolkit';\nimport { WS } from '../types/ws';\nimport { actions as api, uploadFile } from './api';\nimport { unique } from './utils/filter';\nimport { headers } from './utils/rest-headers';\n\nconst slice = createSlice({\n  name: 'messages',\n  initialState: {\n    fetched: {},\n    list: [] as Entity.Message[],\n  } as Store.AppState['entities']['messages'],\n  reducers: {\n    fetched: ({ list, fetched }, { payload }: Store.Action<Entity.Message[]>) => {\n      list.push(...payload.filter(unique(list)));\n      if (payload.length)\n        fetched[payload[0].channelId] = 'testing';\n    },\n    created: ({ list }, { payload }: Store.Action<WS.Args.MessageCreate>) => {\n      list.push(payload.message);\n    },\n    deleted: ({ list }, { payload }: Store.Action<WS.Args.MessageDelete>) => {\n      const index = list.findIndex(m => m.id === payload.messageId);\n      list.splice(index, 1);\n    },\n    updated: ({ list }, { payload }: Store.Action<WS.Args.MessageUpdate>) => {\n      const message = list.find(m => m.id === payload.message.id);\n      Object.assign(message, payload.message);\n    },\n  },\n});\n\nexport const getChannelMessages = (channelId: string) =>\n  createSelector<Store.AppState, Entity.Message[], Entity.Message[]>(\n    state => state.entities.messages.list,\n    messages => messages.filter(m => m.channelId === channelId),\n  );\n\n// TODO: add lazy message loading\nexport const fetchMessages = (channelId: string) => (dispatch, getState: () => Store.AppState) => {\n  const isCached = getState().entities.messages.list.some(c => c.channelId === channelId);\n  if (isCached) return;\n\n  dispatch(api.restCallBegan({\n    onSuccess: [actions.fetched.type],\n    url: `/channels/${channelId}/messages?back=100`,\n    headers: headers(),\n  }));\n}\n\nexport const createMessage = (channelId: string, payload: Partial<Entity.Message>, attachmentURLs?: string[]) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'MESSAGE_CREATE',\n    data: { ...payload, channelId, attachmentURLs } as WS.Params.MessageCreate,\n  }));\n}\n\n// each file is uploaded individually as a separate API call\nexport const uploadFileAsMessage = (channelId: string, payload: Partial<Entity.Message>, file: File) => (dispatch) => {\n  const uploadCallback = async ({ url }: REST.From.Post['/upload']) =>\n    dispatch(createMessage(channelId, payload, [url]));\n  dispatch(uploadFile(file, uploadCallback));\n}\n\nexport const updateMessage = (id: string, payload: Partial<Entity.Message>) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'MESSAGE_UPDATE',\n    data: { messageId: id, ...payload },\n  }));\n}\n\nexport const deleteMessage = (id: string) => (dispatch) => {\n  dispatch(api.wsCallBegan({\n    event: 'MESSAGE_DELETE',\n    data: { messageId: id },\n  }));\n}\n\nexport const actions = slice.actions;\nexport default slice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\ntype PingPayload = { channelId: string, guildId: string };\ntype Pings = { [guildId: string]: string[] };\n\nconst slice = createSlice({\n  name: 'pings',\n  initialState: {} as Pings,\n  reducers: {\n    initialized: (pings, { payload }: Store.Action<Pings>) => {\n      Object.assign(pings, payload);\n    },\n    added: (pings, { payload }: Store.Action<PingPayload>) => {\n      pings[payload.guildId].push(payload.channelId);\n    },\n    channelMarkedAsRead: (pings, { payload }: Store.Action<PingPayload>) => {\n      const guildPings = pings[payload.guildId];\n      const index = guildPings.indexOf(payload.channelId);\n      guildPings.splice(index, 1);\n    },\n    guildMarkedAsRead: (pings, { payload }: Store.Action<PingPayload>) => {\n      pings[payload.guildId] = [];\n    },\n  },\n})\n\nexport const actions = slice.actions;\nexport default slice.reducer; \n\nexport const initPings = () => (dispatch, getState: () => Store.AppState) => {\n  const user = getState().auth.user!;\n  const channels = getState().entities.channels;\n  const pings: Pings = {};\n\n  for (const channel of channels) {\n    const lastReadId = user.lastReadMessageIds[channel.id];\n    if (true || lastReadId === channel.lastMessageId) {\n      pings[channel.id] = pings[channel.id] ?? [];\n      pings[channel.id].push(channel.id);\n    }\n  }\n  dispatch(actions.initialized(pings));\n}\n\nexport const addPing = (channelId: string) => (dispatch, getState: () => Store.AppState) => {\n  const guildId = getState().entities.channels\n    .find(c => c.id === channelId)!.guildId;\n  dispatch(actions.added({ channelId, guildId }));\n}","import { useDispatch, useSelector, useStore } from 'react-redux';\nimport ws from '../services/ws-service';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { actions as users, getUser } from '../store/users';\nimport { actions as meta } from '../store/meta';\nimport { actions as uiActions, Dialog } from '../store/ui';\nimport { actions as invites } from '../store/invites';\nimport { actions as members, getSelfMember } from '../store/members';\nimport { actions as roles } from '../store/roles';\nimport { actions as typing } from '../store/typing';\nimport { actions as guilds } from '../store/guilds';\nimport { actions as messages } from '../store/messages';\nimport { actions as channels } from '../store/channels';\nimport { actions as auth, logoutUser } from '../store/auth';\nimport { actions as pings, addPing } from '../store/pings';\nimport { useSnackbar } from 'notistack';\nimport events from '../services/event-service';\nimport { startVoiceFeedback, stopVoiceFeedback } from '../services/voice-service';\n\nconst WSListener: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const store = useStore();\n  const hasListened = useSelector((s: Store.AppState) => s.meta.hasListenedToWS);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const state = () => store.getState() as Store.AppState;\n\n  // TODO: make alphabetical order\n  useEffect(() => {\n    if (hasListened) return;    \n\n    const handleDialog = (dialog: Dialog) =>    \n      enqueueSnackbar(`${dialog.content}.`, {\n        anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n        variant: dialog.variant,\n        autoHideDuration: 5000,\n      });\n    \n    ws.on('error', (error: any) => handleDialog({\n      variant: 'error',\n      content: error.data?.message ?? error.message,\n    }));\n    events.on('dialog', handleDialog);\n\n    // add channel to guilds.channels\n    ws.on('CHANNEL_CREATE', (args) => {\n      // if we created it, we want to navigate there\n      // we'd expect the user to exist, as they should be logged in to receive ws events\n      const { auth, ui } = state();      \n      const selfCreated = args.creatorId === auth.user!.id;\n      \n      // we cannot go to the channel if not in store \n      dispatch(channels.created(args));\n\n      if (selfCreated && ui.activeGuild) {\n        dispatch(uiActions.closedModal());\n        if (args.channel.type === 'VOICE') return;\n\n        history.push(`/channels/${ui.activeGuild.id}/${args.channel.id}`);\n      }\n    });\n    ws.on('CHANNEL_DELETE', (args) => {\n      // if in channel, go away from it\n      const { ui } = state();\n      const inChannel = args.channelId === ui.activeChannel?.id;\n\n      if (inChannel && ui.activeGuild)\n        history.push(`/channels/${ui.activeGuild.id}`);\n\n      dispatch(channels.deleted(args));\n    });\n    ws.on('CHANNEL_UPDATE', (args) => dispatch(channels.updated(args)));\n    ws.on('GUILD_CREATE', (args) => {\n      dispatch(users.fetched(args.users)); // this before members\n      dispatch(channels.fetched(args.channels));\n      dispatch(members.fetched(args.members));\n      dispatch(roles.fetched(args.roles)); // this after members\n      dispatch(guilds.created(args));\n      dispatch(uiActions.closedModal());\n      history.push(`/channels/${args.guild.id}`);\n    });\n    ws.on('GUILD_DELETE', (args) => {\n      const { ui } = state();\n      const guildIsActive = args.guildId === ui.activeGuild?.id;\n      if (guildIsActive) {\n        dispatch(uiActions.closedModal());\n        history.push('/channels/@me');\n      }\n      dispatch(guilds.deleted(args));\n      // clean up leaving guild mess\n      const memberId = getSelfMember(args.guildId)(state())!.id;\n      dispatch(members.removed({ memberId }));\n    });\n    // listen to passive events (not received by api middleware)\n    ws.on('GUILD_MEMBER_ADD', (args) => {\n      // we not getting other users when joining guild\n      dispatch(users.fetched([args.user]));\n      dispatch(members.added(args));      \n    });\n    ws.on('GUILD_MEMBER_UPDATE', (args) => dispatch(members.updated(args)));\n    // user may be in mutual guilds, and therefore not removed from global user cache\n    ws.on('GUILD_MEMBER_REMOVE', (args) => dispatch(members.removed(args)));\n    ws.on('GUILD_ROLE_CREATE', (args) => dispatch(roles.created(args)));\n    ws.on('GUILD_ROLE_DELETE', (args) => dispatch(roles.deleted(args)));\n    ws.on('GUILD_ROLE_UPDATE', (args) => dispatch(roles.updated(args)));\n    ws.on('GUILD_UPDATE', (args) => dispatch(guilds.updated(args)));\n    ws.on('INVITE_CREATE', (args) => {\n      dispatch(invites.created(args));\n      dispatch(uiActions.focusedInvite(args.invite));\n    });\n    ws.on('MESSAGE_CREATE', (args) => {\n      const selfUser = state().auth.user!;\n      const isBlocked = selfUser.ignored?.userIds.includes(args.message.authorId);\n      if (isBlocked) return;\n\n      dispatch(messages.created(args));\n      \n      const { channelId } = args.message;\n      const { activeChannel } = state().ui;\n      if (activeChannel && activeChannel.id !== channelId)\n        addPing(channelId);\n    });\n    ws.on('MESSAGE_DELETE', (args) => dispatch(messages.deleted(args)));\n    ws.on('MESSAGE_UPDATE', (args) => dispatch(messages.updated(args)));\n    ws.on('PRESENCE_UPDATE', ({ userId, status }) =>\n      dispatch(users.updated({ userId, partialUser: { status } })));\n    ws.on('READY', (args) => {\n      dispatch(auth.ready(args));\n      dispatch(users.fetched([args.user]));\n    });\n    ws.on('TYPING_START', (args) => {\n      dispatch(typing.userTyped(args));\n\n      const timeoutMs = 5000;\n      setTimeout(() => dispatch(typing.userStoppedTyping(args)), timeoutMs);\n    });\n    ws.on('USER_DELETE', () => {\n      ws.disconnect();\n      history.push('/');\n      dispatch(logoutUser());\n    });\n    ws.on('USER_UPDATE', (args) => {      \n      dispatch(auth.updatedUser(args));\n      dispatch(users.updated(args));\n    });\n    ws.on('VOICE_STATE_UPDATE', async ({ userId, voice }) => {\n      const data = { userId, partialUser: { voice } };\n      const selfUser = state().auth.user!;\n      if (selfUser.id === userId)\n        dispatch(auth.updatedUser(data));\n      dispatch(users.updated(data));\n\n      (voice.channelId)\n        // if in channel\n        ? await startVoiceFeedback(voice.channelId)\n        : stopVoiceFeedback();\n    });\n\n    dispatch(meta.listenedToWS());\n  }, [hasListened]);\n  \n  return null;\n}\n \nexport default WSListener;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions as ui } from '../../store/ui';\nimport ChannelSettings from '../modals/channel-settings/channel-settings';\nimport CreateChannel from '../modals/create-channel';\nimport CreateGuild from '../modals/create-guild';\nimport CreateInvite from '../modals/create-invite';\nimport GuildSettings from '../modals/guild-settings/guild-settings';\nimport ImagePreview from '../modals/image-preview';\nimport UserProfile from '../modals/user-profile';\nimport UserSettings from '../modals/user-settings/user-settings';\nimport { filterProps } from '../utils/react/react-shush-error';\nimport WSListener from '../ws-listener';\n\nexport type PageWrapperProps = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement> & { pageTitle?: string; };\n\n// all separate pages should be wrapped by this\nconst PageWrapper: React.FunctionComponent<PageWrapperProps> = (props) => {\n  const dispatch = useDispatch();\n  const dropdown = useSelector((s: Store.AppState) => s.ui.openDropdown);\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n  \n  useEffect(() => {\n    document.title = props.pageTitle ?? 'accord.app';\n  }, []);\n\n  const onClick = () => dropdown && dispatch(ui.toggleDropdown({}));\n\n  if (!devMode) {\n    console.log(`%cAttention!`, `color: red; font-size: 32px; font-weight: 900;`);\n    console.log(\n      `%cIf someone told you to paste something in this console, it's probably against the TOS and could steal your account.`,\n      `color: darkred; font-size: 16px; font-weight: 700;`\n    );\n  }\n\n  return (\n    <div onClick={onClick}\n      {...filterProps(props)}>\n      {props.children}\n      <WSListener />\n      {/* modals */}\n      <CreateChannel />\n      <CreateGuild />\n      <CreateInvite />\n      <ChannelSettings />\n      <GuildSettings />\n      <ImagePreview />\n      <UserSettings />\n      <UserProfile />\n    </div>\n  );\n}\n \nexport default PageWrapper;","export default __webpack_public_path__ + \"static/media/chat.304c50bf.svg\";","export default __webpack_public_path__ + \"static/media/devices.99f78ca4.svg\";","export default __webpack_public_path__ + \"static/media/friends.547620e1.svg\";","export default __webpack_public_path__ + \"static/media/secure.7370ac46.svg\";","import './home-page.scoped.css';\n\nimport { Link } from 'react-router-dom';\nimport Navbar from '../navigation/navbar';\nimport PageWrapper from './page-wrapper';\nimport NormalButton from '../utils/buttons/normal-button';\nimport Chat from '../../assets/home/chat.svg';\nimport Devices from '../../assets/home/devices.svg';\nimport Friends from '../../assets/home/friends.svg';\nimport Secure from '../../assets/home/secure.svg';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { countUsers } from '../../store/users';\nimport NumberFormat from 'react-number-format';\n\nconst HomePage: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const userCount = useSelector((s: Store.AppState) => s.meta.userCount);\n  \n  useEffect(() => { dispatch(countUsers()) }, []);\n\n  const ImageCard = (props: { title: string, src: any }) => (\n    <div>\n      <h3 className=\"text-center text-1xl font-black font mb-4\">{props.title}</h3>\n      <img className=\"w-44 inline\" src={props.src} alt=\"Chat\" />\n    </div>\n  );\n\n  let keys: string[] = [];\n  document.addEventListener('keyup', (e) => {\n    keys.push(e.key);\n    if (!keys.join('').endsWith('testing123')) return;\n\n    try {\n      document.querySelector('h1')!.textContent = 'Easteregg++';\n      document.querySelector('.lead')!.textContent = 'Are you happy now?';\n    } catch {}\n  });\n\n  return (\n    <PageWrapper\n      className=\"z-10 bg-bg-tertiary h-full relative\"\n      pageTitle=\"accord.app | Like Discord but Cooler\">\n      <Navbar />\n      <section className=\"z-10 text-center my-4\">\n        <h1>It's time to ditch Discord and Zoom.</h1>\n        <div className=\"flex justify-center\">\n          <div className=\"lead font-light mt-2 max-w-xl\">\n            All-in-one text and voice chat, just like Discord.\n            Stop paying for Discord boosts and hassling with Zoom. \n            {Boolean(userCount) && (\n              <span className=\"pl-1\">\n                Join <NumberFormat\n                value={userCount}\n                displayType={'text'}\n                thousandSeparator={true}/> Accord users that simplified their life.\n              </span>\n            )}\n          </div>\n        </div>\n        <button className=\"font-primary shadow-md bg-green text-dark\">\n          <Link to=\"/login\" >\n            <NormalButton className=\"bg-white text-black rounded w-56 h-11 px-6 mt-8\">Login</NormalButton>\n          </Link>\n        </button>\n        <button className=\"shadow-md bg-green text-dark ml-10\">\n          <Link to=\"/channels/@me\">\n            <NormalButton className=\"text-black bg-success rounded W-56 h-11 px-6 mt-8\">Open Accord in Your Browser</NormalButton>\n          </Link>\n        </button>\n      </section>\n\n      <section\n        title=\"*Description may represent unreleased features.*\"\n        className=\"absolute top-50 w-1/2 inset-x-1/4 flex justify-between\">\n        <ImageCard src={Chat} title=\"Chat w/ Friends\" />\n        <ImageCard src={Devices} title=\"On Mobile or Desktop\" />\n        <ImageCard src={Friends} title=\"Join and Manage Guilds\" />\n        <ImageCard src={Secure} title=\"Super Secure\" />\n      </section>\n    </PageWrapper>\n  );\n}\n\nexport default HomePage;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHashtag, faUserFriends } from '@fortawesome/free-solid-svg-icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleMemberList } from '../../store/config';\nimport classNames from 'classnames';\n \nconst AppNavbar: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel);\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild);\n  const memberListToggled = useSelector((s: Store.AppState) => s.config.memberListToggled);\n\n  return (\n    <div className=\"shadow-elevation flex items-center h-12 px-5\">\n      {channel && <FontAwesomeIcon\n        icon={faHashtag}\n        className=\"scale-150 mr-2\" />}\n      <h3 className=\"flex-grow ml-1\">\n        <span className=\"font-bold\">{channel?.name}</span>\n        <span className=\"muted ml-3\">{channel?.summary}</span>\n      </h3>\n      {guild && (\n        <FontAwesomeIcon\n          onClick={() => dispatch(toggleMemberList())}\n          icon={faUserFriends}\n          className={classNames(`cursor-pointer`, {\n            'heading': memberListToggled,\n            'muted': !memberListToggled,\n          })} />)}\n    </div>\n  );\n}\n \nexport default AppNavbar;","import Username from '../../user/username';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog, faPhoneSlash, faSignal } from '@fortawesome/free-solid-svg-icons';\nimport { actions as ui } from '../../../store/ui';\nimport { getChannel, leaveVoiceChannel } from '../../../store/channels';\nimport { getGuild } from '../../../store/guilds';\nimport classNames from 'classnames';\nimport { useEffect } from 'react';\n \nconst SidebarFooter: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((s: Store.AppState) => s.auth.user)!;\n\n  const VoiceFooter = () => {\n    const channelId = user.voice?.channelId;\n    const channel = useSelector(getChannel(channelId ?? ''));\n    const guild = useSelector(getGuild(channel?.guildId ?? ''));\n    const ping = useSelector((s: Store.AppState) => s.meta.ping);\n\n    if (!channel || !guild) return null;\n    \n    return (\n      <>\n        <div className=\"justify-between flex items-center p-3 pr-4\">\n          <div title={ping ? `Ping ${ping}ms` : 'Pinging server...'}>\n            <FontAwesomeIcon\n              icon={faSignal}\n              className={classNames({\n                'success': ping && ping < 100,\n                'secondary': ping && ping >= 100 && ping < 200,\n                'warning': ping && ping >= 200 && ping < 300,\n                'danger': ping && ping >= 300,\n                'muted': !ping,\n              })} />\n            <strong className=\"success ml-2\">Voice Connected</strong>\n            <div className=\"normal\">{channel.name} / {guild.name}</div>\n          </div>\n          <FontAwesomeIcon\n            onClick={() => dispatch(leaveVoiceChannel())}\n            className=\"float-right cursor-pointer\"\n            icon={faPhoneSlash} />\n        </div>\n        <hr className=\"border-bg-primary\" />\n      </>\n    );\n  }\n  \n  return (\n    <div className=\"bg-bg-secondary-alt\">\n      <VoiceFooter />\n      <div className=\"relative flex items-center py-2\">\n        <div className=\"select-all\">\n          <Username user={user} />\n        </div>\n        <FontAwesomeIcon\n          onClick={() => dispatch(ui.openedModal('UserSettings'))}\n          className=\"float-right cursor-pointer absolute right-4\"\n          icon={faCog} />\n      </div>\n    </div>\n  );\n}\n \nexport default SidebarFooter;","import { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useSelector } from 'react-redux';\n\nexport interface DropdownProps {\n  title: string;\n  type: React.FunctionComponent;\n}\n\nconst Dropdown: React.FunctionComponent<DropdownProps> = (props) => {\n  const dropdown = useSelector((s: Store.AppState) => s.ui.openDropdown);\n\n  return (\n    <div className=\"w-full pt-3\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"flex-grow font-bold pl-2\">{props.title}</h1>\n        <FontAwesomeIcon icon={faChevronDown} />\n      </div>\n      {\n        (dropdown === props.type.name) && \n        <div className=\"absolute bg-bg-floating rounded w-56 p-2 mt-5\">\n          {props.children}\n        </div>\n      }\n    </div>\n  );\n}\n \nexport default Dropdown;","import { faUserPlus, faPlusCircle, faCog } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useDispatch, useSelector } from 'react-redux';\nimport usePerms from '../../hooks/use-perms';\nimport { actions as ui } from '../../store/ui';\nimport CreateChannel from '../modals/create-channel';\nimport CreateInvite from '../modals/create-invite';\nimport GuildSettings from '../modals/guild-settings/guild-settings';\nimport Dropdown from '../utils/dropdown';\n\nconst GuildDropdown: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const perms = usePerms();\n\n  if (!guild) return null;\n\n  return (\n    <Dropdown\n      title={guild.name}\n      type={GuildDropdown}>\n      {perms.can('CREATE_INVITE', guild.id) && (\n        <a className=\"rounded-sm flex items-center justify-between text-sm p-2 h-8 mb-1\"\n          onClick={() => dispatch(ui.openedModal('CreateInvite'))}>\n          <span className=\"primary\">Invite people</span>\n          <FontAwesomeIcon\n            className=\"float-right w-1\"\n            icon={faUserPlus} />\n        </a>\n      )}\n      {perms.can('MANAGE_CHANNELS', guild.id) && (\n        <a className=\"rounded-sm flex items-center justify-between p-2 h-8 text-sm mb-1\"\n          onClick={() => dispatch(ui.openedModal('CreateChannel'))}>\n          <span className=\"font\">Create channel</span>\n          <FontAwesomeIcon\n            className=\"float-right w-1\"\n            icon={faPlusCircle} />\n        </a>\n      )}\n      {(perms.can('MANAGE_GUILD', guild.id)\n        || perms.can('MANAGE_ROLES', guild.id)\n        || perms.can('MANAGE_INVITES', guild.id)) && (\n        <a onClick={() => dispatch(ui.openedModal('GuildSettings'))}\n          className=\"rounded-sm flex items-center justify-between p-2 h-8 text-sm\">\n          <span className=\"font\">Guild settings</span>\n          <FontAwesomeIcon\n            className=\"float-right w-1\"\n            icon={faCog} />\n        </a>\n      )}\n    </Dropdown>\n  );\n}\n\nexport default GuildDropdown;","import { faCross, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport usePerms from '../../hooks/use-perms';\nimport { deleteChannel } from '../../store/channels';\nimport DevModeMenuSection from './dev-mode-menu-section';\n\nexport interface ChannelMenusProps {\n  channel: Entity.Channel;\n}\n \nconst ChannelMenu: React.FunctionComponent<ChannelMenusProps> = ({ channel }) => {\n  const dispatch = useDispatch();\n  const { guildId }: any = useParams();\n  const perms = usePerms();\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  return (guildId) ? (\n    <ContextMenu\n      key={channel.id}\n      id={channel.id}\n      className=\"bg-bg-tertiary rounded shadow w-52 p-2\">\n      {perms.can('MANAGE_CHANNELS', guildId) && (\n        <MenuItem\n          className=\"danger cursor-pointer\"\n          onClick={() => dispatch(deleteChannel(channel.id))}>\n          <span>Delete channel</span>\n          <FontAwesomeIcon icon={faTimes} className=\"float-right\" />\n        </MenuItem>\n      )}\n      {devMode && <DevModeMenuSection ids={[\n        { title: 'Channel ID', id: channel.id },\n      ]} />}\n    </ContextMenu>\n  ) : null;\n}\n \nexport default ChannelMenu;","import { faHashtag, faVolumeUp, faCog } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport usePerms from '../../../hooks/use-perms';\nimport { getChannelUsers, joinVoiceChannel } from '../../../store/channels';\nimport { getGuild, getGuildChannels } from '../../../store/guilds';\nimport { actions as ui } from '../../../store/ui';\nimport ChannelMenu from '../../ctx-menus/channel-menu';\nimport Username from '../../user/username';\n\nimport './channel-tabs.scoped.css';\n\nconst ChannelTabs: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { activeGuild, activeChannel } = useSelector((s: Store.AppState) => s.ui);\n  const guildChannels = useSelector(getGuildChannels(activeGuild?.id));\n  const perms = usePerms();\n\n  if (!activeGuild || !perms.can('VIEW_CHANNELS', activeGuild.id)) return null;\n\n  const ChannelTab = ({ channel }: { channel: Entity.Channel }) => {\n    const link = (channel.type === 'VOICE')\n      ? '#'\n      : `/channels/${activeGuild!.id}/${channel.id}`;\n    const icon = { 'TEXT': faHashtag, 'VOICE': faVolumeUp }[channel.type];\n\n    const onClick = () => {\n      if (channel.type !== 'VOICE') return;\n      \n      dispatch(joinVoiceChannel(channel.id));\n    };\n\n    const VCMembers = () => {\n      const users = useSelector(getChannelUsers(channel.id));\n\n      if (channel.type !== 'VOICE' || !users.length) return null;\n\n      return <div className=\"p-2 pl-3\">{users.map(u =>\n        <ContextMenuTrigger key={u.id} id={u.id}>\n          <div className=\"mb-1\">\n            <Username user={u} size=\"sm\" guild={activeGuild} />\n          </div>\n        </ContextMenuTrigger>\n      )}</div>;\n    };\n\n    return (\n      <>\n        <ContextMenuTrigger key={channel.id} id={channel.id}>\n          <Link\n            onClick={onClick}\n            to={link}\n            className={classNames(\n              `cursor-pointer flex items-center rounded h-8 p-2 pl-3`,\n              { active: channel.id === activeChannel?.id },\n            )}>\n            <FontAwesomeIcon\n              className={classNames(\n                `float-left scale-150 muted fill-current`,\n                (channel.type === 'VOICE') ? 'mr-2' : 'mr-3',\n              )}\n              icon={icon} />\n            <span className=\"tab flex-grow flex justify-between\">\n              <span>{channel.name}</span>\n              <span\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  \n                  dispatch(ui.pageSwitched({ channel, guild: activeGuild }));\n                  dispatch(ui.openedModal('ChannelSettings'));\n                }}\n                className=\"cursor-pointer opacity-100\">\n                {perms.can('MANAGE_CHANNELS', activeGuild.id)\n                  && <FontAwesomeIcon className=\"settings\" icon={faCog} />}\n              </span>\n            </span>\n            <ChannelMenu channel={channel} />\n          </Link>\n        </ContextMenuTrigger>\n        <VCMembers />\n      </>\n    );\n  }\n\n  return <>{guildChannels.map(c => <ChannelTab key={c.id} channel={c} />)}</>\n};\nexport default ChannelTabs;","import SidebarFooter from './sidebar-footer';\nimport { useDispatch } from 'react-redux';\nimport { actions as ui } from '../../../store/ui';\nimport GuildDropdown from '../../dropdowns/guild-dropdown';\nimport ChannelTabs from './channel-tabs';\n\nconst SidebarContent: React.FunctionComponent = () => {  \n  const dispatch = useDispatch();\n  return (\n    <div className=\"flex flex-col bg-bg-secondary w-60\">\n      <div\n        className=\"items-center shadow-elevation cursor-pointer h-12 pl-2.5 pr-4\"\n        onClick={() => dispatch(ui.toggleDropdown(GuildDropdown))}>\n        <GuildDropdown />\n      </div>\n      <nav className=\"flex-grow px-2 pt-4\">\n        <ChannelTabs />\n      </nav>\n      <SidebarFooter />\n    </div>\n  );\n}\n \nexport default SidebarContent;","import { faDoorOpen } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { leaveGuild } from '../../store/members';\nimport DevModeMenuSection from './dev-mode-menu-section';\n\nexport interface GuildMenuProps {\n  guild: Entity.Guild;\n}\n\nconst GuildMenu: React.FunctionComponent<GuildMenuProps> = ({ guild }) => {\n  const dispatch = useDispatch();\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  return (\n    <ContextMenu\n      key={guild.id}\n      id={guild.id}\n      className=\"bg-bg-tertiary rounded shadow w-48 p-2\">\n      <MenuItem\n        className=\"flex items-center justify-between danger cursor-pointer\"\n        onClick={() => dispatch(leaveGuild(guild.id))}>\n        <span>Leave Guild</span>\n        <FontAwesomeIcon icon={faDoorOpen} />\n      </MenuItem>\n      {devMode && <DevModeMenuSection ids={[\n        { title: 'Guild ID', id: guild.id },\n      ]} />}\n    </ContextMenu>\n  );\n}\n \nexport default GuildMenu;","import { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { actions as ui } from '../../../store/ui';\nimport CreateGuild from '../../modals/create-guild';\nimport SidebarIcon from './sidebar-icon';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport GuildMenu from '../../ctx-menus/guild-menu';\n \nconst SidebarIcons: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((s: Store.AppState) => s.auth.user)!;  \n  const guilds = useSelector((s: Store.AppState) => s.entities.guilds)!;\n\n  const guildIcons = guilds.map(g => (\n    <ContextMenuTrigger key={g.id} id={g.id}>\n      <Link to={`/channels/${g.id}`}>\n        <SidebarIcon\n          to={`/channels/${g.id}`}\n          imageURL={g.iconURL}\n          name={g.name} />\n      </Link>\n\n      <GuildMenu guild={g} />\n    </ContextMenuTrigger>\n  ));\n\n  const PlusIcon = () => (\n    <div\n      onClick={() => dispatch(ui.openedModal('CreateGuild'))}\n      className=\"success text-3xl\">\n      <SidebarIcon\n        name=\"+\"\n        classes=\"success\" />\n    </div>\n  );\n  \n  return (\n    <div className=\"overflow-auto min-h-screen float-left p-3 flex flex-col bg-bg-tertiary\">\n      <Link to=\"/channels/@me\">\n        <SidebarIcon\n          to=\"/channels/@me\"\n          imageURL={user.avatarURL}\n          name={user.username} />\n      </Link>\n      <div className=\"flex justify-center mb-1\">\n        <div className=\"h-0.5 w-8 rounded-sm bg-bg-modifier-accent mb-1\" />\n      </div>\n      {guildIcons}\n      <PlusIcon />\n    </div>\n  );\n}\n \nexport default SidebarIcons;","import SidebarContent from './sidebar-content';\nimport SidebarIcons from './sidebar-icons';\n \nconst Sidebar: React.FunctionComponent = (props) => {\n  \n  return (\n    <div className=\"sidebar flex float-left\">\n      <SidebarIcons />\n      <SidebarContent />\n    </div>\n  );\n}\n \nexport default Sidebar;\n","import { faPencilAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useDispatch, useSelector } from 'react-redux';\nimport usePerms from '../../../hooks/use-perms';\nimport { deleteMessage } from '../../../store/messages';\nimport { actions as ui } from '../../../store/ui';\n\nexport interface MessageToolbarProps {\n  message: Entity.Message;\n}\n \nconst MessageToolbar: React.FunctionComponent<MessageToolbarProps> = ({ message }) => {\n  const dispatch = useDispatch();\n  const selfUser = useSelector((s: Store.AppState) => s.auth.user)!;\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const openModal = useSelector((s: Store.AppState) => s.ui.openModal);\n  const perms = usePerms();\n\n  const isAuthor = message.authorId === selfUser.id;\n  const canManage = perms.canInChannel('MANAGE_MESSAGES', guild.id, message.channelId)\n    || guild?.ownerId === selfUser.id\n    || isAuthor;\n  \n  return (!openModal) ? (\n    <div className=\"float-right shadow bg-bg-secondary px-2 rounded cursor-pointer\">\n      {isAuthor && (\n        <div className=\"inline\">\n          <FontAwesomeIcon\n            onClick={() => dispatch(ui.startedEditingMessage(message.id))}\n            className=\"mr-2\"\n            icon={faPencilAlt} />\n        </div>\n      )}\n      {canManage && (\n        <div className=\"inline\">\n          <FontAwesomeIcon\n          onClick={() => dispatch(deleteMessage(message.id))}\n          className=\"danger\"\n          icon={faTimes} />\n        </div>\n      )}\n    </div>\n  ) : null;\n}\n \nexport default MessageToolbar;","import { ContextMenu } from 'react-contextmenu';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport DevModeMenuSection from './dev-mode-menu-section';\n\nexport interface MessageMenuProps {\n  message: Entity.Message;\n}\n \nconst MessageMenu: React.FunctionComponent<MessageMenuProps> = ({ message }) => {\n  const { guildId }: any = useParams();\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  return (guildId) ? (\n    <ContextMenu\n      key={message.id}\n      id={message.id}\n      className=\"bg-bg-tertiary rounded shadow w-48 p-2\">\n      <div className=\"overflow-hidden\">\n        <span className=\"bg-bg-primary p-1 rounded max-w-full\">{message.content}</span>\n      </div>\n      {devMode && <DevModeMenuSection ids={[\n        { title: 'Message ID', id: message.id },\n      ]} />}\n    </ContextMenu>\n  ) : null;\n}\n \nexport default MessageMenu;","import { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport usePerms from '../../hooks/use-perms';\nimport { createMessage, updateMessage, uploadFileAsMessage } from '../../store/messages';\nimport { getTypersInChannel, startTyping } from '../../store/typing';\nimport { actions as ui } from '../../store/ui';\nimport { getUser } from '../../store/users';\n\nexport interface MessageBoxProps {\n  content?: string;\n  editingMessageId?: string;\n  cachedContent?: Util.Dictionary;\n  setCachedContent?: React.Dispatch<React.SetStateAction<Util.Dictionary>>;\n}\n \nconst MessageBox: React.FunctionComponent<MessageBoxProps> = (props) => {\n  const store = useStore();\n  const dispatch = useDispatch();\n  const [content, setContent] = useState(props.content ?? '');\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const typers = useSelector(getTypersInChannel(channel.id));\n  const perms = usePerms();\n\n  useEffect(() => {\n    const messageBox = document.querySelector('#messageBox') as HTMLTextAreaElement;\n    messageBox.value = props.cachedContent?.[channel.id] ?? content;\n  }, [channel.id]);\n\n  useEffect(() => {\n    if (props.cachedContent && props.setCachedContent) {\n      props.cachedContent[channel.id] = content;\n      props.setCachedContent(props.cachedContent);\n    }\n  }, [content]);\n  \n  const onKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    handleEscape(event);\n    dispatch(startTyping(channel.id));\n    \n    if (event.key === 'Enter' && !event.shiftKey)\n      event.preventDefault();\n\n    const emptyMessage = content.replaceAll('\\n', '');\n    if (event.key !== 'Enter'\n      || event.shiftKey\n      || !emptyMessage) return;\n    \n    saveEdit();\n  }\n\n  const esc = () => dispatch(ui.stoppedEditingMessage());\n  const saveEdit = () => {\n    (props.editingMessageId)\n      ? dispatch(updateMessage(props.editingMessageId, { content }))\n      : dispatch(createMessage(channel.id, { content }));\n      \n    setContent('');\n    esc();\n  }\n  const handleEscape = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.key !== 'Escape') return;\n    if (props.editingMessageId) esc();\n  }\n\n  const typingMessage = () => {\n    if (!typers.length) return;\n    \n    const user = (userId: string) => getUser(userId)(store.getState());\n  \n    const maxTypers = 3;\n    const typingUsers = typers.map(t => user(t.userId)!.username).join(', ');\n    return (typers.length > maxTypers)\n      ? 'Many users are typing...'\n      : `${typingUsers} is typing...`;\n  }\n\n  const canSend = perms.canInChannel('SEND_MESSAGES', guild.id, channel.id);\n  const getPlaceholder = (): string | undefined => {\n    if (!canSend) return `Insufficient perms.`;\n    if (!props.editingMessageId) return `Message #${channel.name}`;\n  }\n\n  // TODO: refactor\n  const MessageBoxLeftSide = () => {\n    const uploadInput = React.createRef<HTMLInputElement>();\n    const onChange: any = (e: Event) => {\n      const input = e.target as HTMLInputElement;   \n      dispatch(uploadFileAsMessage(channel.id, { content }, input.files![0]));    \n    }\n\n    return (!props.editingMessageId) ? (\n      <div className=\"px-4\">\n        <div className=\"relative\">\n          {/* TODO: add multiple file support */}\n          <input\n            ref={uploadInput}\n            type=\"file\"\n            name=\"file\"\n            accept=\"image/*\"\n            onChange={onChange}\n            hidden />\n          <FontAwesomeIcon\n            icon={faUpload}\n            onClick={() => uploadInput.current?.click()}\n            className=\"cursor-pointer z-1\" />\n        </div>\n      </div>\n    ) : null;\n  } \n  \n  return (\n    <div className={`${props.editingMessageId ? 'mt-2' : 'px-4'}`}>\n      <div className=\"rounded-lg bg-bg-secondary flex items-center\">\n        <MessageBoxLeftSide />\n        <TextareaAutosize\n          id=\"messageBox\"\n          onChange={e => setContent(e.target.value)}\n          onKeyDown={onKeyDown}\n          value={content}\n          rows={1}\n          className={classNames(\n            'resize-none normal rounded-lg appearance-none leading-tight',\n            'focus:outline-none w-full right-5 left-5 max-h-96 py-3 px-4',\n            { 'cursor-not-allowed': !canSend },\n          )}\n          placeholder={getPlaceholder()}\n          disabled={!canSend}\n          autoFocus />\n      </div>\n      {(props.editingMessageId)\n        ? <span className=\"text-xs py-2\">\n            escape to <Link to=\"#\" onClick={esc}>cancel</Link> • \n            enter to <Link to=\"#\" onClick={saveEdit}> save</Link>\n          </span>\n        : <div className=\"text-sm w-full h-6\">{typingMessage()}</div>}\n    </div>\n  );\n}\n \nexport default MessageBox;\n","export default {\n  email: /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/,\n  hexColor: /^#(?:[0-9a-fA-F]{3}){1,2}$/,\n  password: /(?=.*[a-zA-Z0-9!@#$%^&*])/,\n  snowflake: /^\\d{18}$/,\n  status: /^ONLINE|^BUSY$|^AFK$|^OFFLINE$/,\n  textChannelName: /^[A-Za-z\\-\\d]{2,32}$/,\n  username: /(^(?! |^everyone$|^here$|^me$|^someone$)[A-Za-z\\d\\-\\_ ]{2,32}(?<! )$)/,\n  roleName: /(^(?! |^everyone$|^here$|^me$|^someone$)(.*){2,32}(?<! )$)/,\n  url: /(https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*))/gm,\n}","import MessageBox from '../message-box';\nimport defaultPatterns from '../../../types/patterns';\nimport { FunctionComponent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport striptags from 'striptags';\nimport { previewImage } from '../../../store/ui';\n\ninterface MessageContentProps {\n  message: Entity.Message;\n}\n\nconst MessageContent: FunctionComponent<MessageContentProps> = ({ message }) => {\n  const dispatch = useDispatch();\n  const editingMessageId = useSelector((s: Store.AppState) => s.ui.editingMessageId);\n\n  const patterns = {\n    boldItalic: /\\*\\*\\*(.*?)\\*\\*\\*/gs,\n    bold: /\\*\\*(.*?)\\*\\*/gs,\n    italic: /\\*(.*?)\\*|_(.*?)_/gs,\n    underline: /__(.*?)__/gs,\n    underlineItalics: /__\\*(.*?)\\*__/gs,\n    underlineBold: /__\\*\\*(.*?)\\*\\*__/gs,\n    underlineBoldItalics: /__\\*\\*\\*(.*?)\\*\\*\\*__/gs,\n    strikethrough: /~~(.*?)~~/gs,\n    codeMultiline: /```(.*?)```/gs,\n    codeLine: /`(.*?)`/gs,\n    blockQuoteMultiline: />>> (.*)/gs,\n    blockQuoteLine: /^> (.*)$/gm,\n    url: /(https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*))/gm,\n  }\n\n  const format = (content: string) => content\n    .replace(patterns.boldItalic, '<strong><em>$1</em></strong>')\n    .replace(patterns.bold, '<strong>$1</strong>')\n    .replace(patterns.italic, '<em>$1$2</em>')\n    .replace(patterns.underline, '<u>$1</u>')\n    .replace(patterns.underlineItalics, '<u><em>$1</em></u>')\n    .replace(patterns.underlineBold, '<u><strong>$1</strong></u>')\n    .replace(patterns.underlineBoldItalics, '<u><strong><em>$1</strong></em></u>')\n    .replace(patterns.strikethrough, '<del>$1</del>')\n    // FIXME: don't add message formatting in a code block\n    .replace(patterns.codeMultiline, '<pre><code class=\"facade\">$1</code></pre>')\n    .replace(patterns.codeLine, '<code class=\"facade\">$1</code>')\n    .replace(patterns.blockQuoteLine, '<span class=\"blockquote pl-1\">$1</span>')\n    .replace(patterns.blockQuoteMultiline, '<div class=\"blockquote pl-1\">$1</div>')\n    .replace(defaultPatterns.url, '<a href=\"$1\" target=\"_blank\">$1</div>');\n\n  const messageHTML =\n    ((message.content) ? format(striptags(message.content)) : '') +\n    ((message.updatedAt && message.content) ?\n      `<span\n        class=\"select-none muted edited text-xs ml-1\"\n        title=\"${message.updatedAt}\">(edited)</span>` : '');\n\n  const Attachments = () => (\n    <>\n      {message.attachmentURLs?.map(imageURL =>\n        <img\n          key={imageURL}\n          style={{ maxWidth: '384px' }}\n          className=\"my-2 cursor-pointer\"\n          onClick={() => dispatch(previewImage(imageURL))}\n          src={process.env.REACT_APP_CDN_URL + imageURL}\n          onError={(e) => {\n            e.currentTarget.onerror = null;\n            e.currentTarget.src = `${process.env.REACT_APP_CDN_URL}/images/image-not-found.png`;\n          }} />)}\n    </>\n  );\n  \n  return (editingMessageId === message.id)\n    ? <MessageBox\n        content={message.content}\n        editingMessageId={message.id} />\n    : <div className=\"relative\">\n        <div\n          style={{maxWidth: '963px'}}\n          className=\"normal whitespace-pre-wrap\">\n          <div\n            dangerouslySetInnerHTML={{ __html: messageHTML }}\n            className=\"overflow-auto\"\n            style={{ maxWidth: '100%' }} />\n          <Attachments />\n        </div>\n      </div>;\n}\n\nexport default MessageContent;","import moment from 'moment';\nimport { FunctionComponent } from 'react';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { useSelector } from 'react-redux';\nimport { getMember } from '../../../store/members';\nimport { getMemberHighestRole } from '../../../store/roles';\n\ninterface MessageHeaderProps {\n  message: Entity.Message;\n  author: Entity.User;\n  isExtra: boolean;\n}\n \nconst MessageHeader: FunctionComponent<MessageHeaderProps> = ({ author, message, isExtra }) => {\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const member = useSelector(getMember(guild.id, message.authorId));\n  const highestRole = useSelector(getMemberHighestRole(guild.id, member?.userId ?? ''));\n  if (isExtra || !member) return null;  \n  \n  const toDays = (date: Date) => date.getTime() / 1000 / 60 / 60 / 24; \n\n  const createdAt = new Date(message.createdAt);\n  const midnight = new Date(new Date().setHours(0, 0, 0, 0));\n  const daysAgo = Math.floor(toDays(midnight) - toDays(createdAt));\n  \n  const getTimestamp = () => {\n    const wasToday = midnight.getDate() === createdAt.getDate();\n    if (wasToday) return '[Today at] HH:mm';\n    else if (daysAgo === 1) return '[Yesterday at] HH:mm';\n    return 'DD/MM/YYYY';\n  };\n\n  return (\n    <div>\n      <ContextMenuTrigger id={author.id}>\n        <span\n          style={{ color: highestRole.color }}\n          className=\"text-base heading hover:underline cursor-pointer mr-2\">{author.username}</span>\n      </ContextMenuTrigger>\n      <span className=\"text-xs\">{moment(createdAt).format(getTimestamp())}</span>\n    </div>\n  );\n}\n \nexport default MessageHeader;","import './message.scoped.css';\nimport './message.global.css';\n\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getChannelMessages } from '../../../store/messages';\nimport { getUser } from '../../../store/users';\nimport MessageToolbar from './message-toolbar';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport MessageMenu from '../../ctx-menus/message-menu';\nimport classNames from 'classnames';\nimport Image from '../../utils/image';\nimport MessageContent from './message-content';\nimport MessageHeader from './message-header';\nimport { openUserProfile } from '../../../store/ui';\nimport React from 'react';\n\nexport interface MessageProps {\n  message: Entity.Message;\n}\n\nconst Message: React.FunctionComponent<MessageProps> = ({ message }: MessageProps) => {\n  const author = useSelector(getUser(message.authorId));\n  const messages = useSelector(getChannelMessages(message.channelId));\n  const createdAt = new Date(message.createdAt);\n\n  const isExtra = () => {\n    const i = messages.findIndex(m => m.id === message.id);\n    const prev = messages[i - 1];\n    if (!prev) return false;\n\n    const minsSince = moment(createdAt).diff(prev.createdAt, 'minutes');    \n    const minsToSeparate = 5;\n\n    return minsSince <= minsToSeparate\n        && prev.authorId === message.authorId;\n  }\n  const isActuallyExtra = isExtra();\n\n  const LeftSide: React.FunctionComponent = () => {\n    const dispatch = useDispatch();\n\n    return (isActuallyExtra)\n      ? <span className=\"timestamp text-xs select-none\">\n          {moment(createdAt).format('HH:mm')}\n        </span>\n      : <Image\n          className=\"rounded-full cursor-pointer w-10 h-10\"\n          src={`${process.env.REACT_APP_CDN_URL}${author.avatarURL}`}\n          onError={e => e.currentTarget.src = `${process.env.REACT_APP_CDN_URL}/avatars/unknown.png`}\n          onClick={() => dispatch(openUserProfile(author))}\n          alt={author.username} />;\n  }\n\n  return (\n    <ContextMenuTrigger key={message.id} id={message.id}>\n      <div className={classNames('message flex', { 'mt-4': !isActuallyExtra })}>\n        <div className=\"flex-shrink-0 left-side text-xs w-16 mr-2 pl-5 pt-1\"><LeftSide /></div>\n        <div className=\"relative flex-grow px-2\">\n          <div className=\"absolute toolbar right-0 -mt-3 z-10\">\n            <MessageToolbar message={message} />\n          </div>\n          <MessageHeader\n            author={author}\n            message={message}\n            isExtra={isActuallyExtra} />\n          <MessageContent message={message} />\n          {/* <MessageEmbed embed={{\n            title: 'Never Gonna Give You Up',\n            description: 'Never going to let you down',\n            imageURL: 'https://discord.club/img/preview.480aa21a.png',\n            url: 'https://discord.club/img/preview.480aa21a.png',\n          }} /> */}\n        </div>\n        <div className=\"right-side w-12\" />\n      </div>\n      <MessageMenu message={message} />\n    </ContextMenuTrigger>\n  );\n}\n\nexport default Message;","import { faEyeSlash, faHashtag } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useSelector } from 'react-redux';\n\nexport interface TextChannelHeaderProps {\n  canRead?: boolean;\n}\n \nconst TextChannelHeader: React.FunctionComponent<TextChannelHeaderProps> = ({ canRead }) => {\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  \n  return (\n    <div className=\"m-4 pb-6 border-bottom\">\n      <span className=\"rounded-full\">\n        <FontAwesomeIcon\n          className=\"muted\"\n          icon={canRead ? faHashtag : faEyeSlash}\n          size=\"3x\" />\n      </span>\n      <h1 className=\"text-3xl font-bold my-2\">\n        {(canRead)\n          ? `Welcome to #${channel.name}!`\n          : `Message history hidden.`\n        }</h1>\n      <p className=\"lead\">\n        {(canRead)\n          ? `This is the start of the #${channel.name} channel.`\n          : `Insufficient permissions to view messages in this channel.`\n        }</p>\n    </div>\n  );\n}\n\nexport default TextChannelHeader;","const SkeletonMessage: React.FunctionComponent = () => {\n  return (    \n    <div className=\"rounded-md px-5 py-2 max-w-sm w-full\">\n      <div className=\"animate-pulse flex space-x-4\">\n        <div className=\"rounded-full bg-bg-tertiary h-10 w-10\"></div>\n        <div className=\"flex-1 space-y-4 py-1\">\n          <div className=\"h-4 bg-bg-tertiary rounded w-3/4\"></div>\n          <div className=\"space-y-2\">\n            <div className=\"h-4 bg-bg-tertiary rounded\"></div>\n            <div className=\"h-4 bg-bg-tertiary rounded w-5/6\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n \nexport default SkeletonMessage;","import { useDispatch, useSelector } from 'react-redux';\nimport { fetchMessages, getChannelMessages } from '../../store/messages';\nimport Message from './message/message';\nimport MessageBox from './message-box';\nimport { useEffect, useState } from 'react';\nimport TextChannelHeader from './text-channel-header';\nimport usePerms from '../../hooks/use-perms';\nimport SkeletonMessage from '../skeleton/skeleton-message';\n \nconst TextBasedChannel: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const channel = useSelector((s: Store.AppState) => s.ui.activeChannel)!;\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const messages = useSelector(getChannelMessages(channel.id));\n  const perms = usePerms();\n  const [cachedContent, setCachedContent] = useState<Util.Dictionary>({});  \n\n  useEffect(() => {\n    dispatch(fetchMessages(channel.id));\n\n    const element = document.querySelector('#messages')!;\n    element.scrollTop = element.scrollHeight;\n  }, [messages.length]); // only fetches channel messages when not cached\n\n  useEffect(() => {\n    const messageBox = document.querySelector('#messageBox') as HTMLTextAreaElement;\n    messageBox.focus();\n  }, [channel.id]);\n\n  const loaded = channel.lastMessageId === messages[messages.length]?.id;\n  const canRead = perms.canInChannel('READ_MESSAGES', guild.id, channel.id);\n\n  return (\n    <div className=\"h-full flex flex-col flex-grow\">\n      <div\n        id=\"messages\"\n        className=\"overflow-auto mb-5 mr-1 mt-1 flex-grow\">\n        <TextChannelHeader canRead={canRead} />\n        {!(canRead || loaded) && new Array(6).fill(0).map((_, i) => <SkeletonMessage key={i} />)}\n        {canRead && messages.map(m => <Message key={m.id} message={m} />)}\n      </div>\n      <MessageBox\n        cachedContent={cachedContent}\n        setCachedContent={setCachedContent} />\n    </div>\n  );\n}\n\nexport default TextBasedChannel;","import Select from 'react-select';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getGuildRoles } from '../../../store/guilds';\nimport { useState } from 'react';\nimport { updateMember } from '../../../store/members';\nimport usePerms from '../../../hooks/use-perms';\n\nexport interface RoleManagerProps {\n  member: Entity.GuildMember;\n}\n\nconst RoleManager: React.FunctionComponent<RoleManagerProps> = ({ member }) => {\n  const removeEveryone = (arr: any[]) => arr.slice(1);\n  const slicedRoleIds = removeEveryone(member.roleIds);\n\n  const perms = usePerms();\n  const dispatch = useDispatch();\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const roles = removeEveryone(useSelector(getGuildRoles(guild.id)));\n  const [roleIds, setRoleIds] = useState(slicedRoleIds);\n\n  const colorStyles = {\n    control: () => ({\n      width: '200px',\n      backgroundColor: 'var(--bg-secondary)',\n    }),\n    option: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      backgroundColor: 'var(--bg-secondary)',\n      cursor: (data.disabled) ? 'not-allowed' : 'pointer',\n      opacity: (data.disabled) ? 0.5 : 1,\n    }),\n    input: (styles) => ({ ...styles, color: 'var(--font)' }),\n    menu: (styles) => ({\n      ...styles,\n      backgroundColor: 'var(--bg-secondary)',\n    }),\n    multiValue: (styles) => ({\n      ...styles,\n      color: 'var(--font)',\n      backgroundColor: 'var(--bg-tertiary)',\n    }),\n    indicatorSeparator: () => ({ display: 'none' }),\n    indicatorsContainer: (styles) => ({ ...styles, float: 'right' }),\n    multiValueLabel: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      backgroundColor: 'var(--bg-tertiary)',\n    }),\n  };\n  \n  const rolesHaveChanged = JSON.stringify(roleIds) !== JSON.stringify(slicedRoleIds);\n  const roleOption = (role: Entity.Role) => ({\n    label: role.name,\n    value: role.id,\n    color: role.color,\n    disabled: !perms.memberIsHigher(guild.id, [role.id]),\n  });\n  \n  return (\n    <div onClick={e => e.preventDefault()}>\n      <Select\n        defaultValue={roleIds.map(id => {\n          const role = roles.find(r => r.id === id);\n          return (role) ? roleOption(role) : undefined;\n        })}\n        name=\"colors\"\n        options={roles.map(roleOption)}\n        isOptionDisabled={(option) => option.disabled}\n        onChange={options => setRoleIds(options.map(o => o.value))}\n        onMenuClose={() => rolesHaveChanged && dispatch(updateMember(member.id, { roleIds }))}\n        styles={colorStyles}\n        placeholder=\"Add roles...\"\n        noOptionsMessage={() => 'No roles to add'}\n        // onChange={e => setRoleIds(e.currentTarget.value as any)}\n        // onClick={() => dispatch(updateMember(member.id, { roleIds }))}\n        isMulti />\n    </div>\n  );\n}\n\nexport default RoleManager;","import { faBan, faIdCard, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport usePerms from '../../../hooks/use-perms';\nimport { getMember, kickMember } from '../../../store/members';\nimport { actions as ui, openUserProfile } from '../../../store/ui';\nimport { toggleBlockUser } from '../../../store/users';\nimport UserProfile from '../../modals/user-profile';\nimport Category from '../../utils/category';\nimport DevModeMenuSection from '../dev-mode-menu-section';\nimport RoleManager from './role-manager';\n\nexport interface GuildMemberMenuProps {\n  user: Entity.User;\n}\n\nconst GuildMemberMenu: React.FunctionComponent<GuildMemberMenuProps> = ({ user }) => {\n  const dispatch = useDispatch();\n  const perms = usePerms();\n  const selfUser = useSelector((s: Store.AppState) => s.auth.user)!;\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const member = useSelector(getMember(guild.id, user.id))!;\n  const devMode = useSelector((s: Store.AppState) => s.config.devMode);\n\n  const isSelf = user.id === selfUser.id;  \n  const userIsBlocked = selfUser.ignored?.userIds.includes(member.userId);\n\n  const canKick = perms.can('KICK_MEMBERS', guild.id);\n  const canManage = perms.can('MANAGE_ROLES', guild.id);\n\n  const onKickMember = () => {\n    const discrim = user.discriminator.toString().padStart(4, '0');\n    const isConfirmed = window.confirm(`Kick ${user.username}#${discrim}`);\n    if (isConfirmed)\n      dispatch(kickMember(guild.id, user.id));\n  }\n\n  return (\n    <ContextMenu\n      id={user.id}\n      className=\"bg-bg-tertiary p-2 rounded shadow\">\n      <MenuItem\n        onClick={() => dispatch(openUserProfile(user))}\n        className=\"flex items-center justify-between cursor-pointer\">\n        <span>View Profile</span>\n        <FontAwesomeIcon icon={faUser} />\n      </MenuItem>\n      \n      {user.id !== selfUser.id && (<>\n        <hr className=\"my-2 border-bg-primary\" />\n        <MenuItem className=\"flex items-center justify-between  cursor-pointer danger\">\n          <span\n            onClick={() => dispatch(toggleBlockUser(member.userId))}>\n            {userIsBlocked ? 'Unblock' : 'Block'}\n          </span>\n          <FontAwesomeIcon icon={faBan} />\n        </MenuItem>\n      </>)}\n\n      {(canKick || canManage) && (\n        <div>\n          <hr className=\"my-2 border-bg-primary\" />\n          <Category title=\"Manage Roles\" className=\"pb-2\" />\n\n          {(!isSelf && perms.can('KICK_MEMBERS', guild.id)) && (\n            <MenuItem\n              className=\"danger cursor-pointer mb-2\"\n              onClick={onKickMember}>\n              <span>Kick {user.username}</span>\n            </MenuItem>\n          )}\n          {perms.can('MANAGE_ROLES', guild.id) && <RoleManager member={member} />}\n        </div>\n      )}\n\n      <div className=\"my-4\" />\n      {devMode && <DevModeMenuSection ids={[\n        { title: 'User ID', id: user.id },\n        { title: 'Member ID', id: member.id },\n      ]} />}\n    </ContextMenu>\n  );\n}\n \nexport default GuildMemberMenu;","import Category from '../utils/category';\nimport Username from './username';\nimport { useSelector } from 'react-redux';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport GuildMemberMenu from '../ctx-menus/guild-member/guild-member-menu';\nimport { getGuildMembers, getGuildUsers } from '../../store/guilds';\nimport { filterHoistedRoles } from '../../store/roles';\nimport usePerms from '../../hooks/use-perms';\n\nconst MemberList: React.FunctionComponent = () => {\n  const perms = usePerms();\n  const guild = useSelector((s: Store.AppState) => s.ui.activeGuild)!;\n  const isActive = useSelector((s: Store.AppState) => s.config.memberListToggled);\n  const hoistedRoles = useSelector(filterHoistedRoles(guild.id));\n  const members = useSelector(getGuildMembers(guild.id));\n\n  // get users that can view the channel\n  const users = useSelector(getGuildUsers(guild.id))\n    .filter(u => {\n      const member = members.find(m => m.userId === u.id)!;\n      return perms.canMember('VIEW_CHANNELS', guild, member);\n    });\n   \n  type UserListFilter = (s: Entity.User, i: number, a: Entity.User[]) => boolean;\n  const UserList = ({ category, filter: by }: { category: string, filter: UserListFilter }) => {\n    const filtered = users\n      .filter(by)\n      .sort((a, b) => a.username.localeCompare(b.username));\n\n    return (filtered.length) ? (\n      <div>\n        <Category\n          className=\"pt-6 pr-2 pl-4 h-10 mb-2 ml-2\"\n          title={category}\n          count={filtered.length} />\n        {filtered.map(u => (\n          <ContextMenuTrigger\n            id={u.id}\n            key={u.id}>\n            <div className=\"m-2\">\n              <Username guild={guild} user={u} />\n            </div>\n            <GuildMemberMenu user={u} />\n          </ContextMenuTrigger>\n        ))}\n      </div>\n    ) : null;\n  }\n\n  const getRoleIds = (userId: string) => members.find(m => m.userId === userId)!.roleIds;\n  const byPositionDesc = (a, b) => (a.position < b.position) ? 1 : -1\n  const hoistedRoleIds = (user: Entity.User) => getRoleIds(user.id)\n    .map(id => hoistedRoles.find(r => id === r.id))\n    .filter(r => r) // role could be deleted, on member\n    .sort(byPositionDesc)\n    .map(r => r!.id);\n\n  return (isActive) ? (\n    <div className=\"overflow-auto bg-bg-secondary w-64\">\n      {hoistedRoles.map(r =>\n        <UserList\n          key={r.id}\n          category={r.name}\n          filter={u => (\n            getRoleIds(u.id).includes(r.id)\n              && hoistedRoleIds(u)[0] === r.id\n              && u.status === 'ONLINE')} />\n      )}\n      <UserList\n        category=\"Online\"\n        filter={u => u.status === 'ONLINE' && !hoistedRoleIds(u).length} />\n      <UserList\n        category=\"Offline\"\n        filter={u => u.status === 'OFFLINE'} />\n    </div>\n  ) : null;\n}\n \nexport default MemberList;","import { useDispatch, useSelector } from 'react-redux';\nimport AppNavbar from '../navigation/app-navbar';\nimport Sidebar from '../navigation/sidebar/sidebar';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { actions as uiActions } from '../../store/ui';\nimport TextBasedChannel from '../channel/text-based-channel';\nimport MemberList from '../user/member-list';\nimport { getGuild, getGuildChannels } from '../../store/guilds';\nimport { useEffect } from 'react';\nimport PageWrapper from './page-wrapper';\nimport { getChannel } from '../../store/channels';\n\nconst GuildPage: React.FunctionComponent = () => {  \n  const { channelId, guildId }: any = useParams();\n  const dispatch = useDispatch();\n  const ui = useSelector((s: Store.AppState) => s.ui);\n  const guild = useSelector(getGuild(guildId));\n  const channel = useSelector(getChannel(channelId));\n  const guildChannels = useSelector(getGuildChannels(guildId));\n\n  useEffect(() => {\n    dispatch(uiActions.pageSwitched({ channel, guild }));\n  }, [guild, channel]);\n\n  if (!guild) \n    return <Redirect to=\"/channels/@me\" />;\n  else if (guildChannels.length && !channelId) {\n    const systemChannel = guildChannels[0];\n    return <Redirect to={`/channels/${guild.id}/${systemChannel.id}`} />;\n  }  \n\n  return (ui.activeGuild) ? (\n    <PageWrapper pageTitle={channel?.name ?? guild.name}>\n      <Sidebar />\n      {(channel)\n        ? <div className=\"bg-bg-primary\">\n            <AppNavbar />\n            <div\n              style={{ height: 'calc(100vh - 48px)' }}\n              className=\"flex\">\n              {ui.activeChannel && {\n                'TEXT': <TextBasedChannel />,\n                'VOICE': <div className=\"w-full p-2\">Add something cool here for voice channels?</div>,\n              }[channel.type]}\n              <MemberList />\n            </div>\n          </div>\n        : <div className=\"bg-bg-tertiary\" />}\n    </PageWrapper>\n  ) : null;\n}\n \nexport default GuildPage;","import { FunctionComponent } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport Input from '../../utils/input/input';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport { sendVerifyCode } from '../../../store/auth';\n\ninterface VerifyCodeInputProps {}\n \nconst VerifyCodeInput: FunctionComponent<VerifyCodeInputProps> = () => {\n  const dispatch = useDispatch();\n  const verifyForm = useForm();\n  const onVerify = () => dispatch(sendVerifyCode(verifyForm.getValues().code));\n  \n  return (\n    <div>\n      <hr className=\"border-gray-500 my-4\" />\n      <div className=\"flex items-end\">\n        <Input\n          type=\"text\" \n          name=\"code\"\n          label=\"Verify Code\"\n          className=\"w-full mr-2\"\n          register={verifyForm.register} />\n        <NormalButton\n          type=\"button\"\n          onClick={onVerify}\n          className=\"bg-success text-black h-10\">Verify</NormalButton>\n      </div>\n    </div>\n  );\n}\n \nexport default VerifyCodeInput;","import './login-page.scoped.css';\n\nimport { Link, Redirect, useLocation } from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PageWrapper from '../page-wrapper';\nimport Input from '../../utils/input/input';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport { loginUser, forgotPasswordEmail, sendVerifyCode } from '../../../store/auth';\nimport { useState } from 'react';\nimport VerifyCodeInput from './verify-code-input';\n\nconst LoginPage: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, getValues } = useForm();\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  const shouldVerify = useSelector((s: Store.AppState) => s.auth.shouldVerify);\n  const query = new URLSearchParams(useLocation().search);\n  const [email, setEmail] = useState(query.get('email') ?? '');\n\n  const onLogin = (data) => dispatch(loginUser(data));\n  const resetPassword = () => dispatch(forgotPasswordEmail(getValues().email));\n\n  return (user)\n    ? <Redirect to=\"/channels/@me\" />\n    : (\n      <PageWrapper pageTitle=\"accord.app | Login\">\n        <div className=\"flex items-center absolute justify-center h-screen\">\n          <form\n            className=\"rounded-md shadow bg-bg-primary p-8\"\n            onSubmit={handleSubmit(onLogin)}>\n            <h1 className=\"text-3xl font-bold\">Welcome back!</h1>\n            <p className=\"lead\">We're so excited to see you again!</p>\n\n            <Input\n              label=\"Email\"\n              name=\"email\"\n              register={register}\n              className=\"mt-3\"\n              defaultValue={email!}\n              onInput={(e) => setEmail(e.currentTarget.value)} />\n            <Input\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              register={register}\n              className=\"mt-3\" />\n            <Link to=\"#\" onClick={resetPassword}>Forgot your password?</Link>\n\n            {shouldVerify && <VerifyCodeInput />}\n\n            <NormalButton className=\"bg-primary font w-full h-11 rounded-md mt-8\">\n              {(shouldVerify) ? 'Resend Code' : 'Login'}\n            </NormalButton>\n            <p className=\"mt-2\">Need an account? <Link to={`/register${email && `?email=${email}`}`}>Register</Link></p>\n          </form>\n        </div>\n        <Particles width=\"100%\" height=\"100%\" />\n      </PageWrapper>\n    );\n}\n\nexport default LoginPage;","import Particles from 'react-particles-js';\nimport { Link, Redirect, useLocation } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\n\nimport './register-page.scoped.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { registerUser } from '../../../store/auth';\nimport NormalButton from '../../utils/buttons/normal-button';\nimport PageWrapper from '../page-wrapper';\nimport Input from '../../utils/input/input';\nimport { useState } from 'react';\n\nconst RegisterPage: React.FunctionComponent = () => {\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  const dispatch = useDispatch();\n  const { register, handleSubmit } = useForm();\n  const query = new URLSearchParams(useLocation().search);\n  const [email, setEmail] = useState(query.get('email') ?? '');\n\n  const onSubmit = (data) => dispatch(registerUser(data));\n\n  return (user)\n    ? <Redirect to=\"/channels/@me\" />\n    : (\n      <PageWrapper>\n        <div className=\"flex items-center justify-center absolute h-screen\">\n          <form className=\"rounded-md shadow bg-bg-primary p-8\"\n            onSubmit={handleSubmit(onSubmit)}>\n            <h1 className=\"text-2xl font-bold mb-8 text-center\">Create an account</h1>\n\n            <Input\n              label=\"Email\"\n              name=\"email\"\n              register={register}\n              className=\"mt-3\"\n              defaultValue={email!}\n              onInput={(e) => setEmail(e.currentTarget.value)} />\n            <Input\n              label=\"Username\"\n              name=\"username\"\n              register={register}\n              className=\"mt-3\" />\n            <Input\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              register={register}\n              className=\"mt-3\" />\n\n            <NormalButton className=\"bg-primary font w-full h-11 rounded-md mt-8\">Register</NormalButton>\n            <p className=\"mt-2\">\n              <Link to={`/login${email && `?email=${email}`}`}>Already have an account?</Link>\n            </p>\n          </form>\n        </div>\n        <Particles width=\"100%\" height=\"100%\" />\n      </PageWrapper>\n    );\n}\n\nexport default RegisterPage;","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions as ui } from '../../store/ui';\nimport AppNavbar from '../navigation/app-navbar';\nimport Sidebar from '../navigation/sidebar/sidebar';\nimport PageWrapper from './page-wrapper';\n\nconst OverviewPage: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(ui.pageSwitched({ channel: null, guild: null }));\n  }, []);\n\n  return (\n    <PageWrapper\n      className=\"bg-bg-primary h-full w-full\"\n      pageTitle=\"accord.app\">\n      <Sidebar />\n      <AppNavbar />\n      <div className=\"bg-bg-primary h-full w-full flex flex-col flex-grow\"></div>\n    </PageWrapper>\n  );\n}\n \nexport default OverviewPage;","import { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { logoutUser } from '../../../store/auth';\n\nconst LogoutPage: React.FunctionComponent = () => {\n  useDispatch()(logoutUser());\n  \n  return <Redirect to=\"/\" push />;\n}\n \nexport default LogoutPage;","import { actions as api } from '../api';\nimport { actions as channelActions } from '../channels';\nimport { actions as guildActions } from '../guilds';\nimport { actions as memberActions } from '../members';\nimport { actions as meta } from '../meta';\nimport { actions as roleActions } from '../roles';\nimport { actions as userActions } from '../users';\nimport { headers } from '../utils/rest-headers';\n\nexport default () => (dispatch) => {\n  dispatch(api.restCallBegan({\n    onSuccess: [],\n    headers: headers(),\n    url: `/users/entities`,\n    callback: (data: REST.From.Get['/users/entities']) => {\n      dispatch(channelActions.fetched(data.channels));\n      dispatch(guildActions.fetched(data.guilds));\n      dispatch(memberActions.fetched(data.members));\n      dispatch(roleActions.fetched(data.roles));\n      dispatch(userActions.fetched(data.users));\n      dispatch(meta.fetchedEntities());\n    },\n  }));  \n}","import { useEffect } from 'react';\nimport PageWrapper from './page-wrapper';\nimport { ready } from '../../store/auth';\nimport { useDispatch } from 'react-redux';\nimport fetchEntities from '../../store/actions/fetch-entities';\n\nconst LoadingPage: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(ready());\n    dispatch(fetchEntities());\n  }, []);\n\n  const tips = [\n    'Did Discord steal our idea?!?!',\n    'ADAMJR, Stop refactoring code please. okthxbye.',\n    'Sample Text.',\n    '!(\\'Hello World\\')',\n    'May work on a Tesla',\n    'Please subscribe.',\n    'Hi YouTube!',\n    'accord.includes(\\'VOICE_CHANNEL\\') === false',\n    'This message is officially dumb.',\n    'This message is funny.',\n    'Dear Bill Gates please buy my app okthxbye.',\n    'Is coding the same as programming? :thinking:',\n    'TypeError: There may be bugs.',\n    'What is a Discord? :thinking:',\n    'What\\'s your Skype? Wait, actually I don\\'t want your IP. Cya.',\n    'Started in 2020.',\n    'Disclaimer: Not actually a Discord clone.',\n  ];\n  const randomIndex = Math.floor(Math.random() * tips.length);\n\n  return (\n    <PageWrapper\n      pageTitle=\"Loading...\"\n      className=\"flex items-center justify-center h-screen\">\n      <div className=\"text-center\">\n        <h1 className=\"text-3xl\">Loading...</h1>\n        <p className=\"lead block\">{tips[randomIndex]}</p>\n      </div>\n    </PageWrapper>\n  );\n}\n \nexport default LoadingPage;\n","import { useSelector } from 'react-redux';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport LoadingPage from '../pages/loading-page';\n\n// this route ensures that the user is logged in, else redirects them \nconst PrivateRoute: React.FunctionComponent<RouteProps> = (props) => {\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  const fetchedEntities = useSelector((s: Store.AppState) => s.meta.fetchedEntities);\n  const attemptedLogin = useSelector((s: Store.AppState) => s.auth.attemptedLogin);\n\n  if (attemptedLogin && !user)\n    return <Redirect to=\"/login\" />;\n  else if (!user || !fetchedEntities)\n    return <LoadingPage />;\n  \n  return (\n    <Route {...props} />\n  );\n}\n \nexport default PrivateRoute;","import Particles from 'react-particles-js';\nimport { Link } from 'react-router-dom';\nimport CircleButton from '../utils/buttons/circle-button';\nimport PageWrapper from './page-wrapper';\n\nconst NotFoundPage: React.FunctionComponent = () => {\n  return (\n    <PageWrapper\n      className=\"relative w-screen h-screen\"\n      pageTitle=\"accord.app | Not Found\">\n      <header className=\"absolute text-center bottom-1/2 right-1/2\">\n        <h1 className=\"text-4xl pb-3\">Not Found</h1>\n        <Link to=\"/\">\n          <CircleButton>Return Home</CircleButton>\n        </Link>\n      </header>\n      <Particles width=\"100%\" height=\"100%\" />\n    </PageWrapper>\n  );\n}\n \nexport default NotFoundPage;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, useLocation } from 'react-router';\nimport { sendVerifyCode } from '../../../store/auth';\nimport LoadingPage from '../loading-page';\n\nconst VerifyPage: React.FunctionComponent = () => {\n  const user = useSelector((s: Store.AppState) => s.auth.user);\n  const dispatch = useDispatch();\n  const query = new URLSearchParams(useLocation().search);\n  const code = query.get('code')?.toString();\n  \n  useEffect(() => {\n    if (code)\n      dispatch(sendVerifyCode(code));\n  }, []);\n\n  if (user) return <Redirect to=\"/channels/@me\" />;\n  if (code) return <LoadingPage />;\n\n  return <Redirect to=\"/\" />;\n}\n \nexport default VerifyPage;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/home-page';\nimport GuildPage from './pages/guild-page';\nimport LoginPage from './pages/auth/login-page';\nimport RegisterPage from './pages/auth/register-page';\nimport OverviewPage from './pages/overview-page';\nimport LogoutPage from './pages/auth/logout-page';\nimport PrivateRoute from './routing/private-route';\nimport NotFoundPage from './pages/not-found-page';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport fetchEntities from '../store/actions/fetch-entities';\nimport { ready } from '../store/auth';\nimport { initPings } from '../store/pings';\nimport VerifyPage from './pages/auth/verify-page';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(ready());\n    dispatch(fetchEntities());\n    dispatch(initPings());\n  }, []);\n  \n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/login\" component={LoginPage} />\n        <Route exact path=\"/register\" component={RegisterPage} />\n        <Route exact path=\"/logout\" component={LogoutPage} />\n        <Route exact path=\"/verify\" component={VerifyPage} />\n\n        <PrivateRoute exact path=\"/channels/@me\" component={OverviewPage} />\n        <PrivateRoute exact path=\"/channels/:guildId/:channelId?\" component={GuildPage} />\n\n        <Route path=\"*\" component={NotFoundPage} />\n      </Switch>\n    </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\nimport { actions, APIArgs } from '../api';\nimport { openDialog } from '../ui';\n\nexport default (store) => (next) => async (action) => {\n  if (action.type !== actions.restCallBegan.type)\n    return next(action);\n\n  const { url, method, data, onSuccess, headers, callback } = action.payload as APIArgs;\n\n  next(action);\n\n  try {\n    const { data: payload } = await axios.request({\n      baseURL: process.env.REACT_APP_API_URL,\n      data,\n      method,\n      url,\n      headers,\n    });\n\n    store.dispatch(actions.restCallSucceded(payload));\n    if (onSuccess)\n      for (const type of onSuccess)\n        store.dispatch({ type, payload });\n\n    // called after dispatch events\n    callback && await callback(payload);\n  } catch (error) {\n    const response = (error as any).response;\n    store.dispatch(actions.restCallFailed({ url, response }));\n    store.dispatch(openDialog({\n      content: response?.data?.message ?? 'Unknown Error',\n      variant: 'error',\n    }));\n  }\n};","import { actions } from '../api';\nimport ws from '../../services/ws-service';\n\nexport default (store) => (next) => async (action) => {\n  if (action.type !== actions.wsCallBegan.type)\n    return next(action);\n  \n  const { data, event } = action.payload;\n\n  next(action);\n\n  const unsub = () => {\n    ws.off(event, wrapperCallback);\n    ws.off('error', errorCallback);\n  };\n\n  const wrapperCallback = (payload) => {\n    unsub();\n    store.dispatch(actions.wsCallSucceded({\n      event,\n      payload,\n    }));\n  };\n  const errorCallback = (payload) => {\n    unsub();\n    store.dispatch(actions.wsCallFailed({\n      event,\n      payload,\n    }));\n  }\n\n  ws.on(event, wrapperCallback);\n  ws.on('error', errorCallback);\n\n  ws.emit(event, data);\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configure-store';\nimport { SnackbarProvider } from 'notistack';\n\nimport './index.css';\n\nReactDOM.render(\n  <SnackbarProvider maxSnack={1}>\n    <Provider store={configureStore()}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </SnackbarProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport guilds from './guilds';\nimport messages from './messages';\nimport api from './middleware/rest';\nimport ws from './middleware/ws';\nimport users from './users';\nimport channels from './channels';\nimport auth from './auth';\nimport config from './config';\nimport ui from './ui';\nimport meta from './meta';\nimport members from './members';\nimport invites from './invites';\nimport roles from './roles';\nimport typing from './typing';\nimport pings from './pings';\n\nexport default () => configureStore<Store.AppState>({\n  middleware: [\n    ...getDefaultMiddleware({ serializableCheck: false }),\n    ws,\n    api,\n  ] as any,\n  reducer: combineReducers({\n    auth,\n    config,\n    entities: combineReducers({\n      channels,\n      invites,\n      guilds,\n      members,\n      messages,\n      pings,\n      typing,\n      roles,\n      users,\n    }),\n    meta,\n    ui,\n  }),\n});\n"],"sourceRoot":""}